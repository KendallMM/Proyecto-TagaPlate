Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ba0523e4-c17a-499c-8c9d-9960f72ac75a\" name=\"Changes\" comment=\"todo en TagaPlate.py\">\r\n      <change beforePath=\"$PROJECT_DIR$/Pruebas/Variables.tgp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Pruebas/Variables.tgp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/TagaPlate.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/TagaPlate.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/parser.out\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/parser.out\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/parsetab.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/parsetab.py\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"a7a8f410-996f-4d70-98a8-bc5f5cae8358\" name=\"Changes by kendall\" comment=\"Changes by kendall\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2DYNp5yAo8r1mYvA5FRstFNRJVj\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;codeWithMe.voiceChat.enabledByDefault&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Usuario/Documents/GitHub/Proyecto-TagaPlate/ply-3.11&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Usuario\\Documents\\GitHub\\Proyecto-TagaPlate\\ply-3.11\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Usuario\\Documents\\GitHub\\Proyecto-TagaPlate\\TagaPlate Compiler\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.TagaPlate\">\r\n    <configuration name=\"LexicalAnalyzer\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Proyecto-TagaPlate\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\Usuario\\Documents\\GitHub\\Proyecto-TagaPlate\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"C:\\Users\\Usuario\\Documents\\GitHub\\Proyecto-TagaPlate\\LexicalAnalyzer.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"RunOperations\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Proyecto-TagaPlate\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\Usuario\\Documents\\GitHub\\Proyecto-TagaPlate\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/RunOperations.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"SyntaxAnalyzer\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Proyecto-TagaPlate\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\Usuario\\Documents\\GitHub\\Proyecto-TagaPlate\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"C:\\Users\\Usuario\\Documents\\GitHub\\Proyecto-TagaPlate\\SyntaxAnalyzer.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"TagaPlate IDE\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Proyecto-TagaPlate\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/TagaPlate IDE.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"TagaPlate\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Proyecto-TagaPlate\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\Usuario\\Documents\\GitHub\\Proyecto-TagaPlate\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"C:\\Users\\Usuario\\Documents\\GitHub\\Proyecto-TagaPlate\\TagaPlate.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"semanticAnalyzer\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Proyecto-TagaPlate\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\Usuario\\Documents\\GitHub\\Proyecto-TagaPlate\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/semanticAnalyzer.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.SyntaxAnalyzer\" />\r\n        <item itemvalue=\"Python.LexicalAnalyzer\" />\r\n        <item itemvalue=\"Python.TagaPlate IDE\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ba0523e4-c17a-499c-8c9d-9960f72ac75a\" name=\"Changes\" comment=\"\" />\r\n      <created>1660872241387</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1660872241387</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Create tokens\">\r\n      <created>1660874868234</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660874868234</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Analizador léxico finalizado\">\r\n      <created>1661321864220</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661321864220</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Analizador léxico finalizado v2\">\r\n      <created>1661406783620</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661406783620</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"sintactico empezado\">\r\n      <created>1661408481919</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661408481919</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Sintactico terminado v2\">\r\n      <created>1661836420490</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661836420490</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"semanticAnalyzer.py sin terminar\">\r\n      <created>1662182790055</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1662182790055</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"tagaplate.py mejorado\">\r\n      <created>1662423121919</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1662423121919</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"tagaplate.py comentado\">\r\n      <created>1662423927583</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1662423927583</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"tagaplate.py mejorado v2\">\r\n      <created>1662431941122</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1662431941122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"tagaplate.py mejorado v3\">\r\n      <created>1662433964845</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1662433964845</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"tagaplate.py mejorado v4\">\r\n      <created>1662434368332</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1662434368332</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"cambios varios\">\r\n      <created>1662437912956</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1662437912956</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Se sigue avanzando el desarrollo del Analizador Semantico\">\r\n      <created>1662520562534</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1662520562534</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Se continuo el desarrollo del analizador semantico\">\r\n      <created>1662607177796</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1662607177796</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"fix sintax analysis for print function\">\r\n      <created>1662785954621</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1662785954621</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Add classes to parse tree\">\r\n      <created>1662877853729</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1662877853730</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Build parse tree\">\r\n      <created>1663048564191</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663048564191</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Parse tree finished\">\r\n      <created>1663126414270</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663126414270</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Changes by kendall\">\r\n      <created>1663126430226</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663126430226</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"semanticas de linea\">\r\n      <created>1663469560479</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663469560479</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Analisis semantico terminado\">\r\n      <created>1663643523132</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663643523132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Errores de declaracion de variables\">\r\n      <created>1663654766921</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663654766921</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Semantica terminada\">\r\n      <created>1663699374362</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663699374362</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Semantica terminada\">\r\n      <created>1663725361885</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663725361885</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"update\">\r\n      <created>1663822810366</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663822810366</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"run operations\">\r\n      <created>1663826115905</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663826115905</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"Changes by kendall\">\r\n      <created>1663826135832</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663826135832</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"funciones auxiliares\">\r\n      <created>1663906780468</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663906780469</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"todo en TagaPlate.py\">\r\n      <created>1663910033367</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1663910033367</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"30\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Analizador léxico finalizado v2\" />\r\n    <MESSAGE value=\"sintactico empezado\" />\r\n    <MESSAGE value=\"Sintactico terminado v2\" />\r\n    <MESSAGE value=\"semanticAnalyzer.py sin terminar\" />\r\n    <MESSAGE value=\"tagaplate.py mejorado\" />\r\n    <MESSAGE value=\"tagaplate.py comentado\" />\r\n    <MESSAGE value=\"tagaplate.py mejorado v2\" />\r\n    <MESSAGE value=\"tagaplate.py mejorado v3\" />\r\n    <MESSAGE value=\"tagaplate.py mejorado v4\" />\r\n    <MESSAGE value=\"cambios varios\" />\r\n    <MESSAGE value=\"Se sigue avanzando el desarrollo del Analizador Semantico\" />\r\n    <MESSAGE value=\"Se continuo el desarrollo del analizador semantico\" />\r\n    <MESSAGE value=\"fix sintax analysis for print function\" />\r\n    <MESSAGE value=\"Add classes to parse tree\" />\r\n    <MESSAGE value=\"Build parse tree\" />\r\n    <MESSAGE value=\"Parse tree finished\" />\r\n    <MESSAGE value=\"semanticas de linea\" />\r\n    <MESSAGE value=\"Analisis semantico terminado\" />\r\n    <MESSAGE value=\"Errores de declaracion de variables\" />\r\n    <MESSAGE value=\"Semantica terminada\" />\r\n    <MESSAGE value=\"update\" />\r\n    <MESSAGE value=\"run operations\" />\r\n    <MESSAGE value=\"Changes by kendall\" />\r\n    <MESSAGE value=\"funciones auxiliares\" />\r\n    <MESSAGE value=\"todo en TagaPlate.py\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"todo en TagaPlate.py\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,8 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ba0523e4-c17a-499c-8c9d-9960f72ac75a" name="Changes" comment="todo en TagaPlate.py">
+    <list default="true" id="ba0523e4-c17a-499c-8c9d-9960f72ac75a" name="Changes" comment="Else listo">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ParseTree.py" beforeDir="false" afterPath="$PROJECT_DIR$/ParseTree.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Pruebas/Variables.tgp" beforeDir="false" afterPath="$PROJECT_DIR$/Pruebas/Variables.tgp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/SyntaxAnalyzer.py" beforeDir="false" afterPath="$PROJECT_DIR$/SyntaxAnalyzer.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/TagaPlate.py" beforeDir="false" afterPath="$PROJECT_DIR$/TagaPlate.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/parser.out" beforeDir="false" afterPath="$PROJECT_DIR$/parser.out" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/parsetab.py" beforeDir="false" afterPath="$PROJECT_DIR$/parsetab.py" afterDir="false" />
@@ -404,7 +407,14 @@
       <option name="project" value="LOCAL" />
       <updated>1663910033367</updated>
     </task>
-    <option name="localTasksCounter" value="30" />
+    <task id="LOCAL-00030" summary="Else listo">
+      <created>1663910588538</created>
+      <option name="number" value="00030" />
+      <option name="presentableId" value="LOCAL-00030" />
+      <option name="project" value="LOCAL" />
+      <updated>1663910588538</updated>
+    </task>
+    <option name="localTasksCounter" value="31" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -419,7 +429,6 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="Analizador léxico finalizado v2" />
     <MESSAGE value="sintactico empezado" />
     <MESSAGE value="Sintactico terminado v2" />
     <MESSAGE value="semanticAnalyzer.py sin terminar" />
@@ -444,6 +453,7 @@
     <MESSAGE value="Changes by kendall" />
     <MESSAGE value="funciones auxiliares" />
     <MESSAGE value="todo en TagaPlate.py" />
-    <option name="LAST_COMMIT_MESSAGE" value="todo en TagaPlate.py" />
+    <MESSAGE value="Else listo" />
+    <option name="LAST_COMMIT_MESSAGE" value="Else listo" />
   </component>
 </project>
\ No newline at end of file
Index: parser.out
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Created by PLY version 3.11 (http://www.dabeaz.com/ply)\r\n\r\nGrammar\r\n\r\nRule 0     S' -> program\r\nRule 1     program -> COMMENT procedures principal procedures end\r\nRule 2     principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON\r\nRule 3     principal -> empty\r\nRule 4     procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures\r\nRule 5     procedures -> empty\r\nRule 6     instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\nRule 7     instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\nRule 8     instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\nRule 9     instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\nRule 10    instructions -> instructions MOVR SEMICOLON commentary\r\nRule 11    instructions -> instructions MOVL SEMICOLON commentary\r\nRule 12    instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary\r\nRule 13    instructions -> instructions STOP SEMICOLON commentary\r\nRule 14    instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\nRule 15    instructions -> instructions untilbody SEMICOLON commentary\r\nRule 16    instructions -> instructions whilebody SEMICOLON commentary\r\nRule 17    instructions -> instructions casebody SEMICOLON commentary\r\nRule 18    instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\nRule 19    instructions -> instructions istrue SEMICOLON commentary\r\nRule 20    instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary\r\nRule 21    instructions -> empty\r\nRule 22    commentary -> COMMENT\r\nRule 23    commentary -> empty\r\nRule 24    datatype -> NUMVAL\r\nRule 25    datatype -> BOOLVAL\r\nRule 26    value -> NUMBER\r\nRule 27    value -> TRUE\r\nRule 28    value -> FALSE\r\nRule 29    value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT\r\nRule 30    operator -> ADD\r\nRule 31    operator -> SUB\r\nRule 32    operator -> MUL\r\nRule 33    operator -> DIV\r\nRule 34    comparator -> GT\r\nRule 35    comparator -> LT\r\nRule 36    comparator -> GET\r\nRule 37    comparator -> LET\r\nRule 38    comparator -> EQ\r\nRule 39    comparator -> DT\r\nRule 40    position -> NORTH\r\nRule 41    position -> SOUTH\r\nRule 42    position -> EAST\r\nRule 43    position -> WEST\r\nRule 44    repeat_instructions -> instructions BREAK\r\nRule 45    untilbody -> UNTIL LPARENT instructions RPARENT condition\r\nRule 46    whilebody -> WHILE condition LPARENT instructions RPARENT\r\nRule 47    casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\nRule 48    case_else -> ELSE LPARENT instructions RPARENT\r\nRule 49    case_else -> empty\r\nRule 50    casebody -> CASE ID innercasebody\r\nRule 51    innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody\r\nRule 52    innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody\r\nRule 53    innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody\r\nRule 54    innercasebody -> empty\r\nRule 55    condition -> ID comparator ID\r\nRule 56    condition -> ID comparator NUMBER\r\nRule 57    condition -> NUMBER comparator ID\r\nRule 58    condition -> NUMBER comparator NUMBER\r\nRule 59    condition -> TRUE\r\nRule 60    condition -> FALSE\r\nRule 61    condition -> istrue\r\nRule 62    istrue -> VERT LPARENT ID RPARENT\r\nRule 63    startvalue -> STRING\r\nRule 64    startvalue -> ID\r\nRule 65    end -> empty\r\nRule 66    empty -> <empty>\r\n\r\nTerminals, with rules where they appear\r\n\r\nADD                  : 30\r\nALTER                : 8 29\r\nALTERB               : 9\r\nBOOLVAL              : 25\r\nBREAK                : 44\r\nCALL                 : 20\r\nCASE                 : 47 50\r\nCOMMA                : 6 7 8 8 29 29\r\nCOMMENT              : 1 22\r\nDIV                  : 33\r\nDT                   : 39\r\nEAST                 : 42\r\nELSE                 : 48\r\nEQ                   : 38\r\nFALSE                : 28 53 60\r\nGET                  : 36\r\nGT                   : 34\r\nHAMMER               : 12\r\nID                   : 4 6 7 8 9 20 29 50 55 55 56 57 62 64\r\nLET                  : 37\r\nLPARENT              : 2 4 6 7 8 9 12 14 18 20 29 45 46 47 47 48 51 52 53 62\r\nLT                   : 35\r\nMOVL                 : 11\r\nMOVR                 : 10\r\nMUL                  : 32\r\nNEW                  : 6\r\nNORTH                : 40\r\nNUMBER               : 26 51 56 57 58 58\r\nNUMVAL               : 24\r\nPRINCIPAL            : 2\r\nPRINT                : 18\r\nPROCEDURE            : 4\r\nREPEAT               : 14\r\nRPARENT              : 2 4 6 7 8 9 12 14 18 20 29 45 46 47 47 48 51 52 53 62\r\nSEMICOLON            : 2 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\r\nSOUTH                : 41\r\nSTOP                 : 13\r\nSTRING               : 63\r\nSUB                  : 31\r\nTHEN                 : 47 51 52 53\r\nTRUE                 : 27 52 59\r\nUNTIL                : 45\r\nVALUES               : 7\r\nVERT                 : 62\r\nWEST                 : 43\r\nWHEN                 : 47 51 52 53\r\nWHILE                : 46\r\nerror                : \r\n\r\nNonterminals, with rules where they appear\r\n\r\ncase_else            : 47\r\ncasebody             : 17\r\ncommentary           : 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\r\ncomparator           : 55 56 57 58\r\ncondition            : 45 46 47\r\ndatatype             : 6\r\nempty                : 3 5 21 23 49 54 65\r\nend                  : 1\r\ninnercasebody        : 50 51 52 53\r\ninstructions         : 2 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 44 45 46 47 48 51 52 53\r\nistrue               : 19 61\r\noperator             : 8 29\r\nposition             : 12\r\nprincipal            : 1\r\nprocedures           : 1 1 4\r\nprogram              : 0\r\nrepeat_instructions  : 14\r\nstartvalue           : 18\r\nuntilbody            : 15\r\nvalue                : 6 7 8 29\r\nwhilebody            : 16\r\n\r\nParsing method: LALR\r\n\r\nstate 0\r\n\r\n    (0) S' -> . program\r\n    (1) program -> . COMMENT procedures principal procedures end\r\n\r\n    COMMENT         shift and go to state 2\r\n\r\n    program                        shift and go to state 1\r\n\r\nstate 1\r\n\r\n    (0) S' -> program .\r\n\r\n\r\n\r\nstate 2\r\n\r\n    (1) program -> COMMENT . procedures principal procedures end\r\n    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures\r\n    (5) procedures -> . empty\r\n    (66) empty -> .\r\n\r\n  ! shift/reduce conflict for PROCEDURE resolved as shift\r\n    PROCEDURE       shift and go to state 4\r\n    PRINCIPAL       reduce using rule 66 (empty -> .)\r\n    $end            reduce using rule 66 (empty -> .)\r\n\r\n  ! PROCEDURE       [ reduce using rule 66 (empty -> .) ]\r\n\r\n    procedures                     shift and go to state 3\r\n    empty                          shift and go to state 5\r\n\r\nstate 3\r\n\r\n    (1) program -> COMMENT procedures . principal procedures end\r\n    (2) principal -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON\r\n    (3) principal -> . empty\r\n    (66) empty -> .\r\n\r\n    PRINCIPAL       shift and go to state 7\r\n    PROCEDURE       reduce using rule 66 (empty -> .)\r\n    $end            reduce using rule 66 (empty -> .)\r\n\r\n    principal                      shift and go to state 6\r\n    empty                          shift and go to state 8\r\n\r\nstate 4\r\n\r\n    (4) procedures -> PROCEDURE . ID LPARENT instructions RPARENT SEMICOLON procedures\r\n\r\n    ID              shift and go to state 9\r\n\r\n\r\nstate 5\r\n\r\n    (5) procedures -> empty .\r\n\r\n    PRINCIPAL       reduce using rule 5 (procedures -> empty .)\r\n    PROCEDURE       reduce using rule 5 (procedures -> empty .)\r\n    $end            reduce using rule 5 (procedures -> empty .)\r\n\r\n\r\nstate 6\r\n\r\n    (1) program -> COMMENT procedures principal . procedures end\r\n    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures\r\n    (5) procedures -> . empty\r\n    (66) empty -> .\r\n\r\n    PROCEDURE       shift and go to state 4\r\n    $end            reduce using rule 66 (empty -> .)\r\n\r\n    procedures                     shift and go to state 10\r\n    empty                          shift and go to state 5\r\n\r\nstate 7\r\n\r\n    (2) principal -> PRINCIPAL . LPARENT instructions RPARENT SEMICOLON\r\n\r\n    LPARENT         shift and go to state 11\r\n\r\n\r\nstate 8\r\n\r\n    (3) principal -> empty .\r\n\r\n    PROCEDURE       reduce using rule 3 (principal -> empty .)\r\n    $end            reduce using rule 3 (principal -> empty .)\r\n\r\n\r\nstate 9\r\n\r\n    (4) procedures -> PROCEDURE ID . LPARENT instructions RPARENT SEMICOLON procedures\r\n\r\n    LPARENT         shift and go to state 12\r\n\r\n\r\nstate 10\r\n\r\n    (1) program -> COMMENT procedures principal procedures . end\r\n    (65) end -> . empty\r\n    (66) empty -> .\r\n\r\n    $end            reduce using rule 66 (empty -> .)\r\n\r\n    end                            shift and go to state 13\r\n    empty                          shift and go to state 14\r\n\r\nstate 11\r\n\r\n    (2) principal -> PRINCIPAL LPARENT . instructions RPARENT SEMICOLON\r\n    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> . instructions MOVR SEMICOLON commentary\r\n    (11) instructions -> . instructions MOVL SEMICOLON commentary\r\n    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> . instructions STOP SEMICOLON commentary\r\n    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> . instructions untilbody SEMICOLON commentary\r\n    (16) instructions -> . instructions whilebody SEMICOLON commentary\r\n    (17) instructions -> . instructions casebody SEMICOLON commentary\r\n    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> . instructions istrue SEMICOLON commentary\r\n    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (21) instructions -> . empty\r\n    (66) empty -> .\r\n\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n\r\n    instructions                   shift and go to state 15\r\n    empty                          shift and go to state 16\r\n\r\nstate 12\r\n\r\n    (4) procedures -> PROCEDURE ID LPARENT . instructions RPARENT SEMICOLON procedures\r\n    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> . instructions MOVR SEMICOLON commentary\r\n    (11) instructions -> . instructions MOVL SEMICOLON commentary\r\n    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> . instructions STOP SEMICOLON commentary\r\n    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> . instructions untilbody SEMICOLON commentary\r\n    (16) instructions -> . instructions whilebody SEMICOLON commentary\r\n    (17) instructions -> . instructions casebody SEMICOLON commentary\r\n    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> . instructions istrue SEMICOLON commentary\r\n    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (21) instructions -> . empty\r\n    (66) empty -> .\r\n\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n\r\n    instructions                   shift and go to state 17\r\n    empty                          shift and go to state 16\r\n\r\nstate 13\r\n\r\n    (1) program -> COMMENT procedures principal procedures end .\r\n\r\n    $end            reduce using rule 1 (program -> COMMENT procedures principal procedures end .)\r\n\r\n\r\nstate 14\r\n\r\n    (65) end -> empty .\r\n\r\n    $end            reduce using rule 65 (end -> empty .)\r\n\r\n\r\nstate 15\r\n\r\n    (2) principal -> PRINCIPAL LPARENT instructions . RPARENT SEMICOLON\r\n    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> instructions . MOVR SEMICOLON commentary\r\n    (11) instructions -> instructions . MOVL SEMICOLON commentary\r\n    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> instructions . STOP SEMICOLON commentary\r\n    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> instructions . untilbody SEMICOLON commentary\r\n    (16) instructions -> instructions . whilebody SEMICOLON commentary\r\n    (17) instructions -> instructions . casebody SEMICOLON commentary\r\n    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> instructions . istrue SEMICOLON commentary\r\n    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition\r\n    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT\r\n    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (50) casebody -> . CASE ID innercasebody\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    RPARENT         shift and go to state 18\r\n    NEW             shift and go to state 19\r\n    VALUES          shift and go to state 20\r\n    ALTER           shift and go to state 21\r\n    ALTERB          shift and go to state 22\r\n    MOVR            shift and go to state 23\r\n    MOVL            shift and go to state 24\r\n    HAMMER          shift and go to state 25\r\n    STOP            shift and go to state 26\r\n    REPEAT          shift and go to state 27\r\n    PRINT           shift and go to state 31\r\n    CALL            shift and go to state 33\r\n    UNTIL           shift and go to state 34\r\n    WHILE           shift and go to state 35\r\n    CASE            shift and go to state 36\r\n    VERT            shift and go to state 37\r\n\r\n    untilbody                      shift and go to state 28\r\n    whilebody                      shift and go to state 29\r\n    casebody                       shift and go to state 30\r\n    istrue                         shift and go to state 32\r\n\r\nstate 16\r\n\r\n    (21) instructions -> empty .\r\n\r\n    RPARENT         reduce using rule 21 (instructions -> empty .)\r\n    NEW             reduce using rule 21 (instructions -> empty .)\r\n    VALUES          reduce using rule 21 (instructions -> empty .)\r\n    ALTER           reduce using rule 21 (instructions -> empty .)\r\n    ALTERB          reduce using rule 21 (instructions -> empty .)\r\n    MOVR            reduce using rule 21 (instructions -> empty .)\r\n    MOVL            reduce using rule 21 (instructions -> empty .)\r\n    HAMMER          reduce using rule 21 (instructions -> empty .)\r\n    STOP            reduce using rule 21 (instructions -> empty .)\r\n    REPEAT          reduce using rule 21 (instructions -> empty .)\r\n    PRINT           reduce using rule 21 (instructions -> empty .)\r\n    CALL            reduce using rule 21 (instructions -> empty .)\r\n    UNTIL           reduce using rule 21 (instructions -> empty .)\r\n    WHILE           reduce using rule 21 (instructions -> empty .)\r\n    CASE            reduce using rule 21 (instructions -> empty .)\r\n    VERT            reduce using rule 21 (instructions -> empty .)\r\n    BREAK           reduce using rule 21 (instructions -> empty .)\r\n\r\n\r\nstate 17\r\n\r\n    (4) procedures -> PROCEDURE ID LPARENT instructions . RPARENT SEMICOLON procedures\r\n    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> instructions . MOVR SEMICOLON commentary\r\n    (11) instructions -> instructions . MOVL SEMICOLON commentary\r\n    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> instructions . STOP SEMICOLON commentary\r\n    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> instructions . untilbody SEMICOLON commentary\r\n    (16) instructions -> instructions . whilebody SEMICOLON commentary\r\n    (17) instructions -> instructions . casebody SEMICOLON commentary\r\n    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> instructions . istrue SEMICOLON commentary\r\n    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition\r\n    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT\r\n    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (50) casebody -> . CASE ID innercasebody\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    RPARENT         shift and go to state 38\r\n    NEW             shift and go to state 19\r\n    VALUES          shift and go to state 20\r\n    ALTER           shift and go to state 21\r\n    ALTERB          shift and go to state 22\r\n    MOVR            shift and go to state 23\r\n    MOVL            shift and go to state 24\r\n    HAMMER          shift and go to state 25\r\n    STOP            shift and go to state 26\r\n    REPEAT          shift and go to state 27\r\n    PRINT           shift and go to state 31\r\n    CALL            shift and go to state 33\r\n    UNTIL           shift and go to state 34\r\n    WHILE           shift and go to state 35\r\n    CASE            shift and go to state 36\r\n    VERT            shift and go to state 37\r\n\r\n    untilbody                      shift and go to state 28\r\n    whilebody                      shift and go to state 29\r\n    casebody                       shift and go to state 30\r\n    istrue                         shift and go to state 32\r\n\r\nstate 18\r\n\r\n    (2) principal -> PRINCIPAL LPARENT instructions RPARENT . SEMICOLON\r\n\r\n    SEMICOLON       shift and go to state 39\r\n\r\n\r\nstate 19\r\n\r\n    (6) instructions -> instructions NEW . ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n\r\n    ID              shift and go to state 40\r\n\r\n\r\nstate 20\r\n\r\n    (7) instructions -> instructions VALUES . LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n\r\n    LPARENT         shift and go to state 41\r\n\r\n\r\nstate 21\r\n\r\n    (8) instructions -> instructions ALTER . LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n\r\n    LPARENT         shift and go to state 42\r\n\r\n\r\nstate 22\r\n\r\n    (9) instructions -> instructions ALTERB . LPARENT ID RPARENT SEMICOLON commentary\r\n\r\n    LPARENT         shift and go to state 43\r\n\r\n\r\nstate 23\r\n\r\n    (10) instructions -> instructions MOVR . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 44\r\n\r\n\r\nstate 24\r\n\r\n    (11) instructions -> instructions MOVL . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 45\r\n\r\n\r\nstate 25\r\n\r\n    (12) instructions -> instructions HAMMER . LPARENT position RPARENT SEMICOLON commentary\r\n\r\n    LPARENT         shift and go to state 46\r\n\r\n\r\nstate 26\r\n\r\n    (13) instructions -> instructions STOP . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 47\r\n\r\n\r\nstate 27\r\n\r\n    (14) instructions -> instructions REPEAT . LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n\r\n    LPARENT         shift and go to state 48\r\n\r\n\r\nstate 28\r\n\r\n    (15) instructions -> instructions untilbody . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 49\r\n\r\n\r\nstate 29\r\n\r\n    (16) instructions -> instructions whilebody . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 50\r\n\r\n\r\nstate 30\r\n\r\n    (17) instructions -> instructions casebody . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 51\r\n\r\n\r\nstate 31\r\n\r\n    (18) instructions -> instructions PRINT . LPARENT startvalue RPARENT SEMICOLON commentary\r\n\r\n    LPARENT         shift and go to state 52\r\n\r\n\r\nstate 32\r\n\r\n    (19) instructions -> instructions istrue . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 53\r\n\r\n\r\nstate 33\r\n\r\n    (20) instructions -> instructions CALL . LPARENT ID RPARENT SEMICOLON commentary\r\n\r\n    LPARENT         shift and go to state 54\r\n\r\n\r\nstate 34\r\n\r\n    (45) untilbody -> UNTIL . LPARENT instructions RPARENT condition\r\n\r\n    LPARENT         shift and go to state 55\r\n\r\n\r\nstate 35\r\n\r\n    (46) whilebody -> WHILE . condition LPARENT instructions RPARENT\r\n    (55) condition -> . ID comparator ID\r\n    (56) condition -> . ID comparator NUMBER\r\n    (57) condition -> . NUMBER comparator ID\r\n    (58) condition -> . NUMBER comparator NUMBER\r\n    (59) condition -> . TRUE\r\n    (60) condition -> . FALSE\r\n    (61) condition -> . istrue\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    ID              shift and go to state 57\r\n    NUMBER          shift and go to state 58\r\n    TRUE            shift and go to state 59\r\n    FALSE           shift and go to state 60\r\n    VERT            shift and go to state 37\r\n\r\n    condition                      shift and go to state 56\r\n    istrue                         shift and go to state 61\r\n\r\nstate 36\r\n\r\n    (47) casebody -> CASE . WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (50) casebody -> CASE . ID innercasebody\r\n\r\n    WHEN            shift and go to state 62\r\n    ID              shift and go to state 63\r\n\r\n\r\nstate 37\r\n\r\n    (62) istrue -> VERT . LPARENT ID RPARENT\r\n\r\n    LPARENT         shift and go to state 64\r\n\r\n\r\nstate 38\r\n\r\n    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT . SEMICOLON procedures\r\n\r\n    SEMICOLON       shift and go to state 65\r\n\r\n\r\nstate 39\r\n\r\n    (2) principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .\r\n\r\n    PROCEDURE       reduce using rule 2 (principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)\r\n    $end            reduce using rule 2 (principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)\r\n\r\n\r\nstate 40\r\n\r\n    (6) instructions -> instructions NEW ID . LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n\r\n    LPARENT         shift and go to state 66\r\n\r\n\r\nstate 41\r\n\r\n    (7) instructions -> instructions VALUES LPARENT . ID COMMA value RPARENT SEMICOLON commentary\r\n\r\n    ID              shift and go to state 67\r\n\r\n\r\nstate 42\r\n\r\n    (8) instructions -> instructions ALTER LPARENT . ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n\r\n    ID              shift and go to state 68\r\n\r\n\r\nstate 43\r\n\r\n    (9) instructions -> instructions ALTERB LPARENT . ID RPARENT SEMICOLON commentary\r\n\r\n    ID              shift and go to state 69\r\n\r\n\r\nstate 44\r\n\r\n    (10) instructions -> instructions MOVR SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 70\r\n    empty                          shift and go to state 72\r\n\r\nstate 45\r\n\r\n    (11) instructions -> instructions MOVL SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 73\r\n    empty                          shift and go to state 72\r\n\r\nstate 46\r\n\r\n    (12) instructions -> instructions HAMMER LPARENT . position RPARENT SEMICOLON commentary\r\n    (40) position -> . NORTH\r\n    (41) position -> . SOUTH\r\n    (42) position -> . EAST\r\n    (43) position -> . WEST\r\n\r\n    NORTH           shift and go to state 75\r\n    SOUTH           shift and go to state 76\r\n    EAST            shift and go to state 77\r\n    WEST            shift and go to state 78\r\n\r\n    position                       shift and go to state 74\r\n\r\nstate 47\r\n\r\n    (13) instructions -> instructions STOP SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 79\r\n    empty                          shift and go to state 72\r\n\r\nstate 48\r\n\r\n    (14) instructions -> instructions REPEAT LPARENT . repeat_instructions RPARENT SEMICOLON commentary\r\n    (44) repeat_instructions -> . instructions BREAK\r\n    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> . instructions MOVR SEMICOLON commentary\r\n    (11) instructions -> . instructions MOVL SEMICOLON commentary\r\n    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> . instructions STOP SEMICOLON commentary\r\n    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> . instructions untilbody SEMICOLON commentary\r\n    (16) instructions -> . instructions whilebody SEMICOLON commentary\r\n    (17) instructions -> . instructions casebody SEMICOLON commentary\r\n    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> . instructions istrue SEMICOLON commentary\r\n    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (21) instructions -> . empty\r\n    (66) empty -> .\r\n\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n\r\n    instructions                   shift and go to state 80\r\n    repeat_instructions            shift and go to state 81\r\n    empty                          shift and go to state 16\r\n\r\nstate 49\r\n\r\n    (15) instructions -> instructions untilbody SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 82\r\n    empty                          shift and go to state 72\r\n\r\nstate 50\r\n\r\n    (16) instructions -> instructions whilebody SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 83\r\n    empty                          shift and go to state 72\r\n\r\nstate 51\r\n\r\n    (17) instructions -> instructions casebody SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 84\r\n    empty                          shift and go to state 72\r\n\r\nstate 52\r\n\r\n    (18) instructions -> instructions PRINT LPARENT . startvalue RPARENT SEMICOLON commentary\r\n    (63) startvalue -> . STRING\r\n    (64) startvalue -> . ID\r\n\r\n    STRING          shift and go to state 86\r\n    ID              shift and go to state 87\r\n\r\n    startvalue                     shift and go to state 85\r\n\r\nstate 53\r\n\r\n    (19) instructions -> instructions istrue SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 88\r\n    empty                          shift and go to state 72\r\n\r\nstate 54\r\n\r\n    (20) instructions -> instructions CALL LPARENT . ID RPARENT SEMICOLON commentary\r\n\r\n    ID              shift and go to state 89\r\n\r\n\r\nstate 55\r\n\r\n    (45) untilbody -> UNTIL LPARENT . instructions RPARENT condition\r\n    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> . instructions MOVR SEMICOLON commentary\r\n    (11) instructions -> . instructions MOVL SEMICOLON commentary\r\n    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> . instructions STOP SEMICOLON commentary\r\n    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> . instructions untilbody SEMICOLON commentary\r\n    (16) instructions -> . instructions whilebody SEMICOLON commentary\r\n    (17) instructions -> . instructions casebody SEMICOLON commentary\r\n    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> . instructions istrue SEMICOLON commentary\r\n    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (21) instructions -> . empty\r\n    (66) empty -> .\r\n\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n\r\n    instructions                   shift and go to state 90\r\n    empty                          shift and go to state 16\r\n\r\nstate 56\r\n\r\n    (46) whilebody -> WHILE condition . LPARENT instructions RPARENT\r\n\r\n    LPARENT         shift and go to state 91\r\n\r\n\r\nstate 57\r\n\r\n    (55) condition -> ID . comparator ID\r\n    (56) condition -> ID . comparator NUMBER\r\n    (34) comparator -> . GT\r\n    (35) comparator -> . LT\r\n    (36) comparator -> . GET\r\n    (37) comparator -> . LET\r\n    (38) comparator -> . EQ\r\n    (39) comparator -> . DT\r\n\r\n    GT              shift and go to state 93\r\n    LT              shift and go to state 94\r\n    GET             shift and go to state 95\r\n    LET             shift and go to state 96\r\n    EQ              shift and go to state 97\r\n    DT              shift and go to state 98\r\n\r\n    comparator                     shift and go to state 92\r\n\r\nstate 58\r\n\r\n    (57) condition -> NUMBER . comparator ID\r\n    (58) condition -> NUMBER . comparator NUMBER\r\n    (34) comparator -> . GT\r\n    (35) comparator -> . LT\r\n    (36) comparator -> . GET\r\n    (37) comparator -> . LET\r\n    (38) comparator -> . EQ\r\n    (39) comparator -> . DT\r\n\r\n    GT              shift and go to state 93\r\n    LT              shift and go to state 94\r\n    GET             shift and go to state 95\r\n    LET             shift and go to state 96\r\n    EQ              shift and go to state 97\r\n    DT              shift and go to state 98\r\n\r\n    comparator                     shift and go to state 99\r\n\r\nstate 59\r\n\r\n    (59) condition -> TRUE .\r\n\r\n    LPARENT         reduce using rule 59 (condition -> TRUE .)\r\n    RPARENT         reduce using rule 59 (condition -> TRUE .)\r\n    SEMICOLON       reduce using rule 59 (condition -> TRUE .)\r\n\r\n\r\nstate 60\r\n\r\n    (60) condition -> FALSE .\r\n\r\n    LPARENT         reduce using rule 60 (condition -> FALSE .)\r\n    RPARENT         reduce using rule 60 (condition -> FALSE .)\r\n    SEMICOLON       reduce using rule 60 (condition -> FALSE .)\r\n\r\n\r\nstate 61\r\n\r\n    (61) condition -> istrue .\r\n\r\n    LPARENT         reduce using rule 61 (condition -> istrue .)\r\n    RPARENT         reduce using rule 61 (condition -> istrue .)\r\n    SEMICOLON       reduce using rule 61 (condition -> istrue .)\r\n\r\n\r\nstate 62\r\n\r\n    (47) casebody -> CASE WHEN . LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n\r\n    LPARENT         shift and go to state 100\r\n\r\n\r\nstate 63\r\n\r\n    (50) casebody -> CASE ID . innercasebody\r\n    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody\r\n    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody\r\n    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody\r\n    (54) innercasebody -> . empty\r\n    (66) empty -> .\r\n\r\n    WHEN            shift and go to state 102\r\n    SEMICOLON       reduce using rule 66 (empty -> .)\r\n\r\n    innercasebody                  shift and go to state 101\r\n    empty                          shift and go to state 103\r\n\r\nstate 64\r\n\r\n    (62) istrue -> VERT LPARENT . ID RPARENT\r\n\r\n    ID              shift and go to state 104\r\n\r\n\r\nstate 65\r\n\r\n    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON . procedures\r\n    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures\r\n    (5) procedures -> . empty\r\n    (66) empty -> .\r\n\r\n  ! shift/reduce conflict for PROCEDURE resolved as shift\r\n    PROCEDURE       shift and go to state 4\r\n    PRINCIPAL       reduce using rule 66 (empty -> .)\r\n    $end            reduce using rule 66 (empty -> .)\r\n\r\n  ! PROCEDURE       [ reduce using rule 66 (empty -> .) ]\r\n\r\n    procedures                     shift and go to state 105\r\n    empty                          shift and go to state 5\r\n\r\nstate 66\r\n\r\n    (6) instructions -> instructions NEW ID LPARENT . datatype COMMA value RPARENT SEMICOLON commentary\r\n    (24) datatype -> . NUMVAL\r\n    (25) datatype -> . BOOLVAL\r\n\r\n    NUMVAL          shift and go to state 107\r\n    BOOLVAL         shift and go to state 108\r\n\r\n    datatype                       shift and go to state 106\r\n\r\nstate 67\r\n\r\n    (7) instructions -> instructions VALUES LPARENT ID . COMMA value RPARENT SEMICOLON commentary\r\n\r\n    COMMA           shift and go to state 109\r\n\r\n\r\nstate 68\r\n\r\n    (8) instructions -> instructions ALTER LPARENT ID . COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n\r\n    COMMA           shift and go to state 110\r\n\r\n\r\nstate 69\r\n\r\n    (9) instructions -> instructions ALTERB LPARENT ID . RPARENT SEMICOLON commentary\r\n\r\n    RPARENT         shift and go to state 111\r\n\r\n\r\nstate 70\r\n\r\n    (10) instructions -> instructions MOVR SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    NEW             reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    VALUES          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    ALTER           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    MOVR            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    MOVL            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    STOP            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    PRINT           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    CALL            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    WHILE           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    CASE            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    VERT            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n    BREAK           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)\r\n\r\n\r\nstate 71\r\n\r\n    (22) commentary -> COMMENT .\r\n\r\n    RPARENT         reduce using rule 22 (commentary -> COMMENT .)\r\n    NEW             reduce using rule 22 (commentary -> COMMENT .)\r\n    VALUES          reduce using rule 22 (commentary -> COMMENT .)\r\n    ALTER           reduce using rule 22 (commentary -> COMMENT .)\r\n    ALTERB          reduce using rule 22 (commentary -> COMMENT .)\r\n    MOVR            reduce using rule 22 (commentary -> COMMENT .)\r\n    MOVL            reduce using rule 22 (commentary -> COMMENT .)\r\n    HAMMER          reduce using rule 22 (commentary -> COMMENT .)\r\n    STOP            reduce using rule 22 (commentary -> COMMENT .)\r\n    REPEAT          reduce using rule 22 (commentary -> COMMENT .)\r\n    PRINT           reduce using rule 22 (commentary -> COMMENT .)\r\n    CALL            reduce using rule 22 (commentary -> COMMENT .)\r\n    UNTIL           reduce using rule 22 (commentary -> COMMENT .)\r\n    WHILE           reduce using rule 22 (commentary -> COMMENT .)\r\n    CASE            reduce using rule 22 (commentary -> COMMENT .)\r\n    VERT            reduce using rule 22 (commentary -> COMMENT .)\r\n    BREAK           reduce using rule 22 (commentary -> COMMENT .)\r\n\r\n\r\nstate 72\r\n\r\n    (23) commentary -> empty .\r\n\r\n    RPARENT         reduce using rule 23 (commentary -> empty .)\r\n    NEW             reduce using rule 23 (commentary -> empty .)\r\n    VALUES          reduce using rule 23 (commentary -> empty .)\r\n    ALTER           reduce using rule 23 (commentary -> empty .)\r\n    ALTERB          reduce using rule 23 (commentary -> empty .)\r\n    MOVR            reduce using rule 23 (commentary -> empty .)\r\n    MOVL            reduce using rule 23 (commentary -> empty .)\r\n    HAMMER          reduce using rule 23 (commentary -> empty .)\r\n    STOP            reduce using rule 23 (commentary -> empty .)\r\n    REPEAT          reduce using rule 23 (commentary -> empty .)\r\n    PRINT           reduce using rule 23 (commentary -> empty .)\r\n    CALL            reduce using rule 23 (commentary -> empty .)\r\n    UNTIL           reduce using rule 23 (commentary -> empty .)\r\n    WHILE           reduce using rule 23 (commentary -> empty .)\r\n    CASE            reduce using rule 23 (commentary -> empty .)\r\n    VERT            reduce using rule 23 (commentary -> empty .)\r\n    BREAK           reduce using rule 23 (commentary -> empty .)\r\n\r\n\r\nstate 73\r\n\r\n    (11) instructions -> instructions MOVL SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    NEW             reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    VALUES          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    ALTER           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    MOVR            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    MOVL            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    STOP            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    PRINT           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    CALL            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    WHILE           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    CASE            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    VERT            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n    BREAK           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)\r\n\r\n\r\nstate 74\r\n\r\n    (12) instructions -> instructions HAMMER LPARENT position . RPARENT SEMICOLON commentary\r\n\r\n    RPARENT         shift and go to state 112\r\n\r\n\r\nstate 75\r\n\r\n    (40) position -> NORTH .\r\n\r\n    RPARENT         reduce using rule 40 (position -> NORTH .)\r\n\r\n\r\nstate 76\r\n\r\n    (41) position -> SOUTH .\r\n\r\n    RPARENT         reduce using rule 41 (position -> SOUTH .)\r\n\r\n\r\nstate 77\r\n\r\n    (42) position -> EAST .\r\n\r\n    RPARENT         reduce using rule 42 (position -> EAST .)\r\n\r\n\r\nstate 78\r\n\r\n    (43) position -> WEST .\r\n\r\n    RPARENT         reduce using rule 43 (position -> WEST .)\r\n\r\n\r\nstate 79\r\n\r\n    (13) instructions -> instructions STOP SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    NEW             reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    VALUES          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    ALTER           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    MOVR            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    MOVL            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    STOP            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    PRINT           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    CALL            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    WHILE           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    CASE            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    VERT            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n    BREAK           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)\r\n\r\n\r\nstate 80\r\n\r\n    (44) repeat_instructions -> instructions . BREAK\r\n    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> instructions . MOVR SEMICOLON commentary\r\n    (11) instructions -> instructions . MOVL SEMICOLON commentary\r\n    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> instructions . STOP SEMICOLON commentary\r\n    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> instructions . untilbody SEMICOLON commentary\r\n    (16) instructions -> instructions . whilebody SEMICOLON commentary\r\n    (17) instructions -> instructions . casebody SEMICOLON commentary\r\n    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> instructions . istrue SEMICOLON commentary\r\n    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition\r\n    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT\r\n    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (50) casebody -> . CASE ID innercasebody\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    BREAK           shift and go to state 113\r\n    NEW             shift and go to state 19\r\n    VALUES          shift and go to state 20\r\n    ALTER           shift and go to state 21\r\n    ALTERB          shift and go to state 22\r\n    MOVR            shift and go to state 23\r\n    MOVL            shift and go to state 24\r\n    HAMMER          shift and go to state 25\r\n    STOP            shift and go to state 26\r\n    REPEAT          shift and go to state 27\r\n    PRINT           shift and go to state 31\r\n    CALL            shift and go to state 33\r\n    UNTIL           shift and go to state 34\r\n    WHILE           shift and go to state 35\r\n    CASE            shift and go to state 36\r\n    VERT            shift and go to state 37\r\n\r\n    untilbody                      shift and go to state 28\r\n    whilebody                      shift and go to state 29\r\n    casebody                       shift and go to state 30\r\n    istrue                         shift and go to state 32\r\n\r\nstate 81\r\n\r\n    (14) instructions -> instructions REPEAT LPARENT repeat_instructions . RPARENT SEMICOLON commentary\r\n\r\n    RPARENT         shift and go to state 114\r\n\r\n\r\nstate 82\r\n\r\n    (15) instructions -> instructions untilbody SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    NEW             reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    VALUES          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    ALTER           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    MOVR            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    MOVL            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    STOP            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    PRINT           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    CALL            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    WHILE           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    CASE            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    VERT            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n    BREAK           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)\r\n\r\n\r\nstate 83\r\n\r\n    (16) instructions -> instructions whilebody SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    NEW             reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    VALUES          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    ALTER           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    MOVR            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    MOVL            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    STOP            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    PRINT           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    CALL            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    WHILE           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    CASE            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    VERT            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n    BREAK           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)\r\n\r\n\r\nstate 84\r\n\r\n    (17) instructions -> instructions casebody SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    NEW             reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    VALUES          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    ALTER           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    MOVR            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    MOVL            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    STOP            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    PRINT           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    CALL            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    WHILE           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    CASE            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    VERT            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n    BREAK           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)\r\n\r\n\r\nstate 85\r\n\r\n    (18) instructions -> instructions PRINT LPARENT startvalue . RPARENT SEMICOLON commentary\r\n\r\n    RPARENT         shift and go to state 115\r\n\r\n\r\nstate 86\r\n\r\n    (63) startvalue -> STRING .\r\n\r\n    RPARENT         reduce using rule 63 (startvalue -> STRING .)\r\n\r\n\r\nstate 87\r\n\r\n    (64) startvalue -> ID .\r\n\r\n    RPARENT         reduce using rule 64 (startvalue -> ID .)\r\n\r\n\r\nstate 88\r\n\r\n    (19) instructions -> instructions istrue SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    NEW             reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    VALUES          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    ALTER           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    MOVR            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    MOVL            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    STOP            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    PRINT           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    CALL            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    WHILE           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    CASE            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    VERT            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n    BREAK           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)\r\n\r\n\r\nstate 89\r\n\r\n    (20) instructions -> instructions CALL LPARENT ID . RPARENT SEMICOLON commentary\r\n\r\n    RPARENT         shift and go to state 116\r\n\r\n\r\nstate 90\r\n\r\n    (45) untilbody -> UNTIL LPARENT instructions . RPARENT condition\r\n    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> instructions . MOVR SEMICOLON commentary\r\n    (11) instructions -> instructions . MOVL SEMICOLON commentary\r\n    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> instructions . STOP SEMICOLON commentary\r\n    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> instructions . untilbody SEMICOLON commentary\r\n    (16) instructions -> instructions . whilebody SEMICOLON commentary\r\n    (17) instructions -> instructions . casebody SEMICOLON commentary\r\n    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> instructions . istrue SEMICOLON commentary\r\n    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition\r\n    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT\r\n    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (50) casebody -> . CASE ID innercasebody\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    RPARENT         shift and go to state 117\r\n    NEW             shift and go to state 19\r\n    VALUES          shift and go to state 20\r\n    ALTER           shift and go to state 21\r\n    ALTERB          shift and go to state 22\r\n    MOVR            shift and go to state 23\r\n    MOVL            shift and go to state 24\r\n    HAMMER          shift and go to state 25\r\n    STOP            shift and go to state 26\r\n    REPEAT          shift and go to state 27\r\n    PRINT           shift and go to state 31\r\n    CALL            shift and go to state 33\r\n    UNTIL           shift and go to state 34\r\n    WHILE           shift and go to state 35\r\n    CASE            shift and go to state 36\r\n    VERT            shift and go to state 37\r\n\r\n    untilbody                      shift and go to state 28\r\n    whilebody                      shift and go to state 29\r\n    casebody                       shift and go to state 30\r\n    istrue                         shift and go to state 32\r\n\r\nstate 91\r\n\r\n    (46) whilebody -> WHILE condition LPARENT . instructions RPARENT\r\n    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> . instructions MOVR SEMICOLON commentary\r\n    (11) instructions -> . instructions MOVL SEMICOLON commentary\r\n    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> . instructions STOP SEMICOLON commentary\r\n    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> . instructions untilbody SEMICOLON commentary\r\n    (16) instructions -> . instructions whilebody SEMICOLON commentary\r\n    (17) instructions -> . instructions casebody SEMICOLON commentary\r\n    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> . instructions istrue SEMICOLON commentary\r\n    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (21) instructions -> . empty\r\n    (66) empty -> .\r\n\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n\r\n    instructions                   shift and go to state 118\r\n    empty                          shift and go to state 16\r\n\r\nstate 92\r\n\r\n    (55) condition -> ID comparator . ID\r\n    (56) condition -> ID comparator . NUMBER\r\n\r\n    ID              shift and go to state 119\r\n    NUMBER          shift and go to state 120\r\n\r\n\r\nstate 93\r\n\r\n    (34) comparator -> GT .\r\n\r\n    ID              reduce using rule 34 (comparator -> GT .)\r\n    NUMBER          reduce using rule 34 (comparator -> GT .)\r\n\r\n\r\nstate 94\r\n\r\n    (35) comparator -> LT .\r\n\r\n    ID              reduce using rule 35 (comparator -> LT .)\r\n    NUMBER          reduce using rule 35 (comparator -> LT .)\r\n\r\n\r\nstate 95\r\n\r\n    (36) comparator -> GET .\r\n\r\n    ID              reduce using rule 36 (comparator -> GET .)\r\n    NUMBER          reduce using rule 36 (comparator -> GET .)\r\n\r\n\r\nstate 96\r\n\r\n    (37) comparator -> LET .\r\n\r\n    ID              reduce using rule 37 (comparator -> LET .)\r\n    NUMBER          reduce using rule 37 (comparator -> LET .)\r\n\r\n\r\nstate 97\r\n\r\n    (38) comparator -> EQ .\r\n\r\n    ID              reduce using rule 38 (comparator -> EQ .)\r\n    NUMBER          reduce using rule 38 (comparator -> EQ .)\r\n\r\n\r\nstate 98\r\n\r\n    (39) comparator -> DT .\r\n\r\n    ID              reduce using rule 39 (comparator -> DT .)\r\n    NUMBER          reduce using rule 39 (comparator -> DT .)\r\n\r\n\r\nstate 99\r\n\r\n    (57) condition -> NUMBER comparator . ID\r\n    (58) condition -> NUMBER comparator . NUMBER\r\n\r\n    ID              shift and go to state 122\r\n    NUMBER          shift and go to state 121\r\n\r\n\r\nstate 100\r\n\r\n    (47) casebody -> CASE WHEN LPARENT . condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (55) condition -> . ID comparator ID\r\n    (56) condition -> . ID comparator NUMBER\r\n    (57) condition -> . NUMBER comparator ID\r\n    (58) condition -> . NUMBER comparator NUMBER\r\n    (59) condition -> . TRUE\r\n    (60) condition -> . FALSE\r\n    (61) condition -> . istrue\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    ID              shift and go to state 57\r\n    NUMBER          shift and go to state 58\r\n    TRUE            shift and go to state 59\r\n    FALSE           shift and go to state 60\r\n    VERT            shift and go to state 37\r\n\r\n    condition                      shift and go to state 123\r\n    istrue                         shift and go to state 61\r\n\r\nstate 101\r\n\r\n    (50) casebody -> CASE ID innercasebody .\r\n\r\n    SEMICOLON       reduce using rule 50 (casebody -> CASE ID innercasebody .)\r\n\r\n\r\nstate 102\r\n\r\n    (51) innercasebody -> WHEN . NUMBER THEN LPARENT instructions RPARENT innercasebody\r\n    (52) innercasebody -> WHEN . TRUE THEN LPARENT instructions RPARENT innercasebody\r\n    (53) innercasebody -> WHEN . FALSE THEN LPARENT instructions RPARENT innercasebody\r\n\r\n    NUMBER          shift and go to state 124\r\n    TRUE            shift and go to state 125\r\n    FALSE           shift and go to state 126\r\n\r\n\r\nstate 103\r\n\r\n    (54) innercasebody -> empty .\r\n\r\n    SEMICOLON       reduce using rule 54 (innercasebody -> empty .)\r\n\r\n\r\nstate 104\r\n\r\n    (62) istrue -> VERT LPARENT ID . RPARENT\r\n\r\n    RPARENT         shift and go to state 127\r\n\r\n\r\nstate 105\r\n\r\n    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .\r\n\r\n    PRINCIPAL       reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)\r\n    PROCEDURE       reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)\r\n    $end            reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)\r\n\r\n\r\nstate 106\r\n\r\n    (6) instructions -> instructions NEW ID LPARENT datatype . COMMA value RPARENT SEMICOLON commentary\r\n\r\n    COMMA           shift and go to state 128\r\n\r\n\r\nstate 107\r\n\r\n    (24) datatype -> NUMVAL .\r\n\r\n    COMMA           reduce using rule 24 (datatype -> NUMVAL .)\r\n\r\n\r\nstate 108\r\n\r\n    (25) datatype -> BOOLVAL .\r\n\r\n    COMMA           reduce using rule 25 (datatype -> BOOLVAL .)\r\n\r\n\r\nstate 109\r\n\r\n    (7) instructions -> instructions VALUES LPARENT ID COMMA . value RPARENT SEMICOLON commentary\r\n    (26) value -> . NUMBER\r\n    (27) value -> . TRUE\r\n    (28) value -> . FALSE\r\n    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT\r\n\r\n    NUMBER          shift and go to state 130\r\n    TRUE            shift and go to state 131\r\n    FALSE           shift and go to state 132\r\n    ALTER           shift and go to state 133\r\n\r\n    value                          shift and go to state 129\r\n\r\nstate 110\r\n\r\n    (8) instructions -> instructions ALTER LPARENT ID COMMA . operator COMMA value RPARENT SEMICOLON commentary\r\n    (30) operator -> . ADD\r\n    (31) operator -> . SUB\r\n    (32) operator -> . MUL\r\n    (33) operator -> . DIV\r\n\r\n    ADD             shift and go to state 135\r\n    SUB             shift and go to state 136\r\n    MUL             shift and go to state 137\r\n    DIV             shift and go to state 138\r\n\r\n    operator                       shift and go to state 134\r\n\r\nstate 111\r\n\r\n    (9) instructions -> instructions ALTERB LPARENT ID RPARENT . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 139\r\n\r\n\r\nstate 112\r\n\r\n    (12) instructions -> instructions HAMMER LPARENT position RPARENT . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 140\r\n\r\n\r\nstate 113\r\n\r\n    (44) repeat_instructions -> instructions BREAK .\r\n\r\n    RPARENT         reduce using rule 44 (repeat_instructions -> instructions BREAK .)\r\n\r\n\r\nstate 114\r\n\r\n    (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 141\r\n\r\n\r\nstate 115\r\n\r\n    (18) instructions -> instructions PRINT LPARENT startvalue RPARENT . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 142\r\n\r\n\r\nstate 116\r\n\r\n    (20) instructions -> instructions CALL LPARENT ID RPARENT . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 143\r\n\r\n\r\nstate 117\r\n\r\n    (45) untilbody -> UNTIL LPARENT instructions RPARENT . condition\r\n    (55) condition -> . ID comparator ID\r\n    (56) condition -> . ID comparator NUMBER\r\n    (57) condition -> . NUMBER comparator ID\r\n    (58) condition -> . NUMBER comparator NUMBER\r\n    (59) condition -> . TRUE\r\n    (60) condition -> . FALSE\r\n    (61) condition -> . istrue\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    ID              shift and go to state 57\r\n    NUMBER          shift and go to state 58\r\n    TRUE            shift and go to state 59\r\n    FALSE           shift and go to state 60\r\n    VERT            shift and go to state 37\r\n\r\n    condition                      shift and go to state 144\r\n    istrue                         shift and go to state 61\r\n\r\nstate 118\r\n\r\n    (46) whilebody -> WHILE condition LPARENT instructions . RPARENT\r\n    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> instructions . MOVR SEMICOLON commentary\r\n    (11) instructions -> instructions . MOVL SEMICOLON commentary\r\n    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> instructions . STOP SEMICOLON commentary\r\n    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> instructions . untilbody SEMICOLON commentary\r\n    (16) instructions -> instructions . whilebody SEMICOLON commentary\r\n    (17) instructions -> instructions . casebody SEMICOLON commentary\r\n    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> instructions . istrue SEMICOLON commentary\r\n    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition\r\n    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT\r\n    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (50) casebody -> . CASE ID innercasebody\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    RPARENT         shift and go to state 145\r\n    NEW             shift and go to state 19\r\n    VALUES          shift and go to state 20\r\n    ALTER           shift and go to state 21\r\n    ALTERB          shift and go to state 22\r\n    MOVR            shift and go to state 23\r\n    MOVL            shift and go to state 24\r\n    HAMMER          shift and go to state 25\r\n    STOP            shift and go to state 26\r\n    REPEAT          shift and go to state 27\r\n    PRINT           shift and go to state 31\r\n    CALL            shift and go to state 33\r\n    UNTIL           shift and go to state 34\r\n    WHILE           shift and go to state 35\r\n    CASE            shift and go to state 36\r\n    VERT            shift and go to state 37\r\n\r\n    untilbody                      shift and go to state 28\r\n    whilebody                      shift and go to state 29\r\n    casebody                       shift and go to state 30\r\n    istrue                         shift and go to state 32\r\n\r\nstate 119\r\n\r\n    (55) condition -> ID comparator ID .\r\n\r\n    LPARENT         reduce using rule 55 (condition -> ID comparator ID .)\r\n    RPARENT         reduce using rule 55 (condition -> ID comparator ID .)\r\n    SEMICOLON       reduce using rule 55 (condition -> ID comparator ID .)\r\n\r\n\r\nstate 120\r\n\r\n    (56) condition -> ID comparator NUMBER .\r\n\r\n    LPARENT         reduce using rule 56 (condition -> ID comparator NUMBER .)\r\n    RPARENT         reduce using rule 56 (condition -> ID comparator NUMBER .)\r\n    SEMICOLON       reduce using rule 56 (condition -> ID comparator NUMBER .)\r\n\r\n\r\nstate 121\r\n\r\n    (58) condition -> NUMBER comparator NUMBER .\r\n\r\n    LPARENT         reduce using rule 58 (condition -> NUMBER comparator NUMBER .)\r\n    RPARENT         reduce using rule 58 (condition -> NUMBER comparator NUMBER .)\r\n    SEMICOLON       reduce using rule 58 (condition -> NUMBER comparator NUMBER .)\r\n\r\n\r\nstate 122\r\n\r\n    (57) condition -> NUMBER comparator ID .\r\n\r\n    LPARENT         reduce using rule 57 (condition -> NUMBER comparator ID .)\r\n    RPARENT         reduce using rule 57 (condition -> NUMBER comparator ID .)\r\n    SEMICOLON       reduce using rule 57 (condition -> NUMBER comparator ID .)\r\n\r\n\r\nstate 123\r\n\r\n    (47) casebody -> CASE WHEN LPARENT condition . RPARENT THEN LPARENT instructions RPARENT case_else\r\n\r\n    RPARENT         shift and go to state 146\r\n\r\n\r\nstate 124\r\n\r\n    (51) innercasebody -> WHEN NUMBER . THEN LPARENT instructions RPARENT innercasebody\r\n\r\n    THEN            shift and go to state 147\r\n\r\n\r\nstate 125\r\n\r\n    (52) innercasebody -> WHEN TRUE . THEN LPARENT instructions RPARENT innercasebody\r\n\r\n    THEN            shift and go to state 148\r\n\r\n\r\nstate 126\r\n\r\n    (53) innercasebody -> WHEN FALSE . THEN LPARENT instructions RPARENT innercasebody\r\n\r\n    THEN            shift and go to state 149\r\n\r\n\r\nstate 127\r\n\r\n    (62) istrue -> VERT LPARENT ID RPARENT .\r\n\r\n    SEMICOLON       reduce using rule 62 (istrue -> VERT LPARENT ID RPARENT .)\r\n    LPARENT         reduce using rule 62 (istrue -> VERT LPARENT ID RPARENT .)\r\n    RPARENT         reduce using rule 62 (istrue -> VERT LPARENT ID RPARENT .)\r\n\r\n\r\nstate 128\r\n\r\n    (6) instructions -> instructions NEW ID LPARENT datatype COMMA . value RPARENT SEMICOLON commentary\r\n    (26) value -> . NUMBER\r\n    (27) value -> . TRUE\r\n    (28) value -> . FALSE\r\n    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT\r\n\r\n    NUMBER          shift and go to state 130\r\n    TRUE            shift and go to state 131\r\n    FALSE           shift and go to state 132\r\n    ALTER           shift and go to state 133\r\n\r\n    value                          shift and go to state 150\r\n\r\nstate 129\r\n\r\n    (7) instructions -> instructions VALUES LPARENT ID COMMA value . RPARENT SEMICOLON commentary\r\n\r\n    RPARENT         shift and go to state 151\r\n\r\n\r\nstate 130\r\n\r\n    (26) value -> NUMBER .\r\n\r\n    RPARENT         reduce using rule 26 (value -> NUMBER .)\r\n\r\n\r\nstate 131\r\n\r\n    (27) value -> TRUE .\r\n\r\n    RPARENT         reduce using rule 27 (value -> TRUE .)\r\n\r\n\r\nstate 132\r\n\r\n    (28) value -> FALSE .\r\n\r\n    RPARENT         reduce using rule 28 (value -> FALSE .)\r\n\r\n\r\nstate 133\r\n\r\n    (29) value -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT\r\n\r\n    LPARENT         shift and go to state 152\r\n\r\n\r\nstate 134\r\n\r\n    (8) instructions -> instructions ALTER LPARENT ID COMMA operator . COMMA value RPARENT SEMICOLON commentary\r\n\r\n    COMMA           shift and go to state 153\r\n\r\n\r\nstate 135\r\n\r\n    (30) operator -> ADD .\r\n\r\n    COMMA           reduce using rule 30 (operator -> ADD .)\r\n\r\n\r\nstate 136\r\n\r\n    (31) operator -> SUB .\r\n\r\n    COMMA           reduce using rule 31 (operator -> SUB .)\r\n\r\n\r\nstate 137\r\n\r\n    (32) operator -> MUL .\r\n\r\n    COMMA           reduce using rule 32 (operator -> MUL .)\r\n\r\n\r\nstate 138\r\n\r\n    (33) operator -> DIV .\r\n\r\n    COMMA           reduce using rule 33 (operator -> DIV .)\r\n\r\n\r\nstate 139\r\n\r\n    (9) instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 154\r\n    empty                          shift and go to state 72\r\n\r\nstate 140\r\n\r\n    (12) instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 155\r\n    empty                          shift and go to state 72\r\n\r\nstate 141\r\n\r\n    (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 156\r\n    empty                          shift and go to state 72\r\n\r\nstate 142\r\n\r\n    (18) instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 157\r\n    empty                          shift and go to state 72\r\n\r\nstate 143\r\n\r\n    (20) instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 158\r\n    empty                          shift and go to state 72\r\n\r\nstate 144\r\n\r\n    (45) untilbody -> UNTIL LPARENT instructions RPARENT condition .\r\n\r\n    SEMICOLON       reduce using rule 45 (untilbody -> UNTIL LPARENT instructions RPARENT condition .)\r\n\r\n\r\nstate 145\r\n\r\n    (46) whilebody -> WHILE condition LPARENT instructions RPARENT .\r\n\r\n    SEMICOLON       reduce using rule 46 (whilebody -> WHILE condition LPARENT instructions RPARENT .)\r\n\r\n\r\nstate 146\r\n\r\n    (47) casebody -> CASE WHEN LPARENT condition RPARENT . THEN LPARENT instructions RPARENT case_else\r\n\r\n    THEN            shift and go to state 159\r\n\r\n\r\nstate 147\r\n\r\n    (51) innercasebody -> WHEN NUMBER THEN . LPARENT instructions RPARENT innercasebody\r\n\r\n    LPARENT         shift and go to state 160\r\n\r\n\r\nstate 148\r\n\r\n    (52) innercasebody -> WHEN TRUE THEN . LPARENT instructions RPARENT innercasebody\r\n\r\n    LPARENT         shift and go to state 161\r\n\r\n\r\nstate 149\r\n\r\n    (53) innercasebody -> WHEN FALSE THEN . LPARENT instructions RPARENT innercasebody\r\n\r\n    LPARENT         shift and go to state 162\r\n\r\n\r\nstate 150\r\n\r\n    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value . RPARENT SEMICOLON commentary\r\n\r\n    RPARENT         shift and go to state 163\r\n\r\n\r\nstate 151\r\n\r\n    (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 164\r\n\r\n\r\nstate 152\r\n\r\n    (29) value -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT\r\n\r\n    ID              shift and go to state 165\r\n\r\n\r\nstate 153\r\n\r\n    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA . value RPARENT SEMICOLON commentary\r\n    (26) value -> . NUMBER\r\n    (27) value -> . TRUE\r\n    (28) value -> . FALSE\r\n    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT\r\n\r\n    NUMBER          shift and go to state 130\r\n    TRUE            shift and go to state 131\r\n    FALSE           shift and go to state 132\r\n    ALTER           shift and go to state 133\r\n\r\n    value                          shift and go to state 166\r\n\r\nstate 154\r\n\r\n    (9) instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    NEW             reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    VALUES          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    ALTER           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    MOVR            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    MOVL            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    STOP            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    PRINT           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    CALL            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    WHILE           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    CASE            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    VERT            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n    BREAK           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)\r\n\r\n\r\nstate 155\r\n\r\n    (12) instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    NEW             reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    VALUES          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    ALTER           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    MOVR            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    MOVL            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    STOP            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    PRINT           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    CALL            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    WHILE           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    CASE            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    VERT            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n    BREAK           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)\r\n\r\n\r\nstate 156\r\n\r\n    (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    NEW             reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    VALUES          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    ALTER           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    MOVR            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    MOVL            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    STOP            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    PRINT           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    CALL            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    WHILE           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    CASE            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    VERT            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n    BREAK           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)\r\n\r\n\r\nstate 157\r\n\r\n    (18) instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    NEW             reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    VALUES          reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    ALTER           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    MOVR            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    MOVL            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    STOP            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    PRINT           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    CALL            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    WHILE           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    CASE            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    VERT            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n    BREAK           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)\r\n\r\n\r\nstate 158\r\n\r\n    (20) instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    NEW             reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    VALUES          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    ALTER           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    MOVR            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    MOVL            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    STOP            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    PRINT           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    CALL            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    WHILE           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    CASE            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    VERT            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n    BREAK           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)\r\n\r\n\r\nstate 159\r\n\r\n    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN . LPARENT instructions RPARENT case_else\r\n\r\n    LPARENT         shift and go to state 167\r\n\r\n\r\nstate 160\r\n\r\n    (51) innercasebody -> WHEN NUMBER THEN LPARENT . instructions RPARENT innercasebody\r\n    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> . instructions MOVR SEMICOLON commentary\r\n    (11) instructions -> . instructions MOVL SEMICOLON commentary\r\n    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> . instructions STOP SEMICOLON commentary\r\n    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> . instructions untilbody SEMICOLON commentary\r\n    (16) instructions -> . instructions whilebody SEMICOLON commentary\r\n    (17) instructions -> . instructions casebody SEMICOLON commentary\r\n    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> . instructions istrue SEMICOLON commentary\r\n    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (21) instructions -> . empty\r\n    (66) empty -> .\r\n\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n\r\n    instructions                   shift and go to state 168\r\n    empty                          shift and go to state 16\r\n\r\nstate 161\r\n\r\n    (52) innercasebody -> WHEN TRUE THEN LPARENT . instructions RPARENT innercasebody\r\n    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> . instructions MOVR SEMICOLON commentary\r\n    (11) instructions -> . instructions MOVL SEMICOLON commentary\r\n    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> . instructions STOP SEMICOLON commentary\r\n    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> . instructions untilbody SEMICOLON commentary\r\n    (16) instructions -> . instructions whilebody SEMICOLON commentary\r\n    (17) instructions -> . instructions casebody SEMICOLON commentary\r\n    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> . instructions istrue SEMICOLON commentary\r\n    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (21) instructions -> . empty\r\n    (66) empty -> .\r\n\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n\r\n    instructions                   shift and go to state 169\r\n    empty                          shift and go to state 16\r\n\r\nstate 162\r\n\r\n    (53) innercasebody -> WHEN FALSE THEN LPARENT . instructions RPARENT innercasebody\r\n    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> . instructions MOVR SEMICOLON commentary\r\n    (11) instructions -> . instructions MOVL SEMICOLON commentary\r\n    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> . instructions STOP SEMICOLON commentary\r\n    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> . instructions untilbody SEMICOLON commentary\r\n    (16) instructions -> . instructions whilebody SEMICOLON commentary\r\n    (17) instructions -> . instructions casebody SEMICOLON commentary\r\n    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> . instructions istrue SEMICOLON commentary\r\n    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (21) instructions -> . empty\r\n    (66) empty -> .\r\n\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n\r\n    instructions                   shift and go to state 170\r\n    empty                          shift and go to state 16\r\n\r\nstate 163\r\n\r\n    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 171\r\n\r\n\r\nstate 164\r\n\r\n    (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 172\r\n    empty                          shift and go to state 72\r\n\r\nstate 165\r\n\r\n    (29) value -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT\r\n\r\n    COMMA           shift and go to state 173\r\n\r\n\r\nstate 166\r\n\r\n    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value . RPARENT SEMICOLON commentary\r\n\r\n    RPARENT         shift and go to state 174\r\n\r\n\r\nstate 167\r\n\r\n    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT . instructions RPARENT case_else\r\n    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> . instructions MOVR SEMICOLON commentary\r\n    (11) instructions -> . instructions MOVL SEMICOLON commentary\r\n    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> . instructions STOP SEMICOLON commentary\r\n    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> . instructions untilbody SEMICOLON commentary\r\n    (16) instructions -> . instructions whilebody SEMICOLON commentary\r\n    (17) instructions -> . instructions casebody SEMICOLON commentary\r\n    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> . instructions istrue SEMICOLON commentary\r\n    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (21) instructions -> . empty\r\n    (66) empty -> .\r\n\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n\r\n    instructions                   shift and go to state 175\r\n    empty                          shift and go to state 16\r\n\r\nstate 168\r\n\r\n    (51) innercasebody -> WHEN NUMBER THEN LPARENT instructions . RPARENT innercasebody\r\n    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> instructions . MOVR SEMICOLON commentary\r\n    (11) instructions -> instructions . MOVL SEMICOLON commentary\r\n    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> instructions . STOP SEMICOLON commentary\r\n    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> instructions . untilbody SEMICOLON commentary\r\n    (16) instructions -> instructions . whilebody SEMICOLON commentary\r\n    (17) instructions -> instructions . casebody SEMICOLON commentary\r\n    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> instructions . istrue SEMICOLON commentary\r\n    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition\r\n    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT\r\n    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (50) casebody -> . CASE ID innercasebody\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    RPARENT         shift and go to state 176\r\n    NEW             shift and go to state 19\r\n    VALUES          shift and go to state 20\r\n    ALTER           shift and go to state 21\r\n    ALTERB          shift and go to state 22\r\n    MOVR            shift and go to state 23\r\n    MOVL            shift and go to state 24\r\n    HAMMER          shift and go to state 25\r\n    STOP            shift and go to state 26\r\n    REPEAT          shift and go to state 27\r\n    PRINT           shift and go to state 31\r\n    CALL            shift and go to state 33\r\n    UNTIL           shift and go to state 34\r\n    WHILE           shift and go to state 35\r\n    CASE            shift and go to state 36\r\n    VERT            shift and go to state 37\r\n\r\n    untilbody                      shift and go to state 28\r\n    whilebody                      shift and go to state 29\r\n    casebody                       shift and go to state 30\r\n    istrue                         shift and go to state 32\r\n\r\nstate 169\r\n\r\n    (52) innercasebody -> WHEN TRUE THEN LPARENT instructions . RPARENT innercasebody\r\n    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> instructions . MOVR SEMICOLON commentary\r\n    (11) instructions -> instructions . MOVL SEMICOLON commentary\r\n    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> instructions . STOP SEMICOLON commentary\r\n    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> instructions . untilbody SEMICOLON commentary\r\n    (16) instructions -> instructions . whilebody SEMICOLON commentary\r\n    (17) instructions -> instructions . casebody SEMICOLON commentary\r\n    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> instructions . istrue SEMICOLON commentary\r\n    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition\r\n    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT\r\n    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (50) casebody -> . CASE ID innercasebody\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    RPARENT         shift and go to state 177\r\n    NEW             shift and go to state 19\r\n    VALUES          shift and go to state 20\r\n    ALTER           shift and go to state 21\r\n    ALTERB          shift and go to state 22\r\n    MOVR            shift and go to state 23\r\n    MOVL            shift and go to state 24\r\n    HAMMER          shift and go to state 25\r\n    STOP            shift and go to state 26\r\n    REPEAT          shift and go to state 27\r\n    PRINT           shift and go to state 31\r\n    CALL            shift and go to state 33\r\n    UNTIL           shift and go to state 34\r\n    WHILE           shift and go to state 35\r\n    CASE            shift and go to state 36\r\n    VERT            shift and go to state 37\r\n\r\n    untilbody                      shift and go to state 28\r\n    whilebody                      shift and go to state 29\r\n    casebody                       shift and go to state 30\r\n    istrue                         shift and go to state 32\r\n\r\nstate 170\r\n\r\n    (53) innercasebody -> WHEN FALSE THEN LPARENT instructions . RPARENT innercasebody\r\n    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> instructions . MOVR SEMICOLON commentary\r\n    (11) instructions -> instructions . MOVL SEMICOLON commentary\r\n    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> instructions . STOP SEMICOLON commentary\r\n    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> instructions . untilbody SEMICOLON commentary\r\n    (16) instructions -> instructions . whilebody SEMICOLON commentary\r\n    (17) instructions -> instructions . casebody SEMICOLON commentary\r\n    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> instructions . istrue SEMICOLON commentary\r\n    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition\r\n    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT\r\n    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (50) casebody -> . CASE ID innercasebody\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    RPARENT         shift and go to state 178\r\n    NEW             shift and go to state 19\r\n    VALUES          shift and go to state 20\r\n    ALTER           shift and go to state 21\r\n    ALTERB          shift and go to state 22\r\n    MOVR            shift and go to state 23\r\n    MOVL            shift and go to state 24\r\n    HAMMER          shift and go to state 25\r\n    STOP            shift and go to state 26\r\n    REPEAT          shift and go to state 27\r\n    PRINT           shift and go to state 31\r\n    CALL            shift and go to state 33\r\n    UNTIL           shift and go to state 34\r\n    WHILE           shift and go to state 35\r\n    CASE            shift and go to state 36\r\n    VERT            shift and go to state 37\r\n\r\n    untilbody                      shift and go to state 28\r\n    whilebody                      shift and go to state 29\r\n    casebody                       shift and go to state 30\r\n    istrue                         shift and go to state 32\r\n\r\nstate 171\r\n\r\n    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 179\r\n    empty                          shift and go to state 72\r\n\r\nstate 172\r\n\r\n    (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    NEW             reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    VALUES          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    ALTER           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    MOVR            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    MOVL            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    STOP            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    PRINT           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    CALL            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    WHILE           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    CASE            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    VERT            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n    BREAK           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)\r\n\r\n\r\nstate 173\r\n\r\n    (29) value -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT\r\n    (30) operator -> . ADD\r\n    (31) operator -> . SUB\r\n    (32) operator -> . MUL\r\n    (33) operator -> . DIV\r\n\r\n    ADD             shift and go to state 135\r\n    SUB             shift and go to state 136\r\n    MUL             shift and go to state 137\r\n    DIV             shift and go to state 138\r\n\r\n    operator                       shift and go to state 180\r\n\r\nstate 174\r\n\r\n    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT . SEMICOLON commentary\r\n\r\n    SEMICOLON       shift and go to state 181\r\n\r\n\r\nstate 175\r\n\r\n    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions . RPARENT case_else\r\n    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> instructions . MOVR SEMICOLON commentary\r\n    (11) instructions -> instructions . MOVL SEMICOLON commentary\r\n    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> instructions . STOP SEMICOLON commentary\r\n    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> instructions . untilbody SEMICOLON commentary\r\n    (16) instructions -> instructions . whilebody SEMICOLON commentary\r\n    (17) instructions -> instructions . casebody SEMICOLON commentary\r\n    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> instructions . istrue SEMICOLON commentary\r\n    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition\r\n    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT\r\n    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (50) casebody -> . CASE ID innercasebody\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    RPARENT         shift and go to state 182\r\n    NEW             shift and go to state 19\r\n    VALUES          shift and go to state 20\r\n    ALTER           shift and go to state 21\r\n    ALTERB          shift and go to state 22\r\n    MOVR            shift and go to state 23\r\n    MOVL            shift and go to state 24\r\n    HAMMER          shift and go to state 25\r\n    STOP            shift and go to state 26\r\n    REPEAT          shift and go to state 27\r\n    PRINT           shift and go to state 31\r\n    CALL            shift and go to state 33\r\n    UNTIL           shift and go to state 34\r\n    WHILE           shift and go to state 35\r\n    CASE            shift and go to state 36\r\n    VERT            shift and go to state 37\r\n\r\n    untilbody                      shift and go to state 28\r\n    whilebody                      shift and go to state 29\r\n    casebody                       shift and go to state 30\r\n    istrue                         shift and go to state 32\r\n\r\nstate 176\r\n\r\n    (51) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT . innercasebody\r\n    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody\r\n    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody\r\n    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody\r\n    (54) innercasebody -> . empty\r\n    (66) empty -> .\r\n\r\n    WHEN            shift and go to state 102\r\n    SEMICOLON       reduce using rule 66 (empty -> .)\r\n\r\n    innercasebody                  shift and go to state 183\r\n    empty                          shift and go to state 103\r\n\r\nstate 177\r\n\r\n    (52) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT . innercasebody\r\n    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody\r\n    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody\r\n    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody\r\n    (54) innercasebody -> . empty\r\n    (66) empty -> .\r\n\r\n    WHEN            shift and go to state 102\r\n    SEMICOLON       reduce using rule 66 (empty -> .)\r\n\r\n    innercasebody                  shift and go to state 184\r\n    empty                          shift and go to state 103\r\n\r\nstate 178\r\n\r\n    (53) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT . innercasebody\r\n    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody\r\n    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody\r\n    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody\r\n    (54) innercasebody -> . empty\r\n    (66) empty -> .\r\n\r\n    WHEN            shift and go to state 102\r\n    SEMICOLON       reduce using rule 66 (empty -> .)\r\n\r\n    innercasebody                  shift and go to state 185\r\n    empty                          shift and go to state 103\r\n\r\nstate 179\r\n\r\n    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    NEW             reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    VALUES          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    ALTER           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    MOVR            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    MOVL            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    STOP            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    PRINT           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    CALL            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    WHILE           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    CASE            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    VERT            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n    BREAK           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)\r\n\r\n\r\nstate 180\r\n\r\n    (29) value -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT\r\n\r\n    COMMA           shift and go to state 186\r\n\r\n\r\nstate 181\r\n\r\n    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON . commentary\r\n    (22) commentary -> . COMMENT\r\n    (23) commentary -> . empty\r\n    (66) empty -> .\r\n\r\n    COMMENT         shift and go to state 71\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n    BREAK           reduce using rule 66 (empty -> .)\r\n\r\n    commentary                     shift and go to state 187\r\n    empty                          shift and go to state 72\r\n\r\nstate 182\r\n\r\n    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT . case_else\r\n    (48) case_else -> . ELSE LPARENT instructions RPARENT\r\n    (49) case_else -> . empty\r\n    (66) empty -> .\r\n\r\n    ELSE            shift and go to state 189\r\n    SEMICOLON       reduce using rule 66 (empty -> .)\r\n\r\n    case_else                      shift and go to state 188\r\n    empty                          shift and go to state 190\r\n\r\nstate 183\r\n\r\n    (51) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .\r\n\r\n    SEMICOLON       reduce using rule 51 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)\r\n\r\n\r\nstate 184\r\n\r\n    (52) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .\r\n\r\n    SEMICOLON       reduce using rule 52 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)\r\n\r\n\r\nstate 185\r\n\r\n    (53) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .\r\n\r\n    SEMICOLON       reduce using rule 53 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)\r\n\r\n\r\nstate 186\r\n\r\n    (29) value -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT\r\n    (26) value -> . NUMBER\r\n    (27) value -> . TRUE\r\n    (28) value -> . FALSE\r\n    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT\r\n\r\n    NUMBER          shift and go to state 130\r\n    TRUE            shift and go to state 131\r\n    FALSE           shift and go to state 132\r\n    ALTER           shift and go to state 133\r\n\r\n    value                          shift and go to state 191\r\n\r\nstate 187\r\n\r\n    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .\r\n\r\n    RPARENT         reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    NEW             reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    VALUES          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    ALTER           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    ALTERB          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    MOVR            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    MOVL            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    HAMMER          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    STOP            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    REPEAT          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    PRINT           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    CALL            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    UNTIL           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    WHILE           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    CASE            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    VERT            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n    BREAK           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)\r\n\r\n\r\nstate 188\r\n\r\n    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else .\r\n\r\n    SEMICOLON       reduce using rule 47 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else .)\r\n\r\n\r\nstate 189\r\n\r\n    (48) case_else -> ELSE . LPARENT instructions RPARENT\r\n\r\n    LPARENT         shift and go to state 192\r\n\r\n\r\nstate 190\r\n\r\n    (49) case_else -> empty .\r\n\r\n    SEMICOLON       reduce using rule 49 (case_else -> empty .)\r\n\r\n\r\nstate 191\r\n\r\n    (29) value -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT\r\n\r\n    RPARENT         shift and go to state 193\r\n\r\n\r\nstate 192\r\n\r\n    (48) case_else -> ELSE LPARENT . instructions RPARENT\r\n    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> . instructions MOVR SEMICOLON commentary\r\n    (11) instructions -> . instructions MOVL SEMICOLON commentary\r\n    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> . instructions STOP SEMICOLON commentary\r\n    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> . instructions untilbody SEMICOLON commentary\r\n    (16) instructions -> . instructions whilebody SEMICOLON commentary\r\n    (17) instructions -> . instructions casebody SEMICOLON commentary\r\n    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> . instructions istrue SEMICOLON commentary\r\n    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (21) instructions -> . empty\r\n    (66) empty -> .\r\n\r\n    RPARENT         reduce using rule 66 (empty -> .)\r\n    NEW             reduce using rule 66 (empty -> .)\r\n    VALUES          reduce using rule 66 (empty -> .)\r\n    ALTER           reduce using rule 66 (empty -> .)\r\n    ALTERB          reduce using rule 66 (empty -> .)\r\n    MOVR            reduce using rule 66 (empty -> .)\r\n    MOVL            reduce using rule 66 (empty -> .)\r\n    HAMMER          reduce using rule 66 (empty -> .)\r\n    STOP            reduce using rule 66 (empty -> .)\r\n    REPEAT          reduce using rule 66 (empty -> .)\r\n    PRINT           reduce using rule 66 (empty -> .)\r\n    CALL            reduce using rule 66 (empty -> .)\r\n    UNTIL           reduce using rule 66 (empty -> .)\r\n    WHILE           reduce using rule 66 (empty -> .)\r\n    CASE            reduce using rule 66 (empty -> .)\r\n    VERT            reduce using rule 66 (empty -> .)\r\n\r\n    instructions                   shift and go to state 194\r\n    empty                          shift and go to state 16\r\n\r\nstate 193\r\n\r\n    (29) value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .\r\n\r\n    RPARENT         reduce using rule 29 (value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .)\r\n\r\n\r\nstate 194\r\n\r\n    (48) case_else -> ELSE LPARENT instructions . RPARENT\r\n    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary\r\n    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary\r\n    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary\r\n    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary\r\n    (10) instructions -> instructions . MOVR SEMICOLON commentary\r\n    (11) instructions -> instructions . MOVL SEMICOLON commentary\r\n    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary\r\n    (13) instructions -> instructions . STOP SEMICOLON commentary\r\n    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary\r\n    (15) instructions -> instructions . untilbody SEMICOLON commentary\r\n    (16) instructions -> instructions . whilebody SEMICOLON commentary\r\n    (17) instructions -> instructions . casebody SEMICOLON commentary\r\n    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary\r\n    (19) instructions -> instructions . istrue SEMICOLON commentary\r\n    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary\r\n    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition\r\n    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT\r\n    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else\r\n    (50) casebody -> . CASE ID innercasebody\r\n    (62) istrue -> . VERT LPARENT ID RPARENT\r\n\r\n    RPARENT         shift and go to state 195\r\n    NEW             shift and go to state 19\r\n    VALUES          shift and go to state 20\r\n    ALTER           shift and go to state 21\r\n    ALTERB          shift and go to state 22\r\n    MOVR            shift and go to state 23\r\n    MOVL            shift and go to state 24\r\n    HAMMER          shift and go to state 25\r\n    STOP            shift and go to state 26\r\n    REPEAT          shift and go to state 27\r\n    PRINT           shift and go to state 31\r\n    CALL            shift and go to state 33\r\n    UNTIL           shift and go to state 34\r\n    WHILE           shift and go to state 35\r\n    CASE            shift and go to state 36\r\n    VERT            shift and go to state 37\r\n\r\n    untilbody                      shift and go to state 28\r\n    whilebody                      shift and go to state 29\r\n    casebody                       shift and go to state 30\r\n    istrue                         shift and go to state 32\r\n\r\nstate 195\r\n\r\n    (48) case_else -> ELSE LPARENT instructions RPARENT .\r\n\r\n    SEMICOLON       reduce using rule 48 (case_else -> ELSE LPARENT instructions RPARENT .)\r\n\r\nWARNING: \r\nWARNING: Conflicts:\r\nWARNING: \r\nWARNING: shift/reduce conflict for PROCEDURE in state 2 resolved as shift\r\nWARNING: shift/reduce conflict for PROCEDURE in state 65 resolved as shift\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/parser.out b/parser.out
--- a/parser.out	
+++ b/parser.out	
@@ -49,26 +49,27 @@
 Rule 44    repeat_instructions -> instructions BREAK
 Rule 45    untilbody -> UNTIL LPARENT instructions RPARENT condition
 Rule 46    whilebody -> WHILE condition LPARENT instructions RPARENT
-Rule 47    casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-Rule 48    case_else -> ELSE LPARENT instructions RPARENT
-Rule 49    case_else -> empty
-Rule 50    casebody -> CASE ID innercasebody
-Rule 51    innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
-Rule 52    innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
-Rule 53    innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
-Rule 54    innercasebody -> empty
-Rule 55    condition -> ID comparator ID
-Rule 56    condition -> ID comparator NUMBER
-Rule 57    condition -> NUMBER comparator ID
-Rule 58    condition -> NUMBER comparator NUMBER
-Rule 59    condition -> TRUE
-Rule 60    condition -> FALSE
-Rule 61    condition -> istrue
-Rule 62    istrue -> VERT LPARENT ID RPARENT
-Rule 63    startvalue -> STRING
-Rule 64    startvalue -> ID
-Rule 65    end -> empty
-Rule 66    empty -> <empty>
+Rule 47    casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+Rule 48    casebody -> case_else
+Rule 49    case_else -> ELSE LPARENT instructions RPARENT
+Rule 50    case_else -> empty
+Rule 51    casebody -> CASE ID innercasebody
+Rule 52    innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
+Rule 53    innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
+Rule 54    innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
+Rule 55    innercasebody -> empty
+Rule 56    condition -> ID comparator ID
+Rule 57    condition -> ID comparator NUMBER
+Rule 58    condition -> NUMBER comparator ID
+Rule 59    condition -> NUMBER comparator NUMBER
+Rule 60    condition -> TRUE
+Rule 61    condition -> FALSE
+Rule 62    condition -> istrue
+Rule 63    istrue -> VERT LPARENT ID RPARENT
+Rule 64    startvalue -> STRING
+Rule 65    startvalue -> ID
+Rule 66    end -> empty
+Rule 67    empty -> <empty>
 
 Terminals, with rules where they appear
 
@@ -78,62 +79,62 @@
 BOOLVAL              : 25
 BREAK                : 44
 CALL                 : 20
-CASE                 : 47 50
+CASE                 : 47 51
 COMMA                : 6 7 8 8 29 29
 COMMENT              : 1 22
 DIV                  : 33
 DT                   : 39
 EAST                 : 42
-ELSE                 : 48
+ELSE                 : 49
 EQ                   : 38
-FALSE                : 28 53 60
+FALSE                : 28 54 61
 GET                  : 36
 GT                   : 34
 HAMMER               : 12
-ID                   : 4 6 7 8 9 20 29 50 55 55 56 57 62 64
+ID                   : 4 6 7 8 9 20 29 51 56 56 57 58 63 65
 LET                  : 37
-LPARENT              : 2 4 6 7 8 9 12 14 18 20 29 45 46 47 47 48 51 52 53 62
+LPARENT              : 2 4 6 7 8 9 12 14 18 20 29 45 46 47 47 49 52 53 54 63
 LT                   : 35
 MOVL                 : 11
 MOVR                 : 10
 MUL                  : 32
 NEW                  : 6
 NORTH                : 40
-NUMBER               : 26 51 56 57 58 58
+NUMBER               : 26 52 57 58 59 59
 NUMVAL               : 24
 PRINCIPAL            : 2
 PRINT                : 18
 PROCEDURE            : 4
 REPEAT               : 14
-RPARENT              : 2 4 6 7 8 9 12 14 18 20 29 45 46 47 47 48 51 52 53 62
+RPARENT              : 2 4 6 7 8 9 12 14 18 20 29 45 46 47 47 49 52 53 54 63
 SEMICOLON            : 2 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
 SOUTH                : 41
 STOP                 : 13
-STRING               : 63
+STRING               : 64
 SUB                  : 31
-THEN                 : 47 51 52 53
-TRUE                 : 27 52 59
+THEN                 : 47 52 53 54
+TRUE                 : 27 53 60
 UNTIL                : 45
 VALUES               : 7
-VERT                 : 62
+VERT                 : 63
 WEST                 : 43
-WHEN                 : 47 51 52 53
+WHEN                 : 47 52 53 54
 WHILE                : 46
 error                : 
 
 Nonterminals, with rules where they appear
 
-case_else            : 47
-casebody             : 17
+case_else            : 48
+casebody             : 17 47
 commentary           : 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
-comparator           : 55 56 57 58
+comparator           : 56 57 58 59
 condition            : 45 46 47
 datatype             : 6
-empty                : 3 5 21 23 49 54 65
+empty                : 3 5 21 23 50 55 66
 end                  : 1
-innercasebody        : 50 51 52 53
-instructions         : 2 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 44 45 46 47 48 51 52 53
-istrue               : 19 61
+innercasebody        : 51 52 53 54
+instructions         : 2 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 44 45 46 47 49 52 53 54
+istrue               : 19 62
 operator             : 8 29
 position             : 12
 principal            : 1
@@ -167,14 +168,14 @@
     (1) program -> COMMENT . procedures principal procedures end
     (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
     (5) procedures -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
   ! shift/reduce conflict for PROCEDURE resolved as shift
     PROCEDURE       shift and go to state 4
-    PRINCIPAL       reduce using rule 66 (empty -> .)
-    $end            reduce using rule 66 (empty -> .)
+    PRINCIPAL       reduce using rule 67 (empty -> .)
+    $end            reduce using rule 67 (empty -> .)
 
-  ! PROCEDURE       [ reduce using rule 66 (empty -> .) ]
+  ! PROCEDURE       [ reduce using rule 67 (empty -> .) ]
 
     procedures                     shift and go to state 3
     empty                          shift and go to state 5
@@ -184,11 +185,11 @@
     (1) program -> COMMENT procedures . principal procedures end
     (2) principal -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON
     (3) principal -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
     PRINCIPAL       shift and go to state 7
-    PROCEDURE       reduce using rule 66 (empty -> .)
-    $end            reduce using rule 66 (empty -> .)
+    PROCEDURE       reduce using rule 67 (empty -> .)
+    $end            reduce using rule 67 (empty -> .)
 
     principal                      shift and go to state 6
     empty                          shift and go to state 8
@@ -214,10 +215,10 @@
     (1) program -> COMMENT procedures principal . procedures end
     (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
     (5) procedures -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
     PROCEDURE       shift and go to state 4
-    $end            reduce using rule 66 (empty -> .)
+    $end            reduce using rule 67 (empty -> .)
 
     procedures                     shift and go to state 10
     empty                          shift and go to state 5
@@ -247,10 +248,10 @@
 state 10
 
     (1) program -> COMMENT procedures principal procedures . end
-    (65) end -> . empty
-    (66) empty -> .
+    (66) end -> . empty
+    (67) empty -> .
 
-    $end            reduce using rule 66 (empty -> .)
+    $end            reduce using rule 67 (empty -> .)
 
     end                            shift and go to state 13
     empty                          shift and go to state 14
@@ -274,24 +275,26 @@
     (19) instructions -> . instructions istrue SEMICOLON commentary
     (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
     (21) instructions -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
     instructions                   shift and go to state 15
     empty                          shift and go to state 16
@@ -315,24 +318,26 @@
     (19) instructions -> . instructions istrue SEMICOLON commentary
     (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
     (21) instructions -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
     instructions                   shift and go to state 17
     empty                          shift and go to state 16
@@ -346,9 +351,9 @@
 
 state 14
 
-    (65) end -> empty .
+    (66) end -> empty .
 
-    $end            reduce using rule 65 (end -> empty .)
+    $end            reduce using rule 66 (end -> empty .)
 
 
 state 15
@@ -371,9 +376,13 @@
     (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
     (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
     (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
-    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (50) casebody -> . CASE ID innercasebody
-    (62) istrue -> . VERT LPARENT ID RPARENT
+    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (48) casebody -> . case_else
+    (51) casebody -> . CASE ID innercasebody
+    (63) istrue -> . VERT LPARENT ID RPARENT
+    (49) case_else -> . ELSE LPARENT instructions RPARENT
+    (50) case_else -> . empty
+    (67) empty -> .
 
     RPARENT         shift and go to state 18
     NEW             shift and go to state 19
@@ -390,12 +399,16 @@
     UNTIL           shift and go to state 34
     WHILE           shift and go to state 35
     CASE            shift and go to state 36
-    VERT            shift and go to state 37
+    VERT            shift and go to state 38
+    ELSE            shift and go to state 39
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
     untilbody                      shift and go to state 28
     whilebody                      shift and go to state 29
     casebody                       shift and go to state 30
     istrue                         shift and go to state 32
+    case_else                      shift and go to state 37
+    empty                          shift and go to state 40
 
 state 16
 
@@ -417,6 +430,8 @@
     WHILE           reduce using rule 21 (instructions -> empty .)
     CASE            reduce using rule 21 (instructions -> empty .)
     VERT            reduce using rule 21 (instructions -> empty .)
+    ELSE            reduce using rule 21 (instructions -> empty .)
+    SEMICOLON       reduce using rule 21 (instructions -> empty .)
     BREAK           reduce using rule 21 (instructions -> empty .)
 
 
@@ -440,11 +455,15 @@
     (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
     (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
     (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
-    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (50) casebody -> . CASE ID innercasebody
-    (62) istrue -> . VERT LPARENT ID RPARENT
+    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (48) casebody -> . case_else
+    (51) casebody -> . CASE ID innercasebody
+    (63) istrue -> . VERT LPARENT ID RPARENT
+    (49) case_else -> . ELSE LPARENT instructions RPARENT
+    (50) case_else -> . empty
+    (67) empty -> .
 
-    RPARENT         shift and go to state 38
+    RPARENT         shift and go to state 41
     NEW             shift and go to state 19
     VALUES          shift and go to state 20
     ALTER           shift and go to state 21
@@ -459,177 +478,202 @@
     UNTIL           shift and go to state 34
     WHILE           shift and go to state 35
     CASE            shift and go to state 36
-    VERT            shift and go to state 37
+    VERT            shift and go to state 38
+    ELSE            shift and go to state 39
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
     untilbody                      shift and go to state 28
     whilebody                      shift and go to state 29
     casebody                       shift and go to state 30
     istrue                         shift and go to state 32
+    case_else                      shift and go to state 37
+    empty                          shift and go to state 40
 
 state 18
 
     (2) principal -> PRINCIPAL LPARENT instructions RPARENT . SEMICOLON
 
-    SEMICOLON       shift and go to state 39
+    SEMICOLON       shift and go to state 42
 
 
 state 19
 
     (6) instructions -> instructions NEW . ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
 
-    ID              shift and go to state 40
+    ID              shift and go to state 43
 
 
 state 20
 
     (7) instructions -> instructions VALUES . LPARENT ID COMMA value RPARENT SEMICOLON commentary
 
-    LPARENT         shift and go to state 41
+    LPARENT         shift and go to state 44
 
 
 state 21
 
     (8) instructions -> instructions ALTER . LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
 
-    LPARENT         shift and go to state 42
+    LPARENT         shift and go to state 45
 
 
 state 22
 
     (9) instructions -> instructions ALTERB . LPARENT ID RPARENT SEMICOLON commentary
 
-    LPARENT         shift and go to state 43
+    LPARENT         shift and go to state 46
 
 
 state 23
 
     (10) instructions -> instructions MOVR . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 44
+    SEMICOLON       shift and go to state 47
 
 
 state 24
 
     (11) instructions -> instructions MOVL . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 45
+    SEMICOLON       shift and go to state 48
 
 
 state 25
 
     (12) instructions -> instructions HAMMER . LPARENT position RPARENT SEMICOLON commentary
 
-    LPARENT         shift and go to state 46
+    LPARENT         shift and go to state 49
 
 
 state 26
 
     (13) instructions -> instructions STOP . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 47
+    SEMICOLON       shift and go to state 50
 
 
 state 27
 
     (14) instructions -> instructions REPEAT . LPARENT repeat_instructions RPARENT SEMICOLON commentary
 
-    LPARENT         shift and go to state 48
+    LPARENT         shift and go to state 51
 
 
 state 28
 
     (15) instructions -> instructions untilbody . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 49
+    SEMICOLON       shift and go to state 52
 
 
 state 29
 
     (16) instructions -> instructions whilebody . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 50
+    SEMICOLON       shift and go to state 53
 
 
 state 30
 
     (17) instructions -> instructions casebody . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 51
+    SEMICOLON       shift and go to state 54
 
 
 state 31
 
     (18) instructions -> instructions PRINT . LPARENT startvalue RPARENT SEMICOLON commentary
 
-    LPARENT         shift and go to state 52
+    LPARENT         shift and go to state 55
 
 
 state 32
 
     (19) instructions -> instructions istrue . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 53
+    SEMICOLON       shift and go to state 56
 
 
 state 33
 
     (20) instructions -> instructions CALL . LPARENT ID RPARENT SEMICOLON commentary
 
-    LPARENT         shift and go to state 54
+    LPARENT         shift and go to state 57
 
 
 state 34
 
     (45) untilbody -> UNTIL . LPARENT instructions RPARENT condition
 
-    LPARENT         shift and go to state 55
+    LPARENT         shift and go to state 58
 
 
 state 35
 
     (46) whilebody -> WHILE . condition LPARENT instructions RPARENT
-    (55) condition -> . ID comparator ID
-    (56) condition -> . ID comparator NUMBER
-    (57) condition -> . NUMBER comparator ID
-    (58) condition -> . NUMBER comparator NUMBER
-    (59) condition -> . TRUE
-    (60) condition -> . FALSE
-    (61) condition -> . istrue
-    (62) istrue -> . VERT LPARENT ID RPARENT
+    (56) condition -> . ID comparator ID
+    (57) condition -> . ID comparator NUMBER
+    (58) condition -> . NUMBER comparator ID
+    (59) condition -> . NUMBER comparator NUMBER
+    (60) condition -> . TRUE
+    (61) condition -> . FALSE
+    (62) condition -> . istrue
+    (63) istrue -> . VERT LPARENT ID RPARENT
 
-    ID              shift and go to state 57
-    NUMBER          shift and go to state 58
-    TRUE            shift and go to state 59
-    FALSE           shift and go to state 60
-    VERT            shift and go to state 37
+    ID              shift and go to state 60
+    NUMBER          shift and go to state 61
+    TRUE            shift and go to state 62
+    FALSE           shift and go to state 63
+    VERT            shift and go to state 38
 
-    condition                      shift and go to state 56
-    istrue                         shift and go to state 61
+    condition                      shift and go to state 59
+    istrue                         shift and go to state 64
 
 state 36
 
-    (47) casebody -> CASE . WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (50) casebody -> CASE . ID innercasebody
+    (47) casebody -> CASE . WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (51) casebody -> CASE . ID innercasebody
 
-    WHEN            shift and go to state 62
-    ID              shift and go to state 63
+    WHEN            shift and go to state 65
+    ID              shift and go to state 66
 
 
 state 37
 
-    (62) istrue -> VERT . LPARENT ID RPARENT
+    (48) casebody -> case_else .
 
-    LPARENT         shift and go to state 64
+    SEMICOLON       reduce using rule 48 (casebody -> case_else .)
 
 
 state 38
 
+    (63) istrue -> VERT . LPARENT ID RPARENT
+
+    LPARENT         shift and go to state 67
+
+
+state 39
+
+    (49) case_else -> ELSE . LPARENT instructions RPARENT
+
+    LPARENT         shift and go to state 68
+
+
+state 40
+
+    (50) case_else -> empty .
+
+    SEMICOLON       reduce using rule 50 (case_else -> empty .)
+
+
+state 41
+
     (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT . SEMICOLON procedures
 
-    SEMICOLON       shift and go to state 65
+    SEMICOLON       shift and go to state 69
 
 
-state 39
+state 42
 
     (2) principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .
 
@@ -637,93 +681,97 @@
     $end            reduce using rule 2 (principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
 
 
-state 40
+state 43
 
     (6) instructions -> instructions NEW ID . LPARENT datatype COMMA value RPARENT SEMICOLON commentary
 
-    LPARENT         shift and go to state 66
+    LPARENT         shift and go to state 70
 
 
-state 41
+state 44
 
     (7) instructions -> instructions VALUES LPARENT . ID COMMA value RPARENT SEMICOLON commentary
 
-    ID              shift and go to state 67
+    ID              shift and go to state 71
 
 
-state 42
+state 45
 
     (8) instructions -> instructions ALTER LPARENT . ID COMMA operator COMMA value RPARENT SEMICOLON commentary
 
-    ID              shift and go to state 68
+    ID              shift and go to state 72
 
 
-state 43
+state 46
 
     (9) instructions -> instructions ALTERB LPARENT . ID RPARENT SEMICOLON commentary
 
-    ID              shift and go to state 69
+    ID              shift and go to state 73
 
 
-state 44
+state 47
 
     (10) instructions -> instructions MOVR SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 70
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 74
+    empty                          shift and go to state 76
 
-state 45
+state 48
 
     (11) instructions -> instructions MOVL SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 73
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 77
+    empty                          shift and go to state 76
 
-state 46
+state 49
 
     (12) instructions -> instructions HAMMER LPARENT . position RPARENT SEMICOLON commentary
     (40) position -> . NORTH
@@ -731,43 +779,45 @@
     (42) position -> . EAST
     (43) position -> . WEST
 
-    NORTH           shift and go to state 75
-    SOUTH           shift and go to state 76
-    EAST            shift and go to state 77
-    WEST            shift and go to state 78
+    NORTH           shift and go to state 79
+    SOUTH           shift and go to state 80
+    EAST            shift and go to state 81
+    WEST            shift and go to state 82
 
-    position                       shift and go to state 74
+    position                       shift and go to state 78
 
-state 47
+state 50
 
     (13) instructions -> instructions STOP SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 79
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 83
+    empty                          shift and go to state 76
 
-state 48
+state 51
 
     (14) instructions -> instructions REPEAT LPARENT . repeat_instructions RPARENT SEMICOLON commentary
     (44) repeat_instructions -> . instructions BREAK
@@ -787,164 +837,174 @@
     (19) instructions -> . instructions istrue SEMICOLON commentary
     (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
     (21) instructions -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    BREAK           reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
-    instructions                   shift and go to state 80
-    repeat_instructions            shift and go to state 81
+    instructions                   shift and go to state 84
+    repeat_instructions            shift and go to state 85
     empty                          shift and go to state 16
 
-state 49
+state 52
 
     (15) instructions -> instructions untilbody SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 82
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 86
+    empty                          shift and go to state 76
 
-state 50
+state 53
 
     (16) instructions -> instructions whilebody SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 83
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 87
+    empty                          shift and go to state 76
 
-state 51
+state 54
 
     (17) instructions -> instructions casebody SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 84
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 88
+    empty                          shift and go to state 76
 
-state 52
+state 55
 
     (18) instructions -> instructions PRINT LPARENT . startvalue RPARENT SEMICOLON commentary
-    (63) startvalue -> . STRING
-    (64) startvalue -> . ID
+    (64) startvalue -> . STRING
+    (65) startvalue -> . ID
 
-    STRING          shift and go to state 86
-    ID              shift and go to state 87
+    STRING          shift and go to state 90
+    ID              shift and go to state 91
 
-    startvalue                     shift and go to state 85
+    startvalue                     shift and go to state 89
 
-state 53
+state 56
 
     (19) instructions -> instructions istrue SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 88
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 92
+    empty                          shift and go to state 76
 
-state 54
+state 57
 
     (20) instructions -> instructions CALL LPARENT . ID RPARENT SEMICOLON commentary
 
-    ID              shift and go to state 89
+    ID              shift and go to state 93
 
 
-state 55
+state 58
 
     (45) untilbody -> UNTIL LPARENT . instructions RPARENT condition
     (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
@@ -963,39 +1023,41 @@
     (19) instructions -> . instructions istrue SEMICOLON commentary
     (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
     (21) instructions -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
-    instructions                   shift and go to state 90
+    instructions                   shift and go to state 94
     empty                          shift and go to state 16
 
-state 56
+state 59
 
     (46) whilebody -> WHILE condition . LPARENT instructions RPARENT
 
-    LPARENT         shift and go to state 91
+    LPARENT         shift and go to state 95
 
 
-state 57
+state 60
 
-    (55) condition -> ID . comparator ID
-    (56) condition -> ID . comparator NUMBER
+    (56) condition -> ID . comparator ID
+    (57) condition -> ID . comparator NUMBER
     (34) comparator -> . GT
     (35) comparator -> . LT
     (36) comparator -> . GET
@@ -1003,19 +1065,19 @@
     (38) comparator -> . EQ
     (39) comparator -> . DT
 
-    GT              shift and go to state 93
-    LT              shift and go to state 94
-    GET             shift and go to state 95
-    LET             shift and go to state 96
-    EQ              shift and go to state 97
-    DT              shift and go to state 98
+    GT              shift and go to state 97
+    LT              shift and go to state 98
+    GET             shift and go to state 99
+    LET             shift and go to state 100
+    EQ              shift and go to state 101
+    DT              shift and go to state 102
 
-    comparator                     shift and go to state 92
+    comparator                     shift and go to state 96
 
-state 58
+state 61
 
-    (57) condition -> NUMBER . comparator ID
-    (58) condition -> NUMBER . comparator NUMBER
+    (58) condition -> NUMBER . comparator ID
+    (59) condition -> NUMBER . comparator NUMBER
     (34) comparator -> . GT
     (35) comparator -> . LT
     (36) comparator -> . GET
@@ -1023,121 +1085,164 @@
     (38) comparator -> . EQ
     (39) comparator -> . DT
 
-    GT              shift and go to state 93
-    LT              shift and go to state 94
-    GET             shift and go to state 95
-    LET             shift and go to state 96
-    EQ              shift and go to state 97
-    DT              shift and go to state 98
-
-    comparator                     shift and go to state 99
-
-state 59
-
-    (59) condition -> TRUE .
-
-    LPARENT         reduce using rule 59 (condition -> TRUE .)
-    RPARENT         reduce using rule 59 (condition -> TRUE .)
-    SEMICOLON       reduce using rule 59 (condition -> TRUE .)
-
-
-state 60
-
-    (60) condition -> FALSE .
-
-    LPARENT         reduce using rule 60 (condition -> FALSE .)
-    RPARENT         reduce using rule 60 (condition -> FALSE .)
-    SEMICOLON       reduce using rule 60 (condition -> FALSE .)
-
-
-state 61
+    GT              shift and go to state 97
+    LT              shift and go to state 98
+    GET             shift and go to state 99
+    LET             shift and go to state 100
+    EQ              shift and go to state 101
+    DT              shift and go to state 102
 
-    (61) condition -> istrue .
-
-    LPARENT         reduce using rule 61 (condition -> istrue .)
-    RPARENT         reduce using rule 61 (condition -> istrue .)
-    SEMICOLON       reduce using rule 61 (condition -> istrue .)
-
+    comparator                     shift and go to state 103
 
 state 62
 
-    (47) casebody -> CASE WHEN . LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
+    (60) condition -> TRUE .
 
-    LPARENT         shift and go to state 100
+    LPARENT         reduce using rule 60 (condition -> TRUE .)
+    RPARENT         reduce using rule 60 (condition -> TRUE .)
+    SEMICOLON       reduce using rule 60 (condition -> TRUE .)
 
 
 state 63
 
-    (50) casebody -> CASE ID . innercasebody
-    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
-    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
-    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
-    (54) innercasebody -> . empty
-    (66) empty -> .
+    (61) condition -> FALSE .
 
-    WHEN            shift and go to state 102
-    SEMICOLON       reduce using rule 66 (empty -> .)
+    LPARENT         reduce using rule 61 (condition -> FALSE .)
+    RPARENT         reduce using rule 61 (condition -> FALSE .)
+    SEMICOLON       reduce using rule 61 (condition -> FALSE .)
 
-    innercasebody                  shift and go to state 101
-    empty                          shift and go to state 103
 
 state 64
 
-    (62) istrue -> VERT LPARENT . ID RPARENT
+    (62) condition -> istrue .
 
-    ID              shift and go to state 104
+    LPARENT         reduce using rule 62 (condition -> istrue .)
+    RPARENT         reduce using rule 62 (condition -> istrue .)
+    SEMICOLON       reduce using rule 62 (condition -> istrue .)
 
 
 state 65
 
+    (47) casebody -> CASE WHEN . LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+
+    LPARENT         shift and go to state 104
+
+
+state 66
+
+    (51) casebody -> CASE ID . innercasebody
+    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
+    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
+    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
+    (55) innercasebody -> . empty
+    (67) empty -> .
+
+    WHEN            shift and go to state 106
+    SEMICOLON       reduce using rule 67 (empty -> .)
+
+    innercasebody                  shift and go to state 105
+    empty                          shift and go to state 107
+
+state 67
+
+    (63) istrue -> VERT LPARENT . ID RPARENT
+
+    ID              shift and go to state 108
+
+
+state 68
+
+    (49) case_else -> ELSE LPARENT . instructions RPARENT
+    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
+    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
+    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
+    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
+    (10) instructions -> . instructions MOVR SEMICOLON commentary
+    (11) instructions -> . instructions MOVL SEMICOLON commentary
+    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
+    (13) instructions -> . instructions STOP SEMICOLON commentary
+    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
+    (15) instructions -> . instructions untilbody SEMICOLON commentary
+    (16) instructions -> . instructions whilebody SEMICOLON commentary
+    (17) instructions -> . instructions casebody SEMICOLON commentary
+    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
+    (19) instructions -> . instructions istrue SEMICOLON commentary
+    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
+    (21) instructions -> . empty
+    (67) empty -> .
+
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+
+    instructions                   shift and go to state 109
+    empty                          shift and go to state 16
+
+state 69
+
     (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON . procedures
     (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
     (5) procedures -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
   ! shift/reduce conflict for PROCEDURE resolved as shift
     PROCEDURE       shift and go to state 4
-    PRINCIPAL       reduce using rule 66 (empty -> .)
-    $end            reduce using rule 66 (empty -> .)
+    PRINCIPAL       reduce using rule 67 (empty -> .)
+    $end            reduce using rule 67 (empty -> .)
 
-  ! PROCEDURE       [ reduce using rule 66 (empty -> .) ]
+  ! PROCEDURE       [ reduce using rule 67 (empty -> .) ]
 
-    procedures                     shift and go to state 105
+    procedures                     shift and go to state 110
     empty                          shift and go to state 5
 
-state 66
+state 70
 
     (6) instructions -> instructions NEW ID LPARENT . datatype COMMA value RPARENT SEMICOLON commentary
     (24) datatype -> . NUMVAL
     (25) datatype -> . BOOLVAL
 
-    NUMVAL          shift and go to state 107
-    BOOLVAL         shift and go to state 108
+    NUMVAL          shift and go to state 112
+    BOOLVAL         shift and go to state 113
 
-    datatype                       shift and go to state 106
+    datatype                       shift and go to state 111
 
-state 67
+state 71
 
     (7) instructions -> instructions VALUES LPARENT ID . COMMA value RPARENT SEMICOLON commentary
 
-    COMMA           shift and go to state 109
+    COMMA           shift and go to state 114
 
 
-state 68
+state 72
 
     (8) instructions -> instructions ALTER LPARENT ID . COMMA operator COMMA value RPARENT SEMICOLON commentary
 
-    COMMA           shift and go to state 110
+    COMMA           shift and go to state 115
 
 
-state 69
+state 73
 
     (9) instructions -> instructions ALTERB LPARENT ID . RPARENT SEMICOLON commentary
 
-    RPARENT         shift and go to state 111
+    RPARENT         shift and go to state 116
 
 
-state 70
+state 74
 
     (10) instructions -> instructions MOVR SEMICOLON commentary .
 
@@ -1157,10 +1262,12 @@
     WHILE           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
     CASE            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
     VERT            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
+    ELSE            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
     BREAK           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
 
 
-state 71
+state 75
 
     (22) commentary -> COMMENT .
 
@@ -1180,10 +1287,12 @@
     WHILE           reduce using rule 22 (commentary -> COMMENT .)
     CASE            reduce using rule 22 (commentary -> COMMENT .)
     VERT            reduce using rule 22 (commentary -> COMMENT .)
+    ELSE            reduce using rule 22 (commentary -> COMMENT .)
+    SEMICOLON       reduce using rule 22 (commentary -> COMMENT .)
     BREAK           reduce using rule 22 (commentary -> COMMENT .)
 
 
-state 72
+state 76
 
     (23) commentary -> empty .
 
@@ -1203,10 +1312,12 @@
     WHILE           reduce using rule 23 (commentary -> empty .)
     CASE            reduce using rule 23 (commentary -> empty .)
     VERT            reduce using rule 23 (commentary -> empty .)
+    ELSE            reduce using rule 23 (commentary -> empty .)
+    SEMICOLON       reduce using rule 23 (commentary -> empty .)
     BREAK           reduce using rule 23 (commentary -> empty .)
 
 
-state 73
+state 77
 
     (11) instructions -> instructions MOVL SEMICOLON commentary .
 
@@ -1226,45 +1337,47 @@
     WHILE           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
     CASE            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
     VERT            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
+    ELSE            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
     BREAK           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
 
 
-state 74
+state 78
 
     (12) instructions -> instructions HAMMER LPARENT position . RPARENT SEMICOLON commentary
 
-    RPARENT         shift and go to state 112
+    RPARENT         shift and go to state 117
 
 
-state 75
+state 79
 
     (40) position -> NORTH .
 
     RPARENT         reduce using rule 40 (position -> NORTH .)
 
 
-state 76
+state 80
 
     (41) position -> SOUTH .
 
     RPARENT         reduce using rule 41 (position -> SOUTH .)
 
 
-state 77
+state 81
 
     (42) position -> EAST .
 
     RPARENT         reduce using rule 42 (position -> EAST .)
 
 
-state 78
+state 82
 
     (43) position -> WEST .
 
     RPARENT         reduce using rule 43 (position -> WEST .)
 
 
-state 79
+state 83
 
     (13) instructions -> instructions STOP SEMICOLON commentary .
 
@@ -1284,10 +1397,12 @@
     WHILE           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
     CASE            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
     VERT            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
+    ELSE            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
     BREAK           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
 
 
-state 80
+state 84
 
     (44) repeat_instructions -> instructions . BREAK
     (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
@@ -1307,11 +1422,15 @@
     (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
     (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
     (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
-    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (50) casebody -> . CASE ID innercasebody
-    (62) istrue -> . VERT LPARENT ID RPARENT
+    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (48) casebody -> . case_else
+    (51) casebody -> . CASE ID innercasebody
+    (63) istrue -> . VERT LPARENT ID RPARENT
+    (49) case_else -> . ELSE LPARENT instructions RPARENT
+    (50) case_else -> . empty
+    (67) empty -> .
 
-    BREAK           shift and go to state 113
+    BREAK           shift and go to state 118
     NEW             shift and go to state 19
     VALUES          shift and go to state 20
     ALTER           shift and go to state 21
@@ -1326,21 +1445,25 @@
     UNTIL           shift and go to state 34
     WHILE           shift and go to state 35
     CASE            shift and go to state 36
-    VERT            shift and go to state 37
+    VERT            shift and go to state 38
+    ELSE            shift and go to state 39
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
     untilbody                      shift and go to state 28
     whilebody                      shift and go to state 29
     casebody                       shift and go to state 30
     istrue                         shift and go to state 32
+    case_else                      shift and go to state 37
+    empty                          shift and go to state 40
 
-state 81
+state 85
 
     (14) instructions -> instructions REPEAT LPARENT repeat_instructions . RPARENT SEMICOLON commentary
 
-    RPARENT         shift and go to state 114
+    RPARENT         shift and go to state 119
 
 
-state 82
+state 86
 
     (15) instructions -> instructions untilbody SEMICOLON commentary .
 
@@ -1360,10 +1483,12 @@
     WHILE           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
     CASE            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
     VERT            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
+    ELSE            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
     BREAK           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
 
 
-state 83
+state 87
 
     (16) instructions -> instructions whilebody SEMICOLON commentary .
 
@@ -1383,10 +1508,12 @@
     WHILE           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
     CASE            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
     VERT            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
+    ELSE            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
     BREAK           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
 
 
-state 84
+state 88
 
     (17) instructions -> instructions casebody SEMICOLON commentary .
 
@@ -1406,31 +1533,33 @@
     WHILE           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
     CASE            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
     VERT            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
+    ELSE            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
     BREAK           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
 
 
-state 85
+state 89
 
     (18) instructions -> instructions PRINT LPARENT startvalue . RPARENT SEMICOLON commentary
 
-    RPARENT         shift and go to state 115
+    RPARENT         shift and go to state 120
 
 
-state 86
+state 90
 
-    (63) startvalue -> STRING .
+    (64) startvalue -> STRING .
 
-    RPARENT         reduce using rule 63 (startvalue -> STRING .)
+    RPARENT         reduce using rule 64 (startvalue -> STRING .)
 
 
-state 87
+state 91
 
-    (64) startvalue -> ID .
+    (65) startvalue -> ID .
 
-    RPARENT         reduce using rule 64 (startvalue -> ID .)
+    RPARENT         reduce using rule 65 (startvalue -> ID .)
 
 
-state 88
+state 92
 
     (19) instructions -> instructions istrue SEMICOLON commentary .
 
@@ -1450,17 +1579,19 @@
     WHILE           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
     CASE            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
     VERT            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
+    ELSE            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
     BREAK           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
 
 
-state 89
+state 93
 
     (20) instructions -> instructions CALL LPARENT ID . RPARENT SEMICOLON commentary
 
-    RPARENT         shift and go to state 116
+    RPARENT         shift and go to state 121
 
 
-state 90
+state 94
 
     (45) untilbody -> UNTIL LPARENT instructions . RPARENT condition
     (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
@@ -1480,11 +1611,15 @@
     (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
     (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
     (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
-    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (50) casebody -> . CASE ID innercasebody
-    (62) istrue -> . VERT LPARENT ID RPARENT
+    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (48) casebody -> . case_else
+    (51) casebody -> . CASE ID innercasebody
+    (63) istrue -> . VERT LPARENT ID RPARENT
+    (49) case_else -> . ELSE LPARENT instructions RPARENT
+    (50) case_else -> . empty
+    (67) empty -> .
 
-    RPARENT         shift and go to state 117
+    RPARENT         shift and go to state 122
     NEW             shift and go to state 19
     VALUES          shift and go to state 20
     ALTER           shift and go to state 21
@@ -1499,14 +1634,18 @@
     UNTIL           shift and go to state 34
     WHILE           shift and go to state 35
     CASE            shift and go to state 36
-    VERT            shift and go to state 37
+    VERT            shift and go to state 38
+    ELSE            shift and go to state 39
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
     untilbody                      shift and go to state 28
     whilebody                      shift and go to state 29
     casebody                       shift and go to state 30
     istrue                         shift and go to state 32
+    case_else                      shift and go to state 37
+    empty                          shift and go to state 40
 
-state 91
+state 95
 
     (46) whilebody -> WHILE condition LPARENT . instructions RPARENT
     (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
@@ -1525,38 +1664,40 @@
     (19) instructions -> . instructions istrue SEMICOLON commentary
     (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
     (21) instructions -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
-    instructions                   shift and go to state 118
+    instructions                   shift and go to state 123
     empty                          shift and go to state 16
 
-state 92
+state 96
 
-    (55) condition -> ID comparator . ID
-    (56) condition -> ID comparator . NUMBER
+    (56) condition -> ID comparator . ID
+    (57) condition -> ID comparator . NUMBER
 
-    ID              shift and go to state 119
-    NUMBER          shift and go to state 120
+    ID              shift and go to state 124
+    NUMBER          shift and go to state 125
 
 
-state 93
+state 97
 
     (34) comparator -> GT .
 
@@ -1564,7 +1705,7 @@
     NUMBER          reduce using rule 34 (comparator -> GT .)
 
 
-state 94
+state 98
 
     (35) comparator -> LT .
 
@@ -1572,7 +1713,7 @@
     NUMBER          reduce using rule 35 (comparator -> LT .)
 
 
-state 95
+state 99
 
     (36) comparator -> GET .
 
@@ -1580,7 +1721,7 @@
     NUMBER          reduce using rule 36 (comparator -> GET .)
 
 
-state 96
+state 100
 
     (37) comparator -> LET .
 
@@ -1588,7 +1729,7 @@
     NUMBER          reduce using rule 37 (comparator -> LET .)
 
 
-state 97
+state 101
 
     (38) comparator -> EQ .
 
@@ -1596,7 +1737,7 @@
     NUMBER          reduce using rule 38 (comparator -> EQ .)
 
 
-state 98
+state 102
 
     (39) comparator -> DT .
 
@@ -1604,70 +1745,124 @@
     NUMBER          reduce using rule 39 (comparator -> DT .)
 
 
-state 99
-
-    (57) condition -> NUMBER comparator . ID
-    (58) condition -> NUMBER comparator . NUMBER
-
-    ID              shift and go to state 122
-    NUMBER          shift and go to state 121
-
-
-state 100
-
-    (47) casebody -> CASE WHEN LPARENT . condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (55) condition -> . ID comparator ID
-    (56) condition -> . ID comparator NUMBER
-    (57) condition -> . NUMBER comparator ID
-    (58) condition -> . NUMBER comparator NUMBER
-    (59) condition -> . TRUE
-    (60) condition -> . FALSE
-    (61) condition -> . istrue
-    (62) istrue -> . VERT LPARENT ID RPARENT
-
-    ID              shift and go to state 57
-    NUMBER          shift and go to state 58
-    TRUE            shift and go to state 59
-    FALSE           shift and go to state 60
-    VERT            shift and go to state 37
-
-    condition                      shift and go to state 123
-    istrue                         shift and go to state 61
-
-state 101
-
-    (50) casebody -> CASE ID innercasebody .
-
-    SEMICOLON       reduce using rule 50 (casebody -> CASE ID innercasebody .)
-
-
-state 102
-
-    (51) innercasebody -> WHEN . NUMBER THEN LPARENT instructions RPARENT innercasebody
-    (52) innercasebody -> WHEN . TRUE THEN LPARENT instructions RPARENT innercasebody
-    (53) innercasebody -> WHEN . FALSE THEN LPARENT instructions RPARENT innercasebody
-
-    NUMBER          shift and go to state 124
-    TRUE            shift and go to state 125
-    FALSE           shift and go to state 126
-
-
 state 103
 
-    (54) innercasebody -> empty .
+    (58) condition -> NUMBER comparator . ID
+    (59) condition -> NUMBER comparator . NUMBER
 
-    SEMICOLON       reduce using rule 54 (innercasebody -> empty .)
+    ID              shift and go to state 127
+    NUMBER          shift and go to state 126
 
 
 state 104
 
-    (62) istrue -> VERT LPARENT ID . RPARENT
+    (47) casebody -> CASE WHEN LPARENT . condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (56) condition -> . ID comparator ID
+    (57) condition -> . ID comparator NUMBER
+    (58) condition -> . NUMBER comparator ID
+    (59) condition -> . NUMBER comparator NUMBER
+    (60) condition -> . TRUE
+    (61) condition -> . FALSE
+    (62) condition -> . istrue
+    (63) istrue -> . VERT LPARENT ID RPARENT
 
-    RPARENT         shift and go to state 127
+    ID              shift and go to state 60
+    NUMBER          shift and go to state 61
+    TRUE            shift and go to state 62
+    FALSE           shift and go to state 63
+    VERT            shift and go to state 38
 
+    condition                      shift and go to state 128
+    istrue                         shift and go to state 64
 
 state 105
 
+    (51) casebody -> CASE ID innercasebody .
+
+    SEMICOLON       reduce using rule 51 (casebody -> CASE ID innercasebody .)
+
+
+state 106
+
+    (52) innercasebody -> WHEN . NUMBER THEN LPARENT instructions RPARENT innercasebody
+    (53) innercasebody -> WHEN . TRUE THEN LPARENT instructions RPARENT innercasebody
+    (54) innercasebody -> WHEN . FALSE THEN LPARENT instructions RPARENT innercasebody
+
+    NUMBER          shift and go to state 129
+    TRUE            shift and go to state 130
+    FALSE           shift and go to state 131
+
+
+state 107
+
+    (55) innercasebody -> empty .
+
+    SEMICOLON       reduce using rule 55 (innercasebody -> empty .)
+
+
+state 108
+
+    (63) istrue -> VERT LPARENT ID . RPARENT
+
+    RPARENT         shift and go to state 132
+
+
+state 109
+
+    (49) case_else -> ELSE LPARENT instructions . RPARENT
+    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
+    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
+    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
+    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
+    (10) instructions -> instructions . MOVR SEMICOLON commentary
+    (11) instructions -> instructions . MOVL SEMICOLON commentary
+    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
+    (13) instructions -> instructions . STOP SEMICOLON commentary
+    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
+    (15) instructions -> instructions . untilbody SEMICOLON commentary
+    (16) instructions -> instructions . whilebody SEMICOLON commentary
+    (17) instructions -> instructions . casebody SEMICOLON commentary
+    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
+    (19) instructions -> instructions . istrue SEMICOLON commentary
+    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
+    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
+    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
+    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (48) casebody -> . case_else
+    (51) casebody -> . CASE ID innercasebody
+    (63) istrue -> . VERT LPARENT ID RPARENT
+    (49) case_else -> . ELSE LPARENT instructions RPARENT
+    (50) case_else -> . empty
+    (67) empty -> .
+
+    RPARENT         shift and go to state 133
+    NEW             shift and go to state 19
+    VALUES          shift and go to state 20
+    ALTER           shift and go to state 21
+    ALTERB          shift and go to state 22
+    MOVR            shift and go to state 23
+    MOVL            shift and go to state 24
+    HAMMER          shift and go to state 25
+    STOP            shift and go to state 26
+    REPEAT          shift and go to state 27
+    PRINT           shift and go to state 31
+    CALL            shift and go to state 33
+    UNTIL           shift and go to state 34
+    WHILE           shift and go to state 35
+    CASE            shift and go to state 36
+    VERT            shift and go to state 38
+    ELSE            shift and go to state 39
+    SEMICOLON       reduce using rule 67 (empty -> .)
+
+    untilbody                      shift and go to state 28
+    whilebody                      shift and go to state 29
+    casebody                       shift and go to state 30
+    istrue                         shift and go to state 32
+    case_else                      shift and go to state 37
+    empty                          shift and go to state 40
+
+state 110
+
     (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .
 
     PRINCIPAL       reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)
@@ -1675,28 +1870,28 @@
     $end            reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)
 
 
-state 106
+state 111
 
     (6) instructions -> instructions NEW ID LPARENT datatype . COMMA value RPARENT SEMICOLON commentary
 
-    COMMA           shift and go to state 128
+    COMMA           shift and go to state 134
 
 
-state 107
+state 112
 
     (24) datatype -> NUMVAL .
 
     COMMA           reduce using rule 24 (datatype -> NUMVAL .)
 
 
-state 108
+state 113
 
     (25) datatype -> BOOLVAL .
 
     COMMA           reduce using rule 25 (datatype -> BOOLVAL .)
 
 
-state 109
+state 114
 
     (7) instructions -> instructions VALUES LPARENT ID COMMA . value RPARENT SEMICOLON commentary
     (26) value -> . NUMBER
@@ -1704,14 +1899,14 @@
     (28) value -> . FALSE
     (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
 
-    NUMBER          shift and go to state 130
-    TRUE            shift and go to state 131
-    FALSE           shift and go to state 132
-    ALTER           shift and go to state 133
+    NUMBER          shift and go to state 136
+    TRUE            shift and go to state 137
+    FALSE           shift and go to state 138
+    ALTER           shift and go to state 139
 
-    value                          shift and go to state 129
+    value                          shift and go to state 135
 
-state 110
+state 115
 
     (8) instructions -> instructions ALTER LPARENT ID COMMA . operator COMMA value RPARENT SEMICOLON commentary
     (30) operator -> . ADD
@@ -1719,77 +1914,77 @@
     (32) operator -> . MUL
     (33) operator -> . DIV
 
-    ADD             shift and go to state 135
-    SUB             shift and go to state 136
-    MUL             shift and go to state 137
-    DIV             shift and go to state 138
+    ADD             shift and go to state 141
+    SUB             shift and go to state 142
+    MUL             shift and go to state 143
+    DIV             shift and go to state 144
 
-    operator                       shift and go to state 134
+    operator                       shift and go to state 140
 
-state 111
+state 116
 
     (9) instructions -> instructions ALTERB LPARENT ID RPARENT . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 139
+    SEMICOLON       shift and go to state 145
 
 
-state 112
+state 117
 
     (12) instructions -> instructions HAMMER LPARENT position RPARENT . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 140
+    SEMICOLON       shift and go to state 146
 
 
-state 113
+state 118
 
     (44) repeat_instructions -> instructions BREAK .
 
     RPARENT         reduce using rule 44 (repeat_instructions -> instructions BREAK .)
 
 
-state 114
+state 119
 
     (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 141
+    SEMICOLON       shift and go to state 147
 
 
-state 115
+state 120
 
     (18) instructions -> instructions PRINT LPARENT startvalue RPARENT . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 142
+    SEMICOLON       shift and go to state 148
 
 
-state 116
+state 121
 
     (20) instructions -> instructions CALL LPARENT ID RPARENT . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 143
+    SEMICOLON       shift and go to state 149
 
 
-state 117
+state 122
 
     (45) untilbody -> UNTIL LPARENT instructions RPARENT . condition
-    (55) condition -> . ID comparator ID
-    (56) condition -> . ID comparator NUMBER
-    (57) condition -> . NUMBER comparator ID
-    (58) condition -> . NUMBER comparator NUMBER
-    (59) condition -> . TRUE
-    (60) condition -> . FALSE
-    (61) condition -> . istrue
-    (62) istrue -> . VERT LPARENT ID RPARENT
+    (56) condition -> . ID comparator ID
+    (57) condition -> . ID comparator NUMBER
+    (58) condition -> . NUMBER comparator ID
+    (59) condition -> . NUMBER comparator NUMBER
+    (60) condition -> . TRUE
+    (61) condition -> . FALSE
+    (62) condition -> . istrue
+    (63) istrue -> . VERT LPARENT ID RPARENT
 
-    ID              shift and go to state 57
-    NUMBER          shift and go to state 58
-    TRUE            shift and go to state 59
-    FALSE           shift and go to state 60
-    VERT            shift and go to state 37
+    ID              shift and go to state 60
+    NUMBER          shift and go to state 61
+    TRUE            shift and go to state 62
+    FALSE           shift and go to state 63
+    VERT            shift and go to state 38
 
-    condition                      shift and go to state 144
-    istrue                         shift and go to state 61
+    condition                      shift and go to state 150
+    istrue                         shift and go to state 64
 
-state 118
+state 123
 
     (46) whilebody -> WHILE condition LPARENT instructions . RPARENT
     (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
@@ -1809,11 +2004,15 @@
     (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
     (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
     (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
-    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (50) casebody -> . CASE ID innercasebody
-    (62) istrue -> . VERT LPARENT ID RPARENT
+    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (48) casebody -> . case_else
+    (51) casebody -> . CASE ID innercasebody
+    (63) istrue -> . VERT LPARENT ID RPARENT
+    (49) case_else -> . ELSE LPARENT instructions RPARENT
+    (50) case_else -> . empty
+    (67) empty -> .
 
-    RPARENT         shift and go to state 145
+    RPARENT         shift and go to state 151
     NEW             shift and go to state 19
     VALUES          shift and go to state 20
     ALTER           shift and go to state 21
@@ -1828,380 +2027,401 @@
     UNTIL           shift and go to state 34
     WHILE           shift and go to state 35
     CASE            shift and go to state 36
-    VERT            shift and go to state 37
+    VERT            shift and go to state 38
+    ELSE            shift and go to state 39
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
     untilbody                      shift and go to state 28
     whilebody                      shift and go to state 29
     casebody                       shift and go to state 30
     istrue                         shift and go to state 32
-
-state 119
-
-    (55) condition -> ID comparator ID .
-
-    LPARENT         reduce using rule 55 (condition -> ID comparator ID .)
-    RPARENT         reduce using rule 55 (condition -> ID comparator ID .)
-    SEMICOLON       reduce using rule 55 (condition -> ID comparator ID .)
-
-
-state 120
-
-    (56) condition -> ID comparator NUMBER .
-
-    LPARENT         reduce using rule 56 (condition -> ID comparator NUMBER .)
-    RPARENT         reduce using rule 56 (condition -> ID comparator NUMBER .)
-    SEMICOLON       reduce using rule 56 (condition -> ID comparator NUMBER .)
-
-
-state 121
-
-    (58) condition -> NUMBER comparator NUMBER .
-
-    LPARENT         reduce using rule 58 (condition -> NUMBER comparator NUMBER .)
-    RPARENT         reduce using rule 58 (condition -> NUMBER comparator NUMBER .)
-    SEMICOLON       reduce using rule 58 (condition -> NUMBER comparator NUMBER .)
-
-
-state 122
-
-    (57) condition -> NUMBER comparator ID .
-
-    LPARENT         reduce using rule 57 (condition -> NUMBER comparator ID .)
-    RPARENT         reduce using rule 57 (condition -> NUMBER comparator ID .)
-    SEMICOLON       reduce using rule 57 (condition -> NUMBER comparator ID .)
-
-
-state 123
-
-    (47) casebody -> CASE WHEN LPARENT condition . RPARENT THEN LPARENT instructions RPARENT case_else
-
-    RPARENT         shift and go to state 146
-
+    case_else                      shift and go to state 37
+    empty                          shift and go to state 40
 
 state 124
 
-    (51) innercasebody -> WHEN NUMBER . THEN LPARENT instructions RPARENT innercasebody
+    (56) condition -> ID comparator ID .
 
-    THEN            shift and go to state 147
+    LPARENT         reduce using rule 56 (condition -> ID comparator ID .)
+    RPARENT         reduce using rule 56 (condition -> ID comparator ID .)
+    SEMICOLON       reduce using rule 56 (condition -> ID comparator ID .)
 
 
 state 125
 
-    (52) innercasebody -> WHEN TRUE . THEN LPARENT instructions RPARENT innercasebody
+    (57) condition -> ID comparator NUMBER .
 
-    THEN            shift and go to state 148
+    LPARENT         reduce using rule 57 (condition -> ID comparator NUMBER .)
+    RPARENT         reduce using rule 57 (condition -> ID comparator NUMBER .)
+    SEMICOLON       reduce using rule 57 (condition -> ID comparator NUMBER .)
 
 
 state 126
 
-    (53) innercasebody -> WHEN FALSE . THEN LPARENT instructions RPARENT innercasebody
+    (59) condition -> NUMBER comparator NUMBER .
 
-    THEN            shift and go to state 149
+    LPARENT         reduce using rule 59 (condition -> NUMBER comparator NUMBER .)
+    RPARENT         reduce using rule 59 (condition -> NUMBER comparator NUMBER .)
+    SEMICOLON       reduce using rule 59 (condition -> NUMBER comparator NUMBER .)
 
 
 state 127
 
-    (62) istrue -> VERT LPARENT ID RPARENT .
+    (58) condition -> NUMBER comparator ID .
 
-    SEMICOLON       reduce using rule 62 (istrue -> VERT LPARENT ID RPARENT .)
-    LPARENT         reduce using rule 62 (istrue -> VERT LPARENT ID RPARENT .)
-    RPARENT         reduce using rule 62 (istrue -> VERT LPARENT ID RPARENT .)
+    LPARENT         reduce using rule 58 (condition -> NUMBER comparator ID .)
+    RPARENT         reduce using rule 58 (condition -> NUMBER comparator ID .)
+    SEMICOLON       reduce using rule 58 (condition -> NUMBER comparator ID .)
 
 
 state 128
 
+    (47) casebody -> CASE WHEN LPARENT condition . RPARENT THEN LPARENT instructions RPARENT casebody
+
+    RPARENT         shift and go to state 152
+
+
+state 129
+
+    (52) innercasebody -> WHEN NUMBER . THEN LPARENT instructions RPARENT innercasebody
+
+    THEN            shift and go to state 153
+
+
+state 130
+
+    (53) innercasebody -> WHEN TRUE . THEN LPARENT instructions RPARENT innercasebody
+
+    THEN            shift and go to state 154
+
+
+state 131
+
+    (54) innercasebody -> WHEN FALSE . THEN LPARENT instructions RPARENT innercasebody
+
+    THEN            shift and go to state 155
+
+
+state 132
+
+    (63) istrue -> VERT LPARENT ID RPARENT .
+
+    SEMICOLON       reduce using rule 63 (istrue -> VERT LPARENT ID RPARENT .)
+    LPARENT         reduce using rule 63 (istrue -> VERT LPARENT ID RPARENT .)
+    RPARENT         reduce using rule 63 (istrue -> VERT LPARENT ID RPARENT .)
+
+
+state 133
+
+    (49) case_else -> ELSE LPARENT instructions RPARENT .
+
+    SEMICOLON       reduce using rule 49 (case_else -> ELSE LPARENT instructions RPARENT .)
+
+
+state 134
+
     (6) instructions -> instructions NEW ID LPARENT datatype COMMA . value RPARENT SEMICOLON commentary
     (26) value -> . NUMBER
     (27) value -> . TRUE
     (28) value -> . FALSE
     (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
 
-    NUMBER          shift and go to state 130
-    TRUE            shift and go to state 131
-    FALSE           shift and go to state 132
-    ALTER           shift and go to state 133
+    NUMBER          shift and go to state 136
+    TRUE            shift and go to state 137
+    FALSE           shift and go to state 138
+    ALTER           shift and go to state 139
 
-    value                          shift and go to state 150
+    value                          shift and go to state 156
 
-state 129
+state 135
 
     (7) instructions -> instructions VALUES LPARENT ID COMMA value . RPARENT SEMICOLON commentary
 
-    RPARENT         shift and go to state 151
+    RPARENT         shift and go to state 157
 
 
-state 130
+state 136
 
     (26) value -> NUMBER .
 
     RPARENT         reduce using rule 26 (value -> NUMBER .)
 
 
-state 131
+state 137
 
     (27) value -> TRUE .
 
     RPARENT         reduce using rule 27 (value -> TRUE .)
 
 
-state 132
+state 138
 
     (28) value -> FALSE .
 
     RPARENT         reduce using rule 28 (value -> FALSE .)
 
 
-state 133
+state 139
 
     (29) value -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT
 
-    LPARENT         shift and go to state 152
+    LPARENT         shift and go to state 158
 
 
-state 134
+state 140
 
     (8) instructions -> instructions ALTER LPARENT ID COMMA operator . COMMA value RPARENT SEMICOLON commentary
 
-    COMMA           shift and go to state 153
+    COMMA           shift and go to state 159
 
 
-state 135
+state 141
 
     (30) operator -> ADD .
 
     COMMA           reduce using rule 30 (operator -> ADD .)
 
 
-state 136
+state 142
 
     (31) operator -> SUB .
 
     COMMA           reduce using rule 31 (operator -> SUB .)
 
 
-state 137
+state 143
 
     (32) operator -> MUL .
 
     COMMA           reduce using rule 32 (operator -> MUL .)
 
 
-state 138
+state 144
 
     (33) operator -> DIV .
 
     COMMA           reduce using rule 33 (operator -> DIV .)
 
 
-state 139
+state 145
 
     (9) instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 154
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 160
+    empty                          shift and go to state 76
 
-state 140
+state 146
 
     (12) instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 155
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 161
+    empty                          shift and go to state 76
 
-state 141
+state 147
 
     (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 156
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 162
+    empty                          shift and go to state 76
 
-state 142
+state 148
 
     (18) instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 157
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 163
+    empty                          shift and go to state 76
 
-state 143
+state 149
 
     (20) instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 158
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 164
+    empty                          shift and go to state 76
 
-state 144
+state 150
 
     (45) untilbody -> UNTIL LPARENT instructions RPARENT condition .
 
     SEMICOLON       reduce using rule 45 (untilbody -> UNTIL LPARENT instructions RPARENT condition .)
 
 
-state 145
+state 151
 
     (46) whilebody -> WHILE condition LPARENT instructions RPARENT .
 
     SEMICOLON       reduce using rule 46 (whilebody -> WHILE condition LPARENT instructions RPARENT .)
 
 
-state 146
+state 152
 
-    (47) casebody -> CASE WHEN LPARENT condition RPARENT . THEN LPARENT instructions RPARENT case_else
+    (47) casebody -> CASE WHEN LPARENT condition RPARENT . THEN LPARENT instructions RPARENT casebody
 
-    THEN            shift and go to state 159
+    THEN            shift and go to state 165
 
 
-state 147
+state 153
 
-    (51) innercasebody -> WHEN NUMBER THEN . LPARENT instructions RPARENT innercasebody
+    (52) innercasebody -> WHEN NUMBER THEN . LPARENT instructions RPARENT innercasebody
 
-    LPARENT         shift and go to state 160
+    LPARENT         shift and go to state 166
 
 
-state 148
+state 154
 
-    (52) innercasebody -> WHEN TRUE THEN . LPARENT instructions RPARENT innercasebody
+    (53) innercasebody -> WHEN TRUE THEN . LPARENT instructions RPARENT innercasebody
 
-    LPARENT         shift and go to state 161
+    LPARENT         shift and go to state 167
 
 
-state 149
+state 155
 
-    (53) innercasebody -> WHEN FALSE THEN . LPARENT instructions RPARENT innercasebody
+    (54) innercasebody -> WHEN FALSE THEN . LPARENT instructions RPARENT innercasebody
 
-    LPARENT         shift and go to state 162
+    LPARENT         shift and go to state 168
 
 
-state 150
+state 156
 
     (6) instructions -> instructions NEW ID LPARENT datatype COMMA value . RPARENT SEMICOLON commentary
 
-    RPARENT         shift and go to state 163
+    RPARENT         shift and go to state 169
 
 
-state 151
+state 157
 
     (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 164
+    SEMICOLON       shift and go to state 170
 
 
-state 152
+state 158
 
     (29) value -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT
 
-    ID              shift and go to state 165
+    ID              shift and go to state 171
 
 
-state 153
+state 159
 
     (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA . value RPARENT SEMICOLON commentary
     (26) value -> . NUMBER
@@ -2209,14 +2429,14 @@
     (28) value -> . FALSE
     (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
 
-    NUMBER          shift and go to state 130
-    TRUE            shift and go to state 131
-    FALSE           shift and go to state 132
-    ALTER           shift and go to state 133
+    NUMBER          shift and go to state 136
+    TRUE            shift and go to state 137
+    FALSE           shift and go to state 138
+    ALTER           shift and go to state 139
 
-    value                          shift and go to state 166
+    value                          shift and go to state 172
 
-state 154
+state 160
 
     (9) instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .
 
@@ -2236,10 +2456,12 @@
     WHILE           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
     CASE            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
     VERT            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
+    ELSE            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
     BREAK           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
 
 
-state 155
+state 161
 
     (12) instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .
 
@@ -2259,10 +2481,12 @@
     WHILE           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
     CASE            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
     VERT            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
+    ELSE            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
     BREAK           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
 
 
-state 156
+state 162
 
     (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .
 
@@ -2282,10 +2506,12 @@
     WHILE           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
     CASE            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
     VERT            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
+    ELSE            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
     BREAK           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
 
 
-state 157
+state 163
 
     (18) instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .
 
@@ -2305,10 +2531,12 @@
     WHILE           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
     CASE            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
     VERT            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
+    ELSE            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
     BREAK           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
 
 
-state 158
+state 164
 
     (20) instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .
 
@@ -2328,19 +2556,21 @@
     WHILE           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
     CASE            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
     VERT            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
+    ELSE            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
     BREAK           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
 
 
-state 159
+state 165
 
-    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN . LPARENT instructions RPARENT case_else
+    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN . LPARENT instructions RPARENT casebody
 
-    LPARENT         shift and go to state 167
+    LPARENT         shift and go to state 173
 
 
-state 160
+state 166
 
-    (51) innercasebody -> WHEN NUMBER THEN LPARENT . instructions RPARENT innercasebody
+    (52) innercasebody -> WHEN NUMBER THEN LPARENT . instructions RPARENT innercasebody
     (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
     (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
     (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
@@ -2357,31 +2587,33 @@
     (19) instructions -> . instructions istrue SEMICOLON commentary
     (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
     (21) instructions -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
-    instructions                   shift and go to state 168
+    instructions                   shift and go to state 174
     empty                          shift and go to state 16
 
-state 161
+state 167
 
-    (52) innercasebody -> WHEN TRUE THEN LPARENT . instructions RPARENT innercasebody
+    (53) innercasebody -> WHEN TRUE THEN LPARENT . instructions RPARENT innercasebody
     (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
     (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
     (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
@@ -2398,31 +2630,33 @@
     (19) instructions -> . instructions istrue SEMICOLON commentary
     (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
     (21) instructions -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
-    instructions                   shift and go to state 169
+    instructions                   shift and go to state 175
     empty                          shift and go to state 16
 
-state 162
+state 168
 
-    (53) innercasebody -> WHEN FALSE THEN LPARENT . instructions RPARENT innercasebody
+    (54) innercasebody -> WHEN FALSE THEN LPARENT . instructions RPARENT innercasebody
     (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
     (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
     (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
@@ -2439,81 +2673,85 @@
     (19) instructions -> . instructions istrue SEMICOLON commentary
     (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
     (21) instructions -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
-    instructions                   shift and go to state 170
+    instructions                   shift and go to state 176
     empty                          shift and go to state 16
 
-state 163
+state 169
 
     (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 171
+    SEMICOLON       shift and go to state 177
 
 
-state 164
+state 170
 
     (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 172
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 178
+    empty                          shift and go to state 76
 
-state 165
+state 171
 
     (29) value -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT
 
-    COMMA           shift and go to state 173
+    COMMA           shift and go to state 179
 
 
-state 166
+state 172
 
     (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value . RPARENT SEMICOLON commentary
 
-    RPARENT         shift and go to state 174
+    RPARENT         shift and go to state 180
 
 
-state 167
+state 173
 
-    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT . instructions RPARENT case_else
+    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT . instructions RPARENT casebody
     (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
     (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
     (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
@@ -2530,31 +2768,33 @@
     (19) instructions -> . instructions istrue SEMICOLON commentary
     (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
     (21) instructions -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
-    instructions                   shift and go to state 175
+    instructions                   shift and go to state 181
     empty                          shift and go to state 16
 
-state 168
+state 174
 
-    (51) innercasebody -> WHEN NUMBER THEN LPARENT instructions . RPARENT innercasebody
+    (52) innercasebody -> WHEN NUMBER THEN LPARENT instructions . RPARENT innercasebody
     (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
     (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
     (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
@@ -2572,11 +2812,15 @@
     (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
     (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
     (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
-    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (50) casebody -> . CASE ID innercasebody
-    (62) istrue -> . VERT LPARENT ID RPARENT
+    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (48) casebody -> . case_else
+    (51) casebody -> . CASE ID innercasebody
+    (63) istrue -> . VERT LPARENT ID RPARENT
+    (49) case_else -> . ELSE LPARENT instructions RPARENT
+    (50) case_else -> . empty
+    (67) empty -> .
 
-    RPARENT         shift and go to state 176
+    RPARENT         shift and go to state 182
     NEW             shift and go to state 19
     VALUES          shift and go to state 20
     ALTER           shift and go to state 21
@@ -2591,16 +2835,20 @@
     UNTIL           shift and go to state 34
     WHILE           shift and go to state 35
     CASE            shift and go to state 36
-    VERT            shift and go to state 37
+    VERT            shift and go to state 38
+    ELSE            shift and go to state 39
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
     untilbody                      shift and go to state 28
     whilebody                      shift and go to state 29
     casebody                       shift and go to state 30
     istrue                         shift and go to state 32
+    case_else                      shift and go to state 37
+    empty                          shift and go to state 40
 
-state 169
+state 175
 
-    (52) innercasebody -> WHEN TRUE THEN LPARENT instructions . RPARENT innercasebody
+    (53) innercasebody -> WHEN TRUE THEN LPARENT instructions . RPARENT innercasebody
     (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
     (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
     (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
@@ -2618,11 +2866,15 @@
     (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
     (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
     (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
-    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (50) casebody -> . CASE ID innercasebody
-    (62) istrue -> . VERT LPARENT ID RPARENT
+    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (48) casebody -> . case_else
+    (51) casebody -> . CASE ID innercasebody
+    (63) istrue -> . VERT LPARENT ID RPARENT
+    (49) case_else -> . ELSE LPARENT instructions RPARENT
+    (50) case_else -> . empty
+    (67) empty -> .
 
-    RPARENT         shift and go to state 177
+    RPARENT         shift and go to state 183
     NEW             shift and go to state 19
     VALUES          shift and go to state 20
     ALTER           shift and go to state 21
@@ -2637,16 +2889,20 @@
     UNTIL           shift and go to state 34
     WHILE           shift and go to state 35
     CASE            shift and go to state 36
-    VERT            shift and go to state 37
+    VERT            shift and go to state 38
+    ELSE            shift and go to state 39
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
     untilbody                      shift and go to state 28
     whilebody                      shift and go to state 29
     casebody                       shift and go to state 30
     istrue                         shift and go to state 32
+    case_else                      shift and go to state 37
+    empty                          shift and go to state 40
 
-state 170
+state 176
 
-    (53) innercasebody -> WHEN FALSE THEN LPARENT instructions . RPARENT innercasebody
+    (54) innercasebody -> WHEN FALSE THEN LPARENT instructions . RPARENT innercasebody
     (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
     (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
     (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
@@ -2664,11 +2920,15 @@
     (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
     (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
     (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
-    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (50) casebody -> . CASE ID innercasebody
-    (62) istrue -> . VERT LPARENT ID RPARENT
+    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (48) casebody -> . case_else
+    (51) casebody -> . CASE ID innercasebody
+    (63) istrue -> . VERT LPARENT ID RPARENT
+    (49) case_else -> . ELSE LPARENT instructions RPARENT
+    (50) case_else -> . empty
+    (67) empty -> .
 
-    RPARENT         shift and go to state 178
+    RPARENT         shift and go to state 184
     NEW             shift and go to state 19
     VALUES          shift and go to state 20
     ALTER           shift and go to state 21
@@ -2683,43 +2943,49 @@
     UNTIL           shift and go to state 34
     WHILE           shift and go to state 35
     CASE            shift and go to state 36
-    VERT            shift and go to state 37
+    VERT            shift and go to state 38
+    ELSE            shift and go to state 39
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
     untilbody                      shift and go to state 28
     whilebody                      shift and go to state 29
     casebody                       shift and go to state 30
     istrue                         shift and go to state 32
+    case_else                      shift and go to state 37
+    empty                          shift and go to state 40
 
-state 171
+state 177
 
     (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 179
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 185
+    empty                          shift and go to state 76
 
-state 172
+state 178
 
     (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .
 
@@ -2739,10 +3005,12 @@
     WHILE           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
     CASE            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
     VERT            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
+    ELSE            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
     BREAK           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
 
 
-state 173
+state 179
 
     (29) value -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT
     (30) operator -> . ADD
@@ -2750,23 +3018,23 @@
     (32) operator -> . MUL
     (33) operator -> . DIV
 
-    ADD             shift and go to state 135
-    SUB             shift and go to state 136
-    MUL             shift and go to state 137
-    DIV             shift and go to state 138
+    ADD             shift and go to state 141
+    SUB             shift and go to state 142
+    MUL             shift and go to state 143
+    DIV             shift and go to state 144
 
-    operator                       shift and go to state 180
+    operator                       shift and go to state 186
 
-state 174
+state 180
 
     (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT . SEMICOLON commentary
 
-    SEMICOLON       shift and go to state 181
+    SEMICOLON       shift and go to state 187
 
 
-state 175
+state 181
 
-    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions . RPARENT case_else
+    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions . RPARENT casebody
     (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
     (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
     (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
@@ -2784,11 +3052,15 @@
     (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
     (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
     (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
-    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (50) casebody -> . CASE ID innercasebody
-    (62) istrue -> . VERT LPARENT ID RPARENT
+    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (48) casebody -> . case_else
+    (51) casebody -> . CASE ID innercasebody
+    (63) istrue -> . VERT LPARENT ID RPARENT
+    (49) case_else -> . ELSE LPARENT instructions RPARENT
+    (50) case_else -> . empty
+    (67) empty -> .
 
-    RPARENT         shift and go to state 182
+    RPARENT         shift and go to state 188
     NEW             shift and go to state 19
     VALUES          shift and go to state 20
     ALTER           shift and go to state 21
@@ -2803,59 +3075,63 @@
     UNTIL           shift and go to state 34
     WHILE           shift and go to state 35
     CASE            shift and go to state 36
-    VERT            shift and go to state 37
+    VERT            shift and go to state 38
+    ELSE            shift and go to state 39
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
+    casebody                       shift and go to state 30
     untilbody                      shift and go to state 28
     whilebody                      shift and go to state 29
-    casebody                       shift and go to state 30
     istrue                         shift and go to state 32
+    case_else                      shift and go to state 37
+    empty                          shift and go to state 40
 
-state 176
+state 182
 
-    (51) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT . innercasebody
-    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
-    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
-    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
-    (54) innercasebody -> . empty
-    (66) empty -> .
+    (52) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT . innercasebody
+    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
+    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
+    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
+    (55) innercasebody -> . empty
+    (67) empty -> .
 
-    WHEN            shift and go to state 102
-    SEMICOLON       reduce using rule 66 (empty -> .)
+    WHEN            shift and go to state 106
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
-    innercasebody                  shift and go to state 183
-    empty                          shift and go to state 103
+    innercasebody                  shift and go to state 189
+    empty                          shift and go to state 107
 
-state 177
+state 183
 
-    (52) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT . innercasebody
-    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
-    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
-    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
-    (54) innercasebody -> . empty
-    (66) empty -> .
+    (53) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT . innercasebody
+    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
+    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
+    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
+    (55) innercasebody -> . empty
+    (67) empty -> .
 
-    WHEN            shift and go to state 102
-    SEMICOLON       reduce using rule 66 (empty -> .)
+    WHEN            shift and go to state 106
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
-    innercasebody                  shift and go to state 184
-    empty                          shift and go to state 103
+    innercasebody                  shift and go to state 190
+    empty                          shift and go to state 107
 
-state 178
+state 184
 
-    (53) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT . innercasebody
-    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
-    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
-    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
-    (54) innercasebody -> . empty
-    (66) empty -> .
+    (54) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT . innercasebody
+    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
+    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
+    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
+    (55) innercasebody -> . empty
+    (67) empty -> .
 
-    WHEN            shift and go to state 102
-    SEMICOLON       reduce using rule 66 (empty -> .)
+    WHEN            shift and go to state 106
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
-    innercasebody                  shift and go to state 185
-    empty                          shift and go to state 103
+    innercasebody                  shift and go to state 191
+    empty                          shift and go to state 107
 
-state 179
+state 185
 
     (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .
 
@@ -2875,80 +3151,89 @@
     WHILE           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
     CASE            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
     VERT            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
+    ELSE            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
     BREAK           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
 
 
-state 180
+state 186
 
     (29) value -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT
 
-    COMMA           shift and go to state 186
+    COMMA           shift and go to state 192
 
 
-state 181
+state 187
 
     (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON . commentary
     (22) commentary -> . COMMENT
     (23) commentary -> . empty
-    (66) empty -> .
+    (67) empty -> .
 
-    COMMENT         shift and go to state 71
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
-    BREAK           reduce using rule 66 (empty -> .)
+    COMMENT         shift and go to state 75
+    RPARENT         reduce using rule 67 (empty -> .)
+    NEW             reduce using rule 67 (empty -> .)
+    VALUES          reduce using rule 67 (empty -> .)
+    ALTER           reduce using rule 67 (empty -> .)
+    ALTERB          reduce using rule 67 (empty -> .)
+    MOVR            reduce using rule 67 (empty -> .)
+    MOVL            reduce using rule 67 (empty -> .)
+    HAMMER          reduce using rule 67 (empty -> .)
+    STOP            reduce using rule 67 (empty -> .)
+    REPEAT          reduce using rule 67 (empty -> .)
+    PRINT           reduce using rule 67 (empty -> .)
+    CALL            reduce using rule 67 (empty -> .)
+    UNTIL           reduce using rule 67 (empty -> .)
+    WHILE           reduce using rule 67 (empty -> .)
+    CASE            reduce using rule 67 (empty -> .)
+    VERT            reduce using rule 67 (empty -> .)
+    ELSE            reduce using rule 67 (empty -> .)
+    SEMICOLON       reduce using rule 67 (empty -> .)
+    BREAK           reduce using rule 67 (empty -> .)
 
-    commentary                     shift and go to state 187
-    empty                          shift and go to state 72
+    commentary                     shift and go to state 193
+    empty                          shift and go to state 76
 
-state 182
+state 188
 
-    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT . case_else
-    (48) case_else -> . ELSE LPARENT instructions RPARENT
-    (49) case_else -> . empty
-    (66) empty -> .
+    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT . casebody
+    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
+    (48) casebody -> . case_else
+    (51) casebody -> . CASE ID innercasebody
+    (49) case_else -> . ELSE LPARENT instructions RPARENT
+    (50) case_else -> . empty
+    (67) empty -> .
 
-    ELSE            shift and go to state 189
-    SEMICOLON       reduce using rule 66 (empty -> .)
+    CASE            shift and go to state 36
+    ELSE            shift and go to state 39
+    SEMICOLON       reduce using rule 67 (empty -> .)
 
-    case_else                      shift and go to state 188
-    empty                          shift and go to state 190
+    casebody                       shift and go to state 194
+    case_else                      shift and go to state 37
+    empty                          shift and go to state 40
 
-state 183
+state 189
 
-    (51) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .
+    (52) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .
 
-    SEMICOLON       reduce using rule 51 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)
+    SEMICOLON       reduce using rule 52 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)
 
 
-state 184
+state 190
 
-    (52) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .
+    (53) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .
 
-    SEMICOLON       reduce using rule 52 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)
+    SEMICOLON       reduce using rule 53 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)
 
 
-state 185
+state 191
 
-    (53) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .
+    (54) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .
 
-    SEMICOLON       reduce using rule 53 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)
+    SEMICOLON       reduce using rule 54 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)
 
 
-state 186
+state 192
 
     (29) value -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT
     (26) value -> . NUMBER
@@ -2956,14 +3241,14 @@
     (28) value -> . FALSE
     (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
 
-    NUMBER          shift and go to state 130
-    TRUE            shift and go to state 131
-    FALSE           shift and go to state 132
-    ALTER           shift and go to state 133
+    NUMBER          shift and go to state 136
+    TRUE            shift and go to state 137
+    FALSE           shift and go to state 138
+    ALTER           shift and go to state 139
 
-    value                          shift and go to state 191
+    value                          shift and go to state 195
 
-state 187
+state 193
 
     (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .
 
@@ -2983,139 +3268,33 @@
     WHILE           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
     CASE            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
     VERT            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
+    ELSE            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
+    SEMICOLON       reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
     BREAK           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
 
 
-state 188
-
-    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else .
-
-    SEMICOLON       reduce using rule 47 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else .)
-
-
-state 189
-
-    (48) case_else -> ELSE . LPARENT instructions RPARENT
-
-    LPARENT         shift and go to state 192
-
+state 194
 
-state 190
+    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody .
 
-    (49) case_else -> empty .
+    SEMICOLON       reduce using rule 47 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody .)
 
-    SEMICOLON       reduce using rule 49 (case_else -> empty .)
 
-
-state 191
+state 195
 
     (29) value -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT
 
-    RPARENT         shift and go to state 193
-
-
-state 192
-
-    (48) case_else -> ELSE LPARENT . instructions RPARENT
-    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
-    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
-    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
-    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
-    (10) instructions -> . instructions MOVR SEMICOLON commentary
-    (11) instructions -> . instructions MOVL SEMICOLON commentary
-    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
-    (13) instructions -> . instructions STOP SEMICOLON commentary
-    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
-    (15) instructions -> . instructions untilbody SEMICOLON commentary
-    (16) instructions -> . instructions whilebody SEMICOLON commentary
-    (17) instructions -> . instructions casebody SEMICOLON commentary
-    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
-    (19) instructions -> . instructions istrue SEMICOLON commentary
-    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
-    (21) instructions -> . empty
-    (66) empty -> .
+    RPARENT         shift and go to state 196
 
-    RPARENT         reduce using rule 66 (empty -> .)
-    NEW             reduce using rule 66 (empty -> .)
-    VALUES          reduce using rule 66 (empty -> .)
-    ALTER           reduce using rule 66 (empty -> .)
-    ALTERB          reduce using rule 66 (empty -> .)
-    MOVR            reduce using rule 66 (empty -> .)
-    MOVL            reduce using rule 66 (empty -> .)
-    HAMMER          reduce using rule 66 (empty -> .)
-    STOP            reduce using rule 66 (empty -> .)
-    REPEAT          reduce using rule 66 (empty -> .)
-    PRINT           reduce using rule 66 (empty -> .)
-    CALL            reduce using rule 66 (empty -> .)
-    UNTIL           reduce using rule 66 (empty -> .)
-    WHILE           reduce using rule 66 (empty -> .)
-    CASE            reduce using rule 66 (empty -> .)
-    VERT            reduce using rule 66 (empty -> .)
 
-    instructions                   shift and go to state 194
-    empty                          shift and go to state 16
-
-state 193
+state 196
 
     (29) value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .
 
     RPARENT         reduce using rule 29 (value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .)
 
-
-state 194
-
-    (48) case_else -> ELSE LPARENT instructions . RPARENT
-    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
-    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
-    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
-    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
-    (10) instructions -> instructions . MOVR SEMICOLON commentary
-    (11) instructions -> instructions . MOVL SEMICOLON commentary
-    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
-    (13) instructions -> instructions . STOP SEMICOLON commentary
-    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
-    (15) instructions -> instructions . untilbody SEMICOLON commentary
-    (16) instructions -> instructions . whilebody SEMICOLON commentary
-    (17) instructions -> instructions . casebody SEMICOLON commentary
-    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
-    (19) instructions -> instructions . istrue SEMICOLON commentary
-    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
-    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
-    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
-    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else
-    (50) casebody -> . CASE ID innercasebody
-    (62) istrue -> . VERT LPARENT ID RPARENT
-
-    RPARENT         shift and go to state 195
-    NEW             shift and go to state 19
-    VALUES          shift and go to state 20
-    ALTER           shift and go to state 21
-    ALTERB          shift and go to state 22
-    MOVR            shift and go to state 23
-    MOVL            shift and go to state 24
-    HAMMER          shift and go to state 25
-    STOP            shift and go to state 26
-    REPEAT          shift and go to state 27
-    PRINT           shift and go to state 31
-    CALL            shift and go to state 33
-    UNTIL           shift and go to state 34
-    WHILE           shift and go to state 35
-    CASE            shift and go to state 36
-    VERT            shift and go to state 37
-
-    untilbody                      shift and go to state 28
-    whilebody                      shift and go to state 29
-    casebody                       shift and go to state 30
-    istrue                         shift and go to state 32
-
-state 195
-
-    (48) case_else -> ELSE LPARENT instructions RPARENT .
-
-    SEMICOLON       reduce using rule 48 (case_else -> ELSE LPARENT instructions RPARENT .)
-
 WARNING: 
 WARNING: Conflicts:
 WARNING: 
 WARNING: shift/reduce conflict for PROCEDURE in state 2 resolved as shift
-WARNING: shift/reduce conflict for PROCEDURE in state 65 resolved as shift
+WARNING: shift/reduce conflict for PROCEDURE in state 69 resolved as shift
Index: Pruebas/Variables.tgp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>-- Comentario\r\n\r\n@Principal(\r\n New @bu1(Bool, False);\r\n New @as(Num,12);\r\n New @otra(Num,18);\r\n New @opo3(Num,13);\r\n Case When (@otra < @as) Then (\r\n  New @kiki(Bool, True);\r\n  AlterB(@kiki);\r\n  AlterB(@kiki);\r\n  PrintValues(@kiki);\r\n  PrintValues(\"Hola hola\");  \r\n ) Else (\r\n  PrintValues(\"Este es el else\");\r\n );\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Pruebas/Variables.tgp b/Pruebas/Variables.tgp
--- a/Pruebas/Variables.tgp	
+++ b/Pruebas/Variables.tgp	
@@ -5,16 +5,30 @@
  New @as(Num,12);
  New @otra(Num,18);
  New @opo3(Num,13);
- Case When (@otra < @as) Then (
-  New @kiki(Bool, True);
-  AlterB(@kiki);
-  AlterB(@kiki);
-  PrintValues(@kiki);
-  PrintValues("Hola hola");  
- ) Else (
-  PrintValues("Este es el else");
+ Until (
+  PrintValues("Este es el until");
+  PrintValues(@opo3);
+  Alter(@opo3, SUB, 1);
+ ) @opo3 == 13;
+ Case When (@as > @otra) Then (
+  PrintValues("Caso 1");
+  Values(@as, 20);
  );
+ Values(@as, 20);
+ Case When (@as <> @otra) Then (
+  PrintValues("Caso 2");
+ )
+ Else (
+  PrintValues("else");
+ );
 );
+
+
+
+
+
+
+
 
 
 
Index: parsetab.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n# parsetab.py\r\n# This file is automatically generated. Do not edit.\r\n# pylint: disable=W,C,R\r\n_tabversion = '3.10'\r\n\r\n_lr_method = 'LALR'\r\n\r\n_lr_signature = 'ADD ALTER ALTERB BOOLVAL BREAK CALL CASE COMMA COMMENT DIV DT EAST ELSE EQ FALSE GET GT HAMMER ID LET LPARENT LT MOVL MOVR MUL NEW NORTH NUMBER NUMVAL PRINCIPAL PRINT PROCEDURE REPEAT RPARENT SEMICOLON SOUTH STOP STRING SUB THEN TRUE UNTIL VALUES VERT WEST WHEN WHILEprogram : COMMENT procedures principal procedures endprincipal : PRINCIPAL LPARENT instructions RPARENT SEMICOLONprincipal : emptyprocedures : PROCEDURE ID LPARENT instructions RPARENT SEMICOLON proceduresprocedures : emptyinstructions : instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentaryinstructions : instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentaryinstructions : instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentaryinstructions : instructions ALTERB LPARENT ID RPARENT SEMICOLON commentaryinstructions : instructions MOVR SEMICOLON commentaryinstructions : instructions MOVL SEMICOLON commentaryinstructions : instructions HAMMER LPARENT position RPARENT SEMICOLON commentaryinstructions : instructions STOP SEMICOLON commentaryinstructions : instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentaryinstructions : instructions untilbody SEMICOLON commentaryinstructions : instructions whilebody SEMICOLON commentaryinstructions : instructions casebody SEMICOLON commentaryinstructions : instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentaryinstructions : instructions istrue SEMICOLON commentaryinstructions : instructions CALL LPARENT ID RPARENT SEMICOLON commentaryinstructions : emptycommentary : COMMENTcommentary : emptydatatype : NUMVALdatatype : BOOLVALvalue : NUMBERvalue : TRUEvalue : FALSEvalue : ALTER LPARENT ID COMMA operator COMMA value RPARENToperator : ADDoperator : SUBoperator : MULoperator : DIVcomparator : GTcomparator : LTcomparator : GETcomparator : LETcomparator : EQcomparator : DTposition : NORTHposition : SOUTHposition : EASTposition : WESTrepeat_instructions : instructions BREAKuntilbody : UNTIL LPARENT instructions RPARENT conditionwhilebody : WHILE condition LPARENT instructions RPARENTcasebody : CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_elsecase_else : ELSE LPARENT instructions RPARENTcase_else : emptycasebody : CASE ID innercasebodyinnercasebody : WHEN NUMBER THEN LPARENT instructions RPARENT innercasebodyinnercasebody : WHEN TRUE THEN LPARENT instructions RPARENT innercasebodyinnercasebody : WHEN FALSE THEN LPARENT instructions RPARENT innercasebodyinnercasebody : emptycondition : ID comparator IDcondition : ID comparator NUMBERcondition : NUMBER comparator IDcondition : NUMBER comparator NUMBERcondition : TRUEcondition : FALSEcondition : istrueistrue : VERT LPARENT ID RPARENTstartvalue : STRINGstartvalue : IDend : emptyempty :'\r\n    \r\n_lr_action_items = {'COMMENT':([0,44,45,47,49,50,51,53,139,140,141,142,143,164,171,181,],[2,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'$end':([1,2,3,5,6,8,10,13,14,39,65,105,],[0,-66,-66,-5,-66,-3,-66,-1,-65,-2,-66,-4,]),'PROCEDURE':([2,3,5,6,8,39,65,105,],[4,-66,-5,4,-3,-2,4,-4,]),'PRINCIPAL':([2,3,5,65,105,],[-66,7,-5,-66,-4,]),'ID':([4,19,35,36,41,42,43,52,54,64,92,93,94,95,96,97,98,99,100,117,152,],[9,40,57,63,67,68,69,87,89,104,119,-34,-35,-36,-37,-38,-39,122,57,57,165,]),'LPARENT':([7,9,20,21,22,25,27,31,33,34,37,40,56,59,60,61,62,119,120,121,122,127,133,147,148,149,159,189,],[11,12,41,42,43,46,48,52,54,55,64,66,91,-59,-60,-61,100,-55,-56,-58,-57,-62,152,160,161,162,167,192,]),'RPARENT':([11,12,15,16,17,44,45,47,49,50,51,53,55,59,60,61,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,104,113,118,119,120,121,122,123,127,129,130,131,132,139,140,141,142,143,150,154,155,156,157,158,160,161,162,164,166,167,168,169,170,171,172,175,179,181,187,191,192,193,194,],[-66,-66,18,-21,38,-66,-66,-66,-66,-66,-66,-66,-66,-59,-60,-61,111,-10,-22,-23,-11,112,-40,-41,-42,-43,-13,114,-15,-16,-17,115,-63,-64,-19,116,117,-66,127,-44,145,-55,-56,-58,-57,146,-62,151,-26,-27,-28,-66,-66,-66,-66,-66,163,-9,-12,-14,-18,-20,-66,-66,-66,-66,174,-66,176,177,178,-66,-7,182,-6,-66,-8,193,-66,-29,195,]),'NEW':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,19,-21,19,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,19,-15,-16,-17,-19,19,-66,19,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,19,19,19,-66,-7,19,-6,-66,-8,-66,19,]),'VALUES':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,20,-21,20,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,20,-15,-16,-17,-19,20,-66,20,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,20,20,20,-66,-7,20,-6,-66,-8,-66,20,]),'ALTER':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,109,118,128,139,140,141,142,143,153,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,186,187,192,194,],[-66,-66,21,-21,21,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,21,-15,-16,-17,-19,21,-66,133,21,133,-66,-66,-66,-66,-66,133,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,21,21,21,-66,-7,21,-6,-66,133,-8,-66,21,]),'ALTERB':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,22,-21,22,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,22,-15,-16,-17,-19,22,-66,22,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,22,22,22,-66,-7,22,-6,-66,-8,-66,22,]),'MOVR':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,23,-21,23,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,23,-15,-16,-17,-19,23,-66,23,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,23,23,23,-66,-7,23,-6,-66,-8,-66,23,]),'MOVL':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,24,-21,24,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,24,-15,-16,-17,-19,24,-66,24,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,24,24,24,-66,-7,24,-6,-66,-8,-66,24,]),'HAMMER':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,25,-21,25,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,25,-15,-16,-17,-19,25,-66,25,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,25,25,25,-66,-7,25,-6,-66,-8,-66,25,]),'STOP':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,26,-21,26,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,26,-15,-16,-17,-19,26,-66,26,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,26,26,26,-66,-7,26,-6,-66,-8,-66,26,]),'REPEAT':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,27,-21,27,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,27,-15,-16,-17,-19,27,-66,27,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,27,27,27,-66,-7,27,-6,-66,-8,-66,27,]),'PRINT':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,31,-21,31,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,31,-15,-16,-17,-19,31,-66,31,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,31,31,31,-66,-7,31,-6,-66,-8,-66,31,]),'CALL':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,33,-21,33,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,33,-15,-16,-17,-19,33,-66,33,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,33,33,33,-66,-7,33,-6,-66,-8,-66,33,]),'UNTIL':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,34,-21,34,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,34,-15,-16,-17,-19,34,-66,34,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,34,34,34,-66,-7,34,-6,-66,-8,-66,34,]),'WHILE':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,35,-21,35,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,35,-15,-16,-17,-19,35,-66,35,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,35,35,35,-66,-7,35,-6,-66,-8,-66,35,]),'CASE':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,36,-21,36,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,36,-15,-16,-17,-19,36,-66,36,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,36,36,36,-66,-7,36,-6,-66,-8,-66,36,]),'VERT':([11,12,15,16,17,35,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,100,117,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,37,-21,37,37,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,37,-15,-16,-17,-19,37,-66,37,37,37,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,37,37,37,-66,-7,37,-6,-66,-8,-66,37,]),'BREAK':([16,44,45,47,48,49,50,51,53,70,71,72,73,79,80,82,83,84,88,139,140,141,142,143,154,155,156,157,158,164,171,172,179,181,187,],[-21,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,113,-15,-16,-17,-19,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-7,-6,-66,-8,]),'SEMICOLON':([18,23,24,26,28,29,30,32,38,59,60,61,63,101,103,111,112,114,115,116,119,120,121,122,127,144,145,151,163,174,176,177,178,182,183,184,185,188,190,195,],[39,44,45,47,49,50,51,53,65,-59,-60,-61,-66,-50,-54,139,140,141,142,143,-55,-56,-58,-57,-62,-45,-46,164,171,181,-66,-66,-66,-66,-51,-52,-53,-47,-49,-48,]),'NUMBER':([35,92,93,94,95,96,97,98,99,100,102,109,117,128,153,186,],[58,120,-34,-35,-36,-37,-38,-39,121,58,124,130,58,130,130,130,]),'TRUE':([35,100,102,109,117,128,153,186,],[59,59,125,131,59,131,131,131,]),'FALSE':([35,100,102,109,117,128,153,186,],[60,60,126,132,60,132,132,132,]),'WHEN':([36,63,176,177,178,],[62,102,102,102,102,]),'NORTH':([46,],[75,]),'SOUTH':([46,],[76,]),'EAST':([46,],[77,]),'WEST':([46,],[78,]),'STRING':([52,],[86,]),'GT':([57,58,],[93,93,]),'LT':([57,58,],[94,94,]),'GET':([57,58,],[95,95,]),'LET':([57,58,],[96,96,]),'EQ':([57,58,],[97,97,]),'DT':([57,58,],[98,98,]),'NUMVAL':([66,],[107,]),'BOOLVAL':([66,],[108,]),'COMMA':([67,68,106,107,108,134,135,136,137,138,165,180,],[109,110,128,-24,-25,153,-30,-31,-32,-33,173,186,]),'ADD':([110,173,],[135,135,]),'SUB':([110,173,],[136,136,]),'MUL':([110,173,],[137,137,]),'DIV':([110,173,],[138,138,]),'THEN':([124,125,126,146,],[147,148,149,159,]),'ELSE':([182,],[189,]),}\r\n\r\n_lr_action = {}\r\nfor _k, _v in _lr_action_items.items():\r\n   for _x,_y in zip(_v[0],_v[1]):\r\n      if not _x in _lr_action:  _lr_action[_x] = {}\r\n      _lr_action[_x][_k] = _y\r\ndel _lr_action_items\r\n\r\n_lr_goto_items = {'program':([0,],[1,]),'procedures':([2,6,65,],[3,10,105,]),'empty':([2,3,6,10,11,12,44,45,47,48,49,50,51,53,55,63,65,91,139,140,141,142,143,160,161,162,164,167,171,176,177,178,181,182,192,],[5,8,5,14,16,16,72,72,72,16,72,72,72,72,16,103,5,16,72,72,72,72,72,16,16,16,72,16,72,103,103,103,72,190,16,]),'principal':([3,],[6,]),'end':([10,],[13,]),'instructions':([11,12,48,55,91,160,161,162,167,192,],[15,17,80,90,118,168,169,170,175,194,]),'untilbody':([15,17,80,90,118,168,169,170,175,194,],[28,28,28,28,28,28,28,28,28,28,]),'whilebody':([15,17,80,90,118,168,169,170,175,194,],[29,29,29,29,29,29,29,29,29,29,]),'casebody':([15,17,80,90,118,168,169,170,175,194,],[30,30,30,30,30,30,30,30,30,30,]),'istrue':([15,17,35,80,90,100,117,118,168,169,170,175,194,],[32,32,61,32,32,61,61,32,32,32,32,32,32,]),'condition':([35,100,117,],[56,123,144,]),'commentary':([44,45,47,49,50,51,53,139,140,141,142,143,164,171,181,],[70,73,79,82,83,84,88,154,155,156,157,158,172,179,187,]),'position':([46,],[74,]),'repeat_instructions':([48,],[81,]),'startvalue':([52,],[85,]),'comparator':([57,58,],[92,99,]),'innercasebody':([63,176,177,178,],[101,183,184,185,]),'datatype':([66,],[106,]),'value':([109,128,153,186,],[129,150,166,191,]),'operator':([110,173,],[134,180,]),'case_else':([182,],[188,]),}\r\n\r\n_lr_goto = {}\r\nfor _k, _v in _lr_goto_items.items():\r\n   for _x, _y in zip(_v[0], _v[1]):\r\n       if not _x in _lr_goto: _lr_goto[_x] = {}\r\n       _lr_goto[_x][_k] = _y\r\ndel _lr_goto_items\r\n_lr_productions = [\r\n  (\"S' -> program\",\"S'\",1,None,None,None),\r\n  ('program -> COMMENT procedures principal procedures end','program',5,'p_program','SyntaxAnalyzer.py',11),\r\n  ('principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON','principal',5,'p_principal','SyntaxAnalyzer.py',18),\r\n  ('principal -> empty','principal',1,'p_principalEmpty','SyntaxAnalyzer.py',23),\r\n  ('procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures','procedures',7,'p_procedures','SyntaxAnalyzer.py',31),\r\n  ('procedures -> empty','procedures',1,'p_proceduresEmpty','SyntaxAnalyzer.py',36),\r\n  ('instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary','instructions',10,'p_instructions1','SyntaxAnalyzer.py',41),\r\n  ('instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary','instructions',9,'p_instructions2','SyntaxAnalyzer.py',46),\r\n  ('instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary','instructions',11,'p_instructions3','SyntaxAnalyzer.py',54),\r\n  ('instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary','instructions',7,'p_instructions4','SyntaxAnalyzer.py',62),\r\n  ('instructions -> instructions MOVR SEMICOLON commentary','instructions',4,'p_instructions5','SyntaxAnalyzer.py',67),\r\n  ('instructions -> instructions MOVL SEMICOLON commentary','instructions',4,'p_instructions6','SyntaxAnalyzer.py',72),\r\n  ('instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary','instructions',7,'p_instructions7','SyntaxAnalyzer.py',77),\r\n  ('instructions -> instructions STOP SEMICOLON commentary','instructions',4,'p_instructions8','SyntaxAnalyzer.py',82),\r\n  ('instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary','instructions',7,'p_instructions9','SyntaxAnalyzer.py',87),\r\n  ('instructions -> instructions untilbody SEMICOLON commentary','instructions',4,'p_instructions10','SyntaxAnalyzer.py',92),\r\n  ('instructions -> instructions whilebody SEMICOLON commentary','instructions',4,'p_instructions11','SyntaxAnalyzer.py',97),\r\n  ('instructions -> instructions casebody SEMICOLON commentary','instructions',4,'p_instructions12','SyntaxAnalyzer.py',102),\r\n  ('instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary','instructions',7,'p_instructions13','SyntaxAnalyzer.py',107),\r\n  ('instructions -> instructions istrue SEMICOLON commentary','instructions',4,'p_instructions14','SyntaxAnalyzer.py',112),\r\n  ('instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary','instructions',7,'p_instructions15','SyntaxAnalyzer.py',117),\r\n  ('instructions -> empty','instructions',1,'p_instructionsEmpty','SyntaxAnalyzer.py',122),\r\n  ('commentary -> COMMENT','commentary',1,'p_commentary1','SyntaxAnalyzer.py',127),\r\n  ('commentary -> empty','commentary',1,'p_commentary2','SyntaxAnalyzer.py',131),\r\n  ('datatype -> NUMVAL','datatype',1,'p_datatype1','SyntaxAnalyzer.py',135),\r\n  ('datatype -> BOOLVAL','datatype',1,'p_datatype2','SyntaxAnalyzer.py',140),\r\n  ('value -> NUMBER','value',1,'p_value1','SyntaxAnalyzer.py',145),\r\n  ('value -> TRUE','value',1,'p_value2','SyntaxAnalyzer.py',150),\r\n  ('value -> FALSE','value',1,'p_value3','SyntaxAnalyzer.py',155),\r\n  ('value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT','value',8,'p_value4','SyntaxAnalyzer.py',160),\r\n  ('operator -> ADD','operator',1,'p_operator1','SyntaxAnalyzer.py',165),\r\n  ('operator -> SUB','operator',1,'p_operator2','SyntaxAnalyzer.py',170),\r\n  ('operator -> MUL','operator',1,'p_operator3','SyntaxAnalyzer.py',175),\r\n  ('operator -> DIV','operator',1,'p_operator4','SyntaxAnalyzer.py',180),\r\n  ('comparator -> GT','comparator',1,'p_comparator1','SyntaxAnalyzer.py',185),\r\n  ('comparator -> LT','comparator',1,'p_comparator2','SyntaxAnalyzer.py',190),\r\n  ('comparator -> GET','comparator',1,'p_comparator3','SyntaxAnalyzer.py',195),\r\n  ('comparator -> LET','comparator',1,'p_comparator4','SyntaxAnalyzer.py',200),\r\n  ('comparator -> EQ','comparator',1,'p_comparator5','SyntaxAnalyzer.py',205),\r\n  ('comparator -> DT','comparator',1,'p_comparator6','SyntaxAnalyzer.py',210),\r\n  ('position -> NORTH','position',1,'p_position1','SyntaxAnalyzer.py',215),\r\n  ('position -> SOUTH','position',1,'p_position2','SyntaxAnalyzer.py',220),\r\n  ('position -> EAST','position',1,'p_position3','SyntaxAnalyzer.py',225),\r\n  ('position -> WEST','position',1,'p_position4','SyntaxAnalyzer.py',230),\r\n  ('repeat_instructions -> instructions BREAK','repeat_instructions',2,'p_repeatInstructions','SyntaxAnalyzer.py',235),\r\n  ('untilbody -> UNTIL LPARENT instructions RPARENT condition','untilbody',5,'p_untilbody','SyntaxAnalyzer.py',240),\r\n  ('whilebody -> WHILE condition LPARENT instructions RPARENT','whilebody',5,'p_whilebody','SyntaxAnalyzer.py',245),\r\n  ('casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else','casebody',10,'p_casebody1','SyntaxAnalyzer.py',250),\r\n  ('case_else -> ELSE LPARENT instructions RPARENT','case_else',4,'p_case_else1','SyntaxAnalyzer.py',255),\r\n  ('case_else -> empty','case_else',1,'p_case_else2','SyntaxAnalyzer.py',260),\r\n  ('casebody -> CASE ID innercasebody','casebody',3,'p_casebody3','SyntaxAnalyzer.py',265),\r\n  ('innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody1','SyntaxAnalyzer.py',270),\r\n  ('innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody2','SyntaxAnalyzer.py',275),\r\n  ('innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody3','SyntaxAnalyzer.py',280),\r\n  ('innercasebody -> empty','innercasebody',1,'p_innercasebodyEmpty','SyntaxAnalyzer.py',285),\r\n  ('condition -> ID comparator ID','condition',3,'p_condition1','SyntaxAnalyzer.py',289),\r\n  ('condition -> ID comparator NUMBER','condition',3,'p_condition2','SyntaxAnalyzer.py',294),\r\n  ('condition -> NUMBER comparator ID','condition',3,'p_condition3','SyntaxAnalyzer.py',299),\r\n  ('condition -> NUMBER comparator NUMBER','condition',3,'p_condition4','SyntaxAnalyzer.py',304),\r\n  ('condition -> TRUE','condition',1,'p_condition5','SyntaxAnalyzer.py',309),\r\n  ('condition -> FALSE','condition',1,'p_condition6','SyntaxAnalyzer.py',314),\r\n  ('condition -> istrue','condition',1,'p_condition7','SyntaxAnalyzer.py',319),\r\n  ('istrue -> VERT LPARENT ID RPARENT','istrue',4,'p_istrue','SyntaxAnalyzer.py',324),\r\n  ('startvalue -> STRING','startvalue',1,'p_startvalue1','SyntaxAnalyzer.py',329),\r\n  ('startvalue -> ID','startvalue',1,'p_startvalue2','SyntaxAnalyzer.py',334),\r\n  ('end -> empty','end',1,'p_end','SyntaxAnalyzer.py',338),\r\n  ('empty -> <empty>','empty',0,'p_empty','SyntaxAnalyzer.py',342),\r\n]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/parsetab.py b/parsetab.py
--- a/parsetab.py	
+++ b/parsetab.py	
@@ -6,9 +6,9 @@
 
 _lr_method = 'LALR'
 
-_lr_signature = 'ADD ALTER ALTERB BOOLVAL BREAK CALL CASE COMMA COMMENT DIV DT EAST ELSE EQ FALSE GET GT HAMMER ID LET LPARENT LT MOVL MOVR MUL NEW NORTH NUMBER NUMVAL PRINCIPAL PRINT PROCEDURE REPEAT RPARENT SEMICOLON SOUTH STOP STRING SUB THEN TRUE UNTIL VALUES VERT WEST WHEN WHILEprogram : COMMENT procedures principal procedures endprincipal : PRINCIPAL LPARENT instructions RPARENT SEMICOLONprincipal : emptyprocedures : PROCEDURE ID LPARENT instructions RPARENT SEMICOLON proceduresprocedures : emptyinstructions : instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentaryinstructions : instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentaryinstructions : instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentaryinstructions : instructions ALTERB LPARENT ID RPARENT SEMICOLON commentaryinstructions : instructions MOVR SEMICOLON commentaryinstructions : instructions MOVL SEMICOLON commentaryinstructions : instructions HAMMER LPARENT position RPARENT SEMICOLON commentaryinstructions : instructions STOP SEMICOLON commentaryinstructions : instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentaryinstructions : instructions untilbody SEMICOLON commentaryinstructions : instructions whilebody SEMICOLON commentaryinstructions : instructions casebody SEMICOLON commentaryinstructions : instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentaryinstructions : instructions istrue SEMICOLON commentaryinstructions : instructions CALL LPARENT ID RPARENT SEMICOLON commentaryinstructions : emptycommentary : COMMENTcommentary : emptydatatype : NUMVALdatatype : BOOLVALvalue : NUMBERvalue : TRUEvalue : FALSEvalue : ALTER LPARENT ID COMMA operator COMMA value RPARENToperator : ADDoperator : SUBoperator : MULoperator : DIVcomparator : GTcomparator : LTcomparator : GETcomparator : LETcomparator : EQcomparator : DTposition : NORTHposition : SOUTHposition : EASTposition : WESTrepeat_instructions : instructions BREAKuntilbody : UNTIL LPARENT instructions RPARENT conditionwhilebody : WHILE condition LPARENT instructions RPARENTcasebody : CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_elsecase_else : ELSE LPARENT instructions RPARENTcase_else : emptycasebody : CASE ID innercasebodyinnercasebody : WHEN NUMBER THEN LPARENT instructions RPARENT innercasebodyinnercasebody : WHEN TRUE THEN LPARENT instructions RPARENT innercasebodyinnercasebody : WHEN FALSE THEN LPARENT instructions RPARENT innercasebodyinnercasebody : emptycondition : ID comparator IDcondition : ID comparator NUMBERcondition : NUMBER comparator IDcondition : NUMBER comparator NUMBERcondition : TRUEcondition : FALSEcondition : istrueistrue : VERT LPARENT ID RPARENTstartvalue : STRINGstartvalue : IDend : emptyempty :'
+_lr_signature = 'ADD ALTER ALTERB BOOLVAL BREAK CALL CASE COMMA COMMENT DIV DT EAST ELSE EQ FALSE GET GT HAMMER ID LET LPARENT LT MOVL MOVR MUL NEW NORTH NUMBER NUMVAL PRINCIPAL PRINT PROCEDURE REPEAT RPARENT SEMICOLON SOUTH STOP STRING SUB THEN TRUE UNTIL VALUES VERT WEST WHEN WHILEprogram : COMMENT procedures principal procedures endprincipal : PRINCIPAL LPARENT instructions RPARENT SEMICOLONprincipal : emptyprocedures : PROCEDURE ID LPARENT instructions RPARENT SEMICOLON proceduresprocedures : emptyinstructions : instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentaryinstructions : instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentaryinstructions : instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentaryinstructions : instructions ALTERB LPARENT ID RPARENT SEMICOLON commentaryinstructions : instructions MOVR SEMICOLON commentaryinstructions : instructions MOVL SEMICOLON commentaryinstructions : instructions HAMMER LPARENT position RPARENT SEMICOLON commentaryinstructions : instructions STOP SEMICOLON commentaryinstructions : instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentaryinstructions : instructions untilbody SEMICOLON commentaryinstructions : instructions whilebody SEMICOLON commentaryinstructions : instructions casebody SEMICOLON commentaryinstructions : instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentaryinstructions : instructions istrue SEMICOLON commentaryinstructions : instructions CALL LPARENT ID RPARENT SEMICOLON commentaryinstructions : emptycommentary : COMMENTcommentary : emptydatatype : NUMVALdatatype : BOOLVALvalue : NUMBERvalue : TRUEvalue : FALSEvalue : ALTER LPARENT ID COMMA operator COMMA value RPARENToperator : ADDoperator : SUBoperator : MULoperator : DIVcomparator : GTcomparator : LTcomparator : GETcomparator : LETcomparator : EQcomparator : DTposition : NORTHposition : SOUTHposition : EASTposition : WESTrepeat_instructions : instructions BREAKuntilbody : UNTIL LPARENT instructions RPARENT conditionwhilebody : WHILE condition LPARENT instructions RPARENTcasebody : CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebodycasebody : case_elsecase_else : ELSE LPARENT instructions RPARENTcase_else : emptycasebody : CASE ID innercasebodyinnercasebody : WHEN NUMBER THEN LPARENT instructions RPARENT innercasebodyinnercasebody : WHEN TRUE THEN LPARENT instructions RPARENT innercasebodyinnercasebody : WHEN FALSE THEN LPARENT instructions RPARENT innercasebodyinnercasebody : emptycondition : ID comparator IDcondition : ID comparator NUMBERcondition : NUMBER comparator IDcondition : NUMBER comparator NUMBERcondition : TRUEcondition : FALSEcondition : istrueistrue : VERT LPARENT ID RPARENTstartvalue : STRINGstartvalue : IDend : emptyempty :'
     
-_lr_action_items = {'COMMENT':([0,44,45,47,49,50,51,53,139,140,141,142,143,164,171,181,],[2,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'$end':([1,2,3,5,6,8,10,13,14,39,65,105,],[0,-66,-66,-5,-66,-3,-66,-1,-65,-2,-66,-4,]),'PROCEDURE':([2,3,5,6,8,39,65,105,],[4,-66,-5,4,-3,-2,4,-4,]),'PRINCIPAL':([2,3,5,65,105,],[-66,7,-5,-66,-4,]),'ID':([4,19,35,36,41,42,43,52,54,64,92,93,94,95,96,97,98,99,100,117,152,],[9,40,57,63,67,68,69,87,89,104,119,-34,-35,-36,-37,-38,-39,122,57,57,165,]),'LPARENT':([7,9,20,21,22,25,27,31,33,34,37,40,56,59,60,61,62,119,120,121,122,127,133,147,148,149,159,189,],[11,12,41,42,43,46,48,52,54,55,64,66,91,-59,-60,-61,100,-55,-56,-58,-57,-62,152,160,161,162,167,192,]),'RPARENT':([11,12,15,16,17,44,45,47,49,50,51,53,55,59,60,61,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,104,113,118,119,120,121,122,123,127,129,130,131,132,139,140,141,142,143,150,154,155,156,157,158,160,161,162,164,166,167,168,169,170,171,172,175,179,181,187,191,192,193,194,],[-66,-66,18,-21,38,-66,-66,-66,-66,-66,-66,-66,-66,-59,-60,-61,111,-10,-22,-23,-11,112,-40,-41,-42,-43,-13,114,-15,-16,-17,115,-63,-64,-19,116,117,-66,127,-44,145,-55,-56,-58,-57,146,-62,151,-26,-27,-28,-66,-66,-66,-66,-66,163,-9,-12,-14,-18,-20,-66,-66,-66,-66,174,-66,176,177,178,-66,-7,182,-6,-66,-8,193,-66,-29,195,]),'NEW':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,19,-21,19,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,19,-15,-16,-17,-19,19,-66,19,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,19,19,19,-66,-7,19,-6,-66,-8,-66,19,]),'VALUES':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,20,-21,20,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,20,-15,-16,-17,-19,20,-66,20,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,20,20,20,-66,-7,20,-6,-66,-8,-66,20,]),'ALTER':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,109,118,128,139,140,141,142,143,153,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,186,187,192,194,],[-66,-66,21,-21,21,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,21,-15,-16,-17,-19,21,-66,133,21,133,-66,-66,-66,-66,-66,133,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,21,21,21,-66,-7,21,-6,-66,133,-8,-66,21,]),'ALTERB':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,22,-21,22,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,22,-15,-16,-17,-19,22,-66,22,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,22,22,22,-66,-7,22,-6,-66,-8,-66,22,]),'MOVR':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,23,-21,23,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,23,-15,-16,-17,-19,23,-66,23,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,23,23,23,-66,-7,23,-6,-66,-8,-66,23,]),'MOVL':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,24,-21,24,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,24,-15,-16,-17,-19,24,-66,24,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,24,24,24,-66,-7,24,-6,-66,-8,-66,24,]),'HAMMER':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,25,-21,25,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,25,-15,-16,-17,-19,25,-66,25,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,25,25,25,-66,-7,25,-6,-66,-8,-66,25,]),'STOP':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,26,-21,26,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,26,-15,-16,-17,-19,26,-66,26,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,26,26,26,-66,-7,26,-6,-66,-8,-66,26,]),'REPEAT':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,27,-21,27,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,27,-15,-16,-17,-19,27,-66,27,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,27,27,27,-66,-7,27,-6,-66,-8,-66,27,]),'PRINT':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,31,-21,31,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,31,-15,-16,-17,-19,31,-66,31,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,31,31,31,-66,-7,31,-6,-66,-8,-66,31,]),'CALL':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,33,-21,33,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,33,-15,-16,-17,-19,33,-66,33,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,33,33,33,-66,-7,33,-6,-66,-8,-66,33,]),'UNTIL':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,34,-21,34,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,34,-15,-16,-17,-19,34,-66,34,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,34,34,34,-66,-7,34,-6,-66,-8,-66,34,]),'WHILE':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,35,-21,35,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,35,-15,-16,-17,-19,35,-66,35,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,35,35,35,-66,-7,35,-6,-66,-8,-66,35,]),'CASE':([11,12,15,16,17,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,36,-21,36,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,36,-15,-16,-17,-19,36,-66,36,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,36,36,36,-66,-7,36,-6,-66,-8,-66,36,]),'VERT':([11,12,15,16,17,35,44,45,47,48,49,50,51,53,55,70,71,72,73,79,80,82,83,84,88,90,91,100,117,118,139,140,141,142,143,154,155,156,157,158,160,161,162,164,167,168,169,170,171,172,175,179,181,187,192,194,],[-66,-66,37,-21,37,37,-66,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,37,-15,-16,-17,-19,37,-66,37,37,37,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-66,-66,-66,37,37,37,-66,-7,37,-6,-66,-8,-66,37,]),'BREAK':([16,44,45,47,48,49,50,51,53,70,71,72,73,79,80,82,83,84,88,139,140,141,142,143,154,155,156,157,158,164,171,172,179,181,187,],[-21,-66,-66,-66,-66,-66,-66,-66,-66,-10,-22,-23,-11,-13,113,-15,-16,-17,-19,-66,-66,-66,-66,-66,-9,-12,-14,-18,-20,-66,-66,-7,-6,-66,-8,]),'SEMICOLON':([18,23,24,26,28,29,30,32,38,59,60,61,63,101,103,111,112,114,115,116,119,120,121,122,127,144,145,151,163,174,176,177,178,182,183,184,185,188,190,195,],[39,44,45,47,49,50,51,53,65,-59,-60,-61,-66,-50,-54,139,140,141,142,143,-55,-56,-58,-57,-62,-45,-46,164,171,181,-66,-66,-66,-66,-51,-52,-53,-47,-49,-48,]),'NUMBER':([35,92,93,94,95,96,97,98,99,100,102,109,117,128,153,186,],[58,120,-34,-35,-36,-37,-38,-39,121,58,124,130,58,130,130,130,]),'TRUE':([35,100,102,109,117,128,153,186,],[59,59,125,131,59,131,131,131,]),'FALSE':([35,100,102,109,117,128,153,186,],[60,60,126,132,60,132,132,132,]),'WHEN':([36,63,176,177,178,],[62,102,102,102,102,]),'NORTH':([46,],[75,]),'SOUTH':([46,],[76,]),'EAST':([46,],[77,]),'WEST':([46,],[78,]),'STRING':([52,],[86,]),'GT':([57,58,],[93,93,]),'LT':([57,58,],[94,94,]),'GET':([57,58,],[95,95,]),'LET':([57,58,],[96,96,]),'EQ':([57,58,],[97,97,]),'DT':([57,58,],[98,98,]),'NUMVAL':([66,],[107,]),'BOOLVAL':([66,],[108,]),'COMMA':([67,68,106,107,108,134,135,136,137,138,165,180,],[109,110,128,-24,-25,153,-30,-31,-32,-33,173,186,]),'ADD':([110,173,],[135,135,]),'SUB':([110,173,],[136,136,]),'MUL':([110,173,],[137,137,]),'DIV':([110,173,],[138,138,]),'THEN':([124,125,126,146,],[147,148,149,159,]),'ELSE':([182,],[189,]),}
+_lr_action_items = {'COMMENT':([0,47,48,50,52,53,54,56,145,146,147,148,149,170,177,187,],[2,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'$end':([1,2,3,5,6,8,10,13,14,42,69,110,],[0,-67,-67,-5,-67,-3,-67,-1,-66,-2,-67,-4,]),'PROCEDURE':([2,3,5,6,8,42,69,110,],[4,-67,-5,4,-3,-2,4,-4,]),'PRINCIPAL':([2,3,5,69,110,],[-67,7,-5,-67,-4,]),'ID':([4,19,35,36,44,45,46,55,57,67,96,97,98,99,100,101,102,103,104,122,158,],[9,43,60,66,71,72,73,91,93,108,124,-34,-35,-36,-37,-38,-39,127,60,60,171,]),'LPARENT':([7,9,20,21,22,25,27,31,33,34,38,39,43,59,62,63,64,65,124,125,126,127,132,139,153,154,155,165,],[11,12,44,45,46,49,51,55,57,58,67,68,70,95,-60,-61,-62,104,-56,-57,-59,-58,-63,158,166,167,168,173,]),'RPARENT':([11,12,15,16,17,47,48,50,52,53,54,56,58,62,63,64,68,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,108,109,118,123,124,125,126,127,128,132,135,136,137,138,145,146,147,148,149,156,160,161,162,163,164,166,167,168,170,172,173,174,175,176,177,178,181,185,187,193,195,196,],[-67,-67,18,-21,41,-67,-67,-67,-67,-67,-67,-67,-67,-60,-61,-62,-67,116,-10,-22,-23,-11,117,-40,-41,-42,-43,-13,119,-15,-16,-17,120,-64,-65,-19,121,122,-67,132,133,-44,151,-56,-57,-59,-58,152,-63,157,-26,-27,-28,-67,-67,-67,-67,-67,169,-9,-12,-14,-18,-20,-67,-67,-67,-67,180,-67,182,183,184,-67,-7,188,-6,-67,-8,196,-29,]),'NEW':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,19,-21,19,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,19,-15,-16,-17,-19,19,-67,19,19,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,19,19,19,-67,-7,19,-6,-67,-8,]),'VALUES':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,20,-21,20,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,20,-15,-16,-17,-19,20,-67,20,20,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,20,20,20,-67,-7,20,-6,-67,-8,]),'ALTER':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,114,123,134,145,146,147,148,149,159,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,192,193,],[-67,-67,21,-21,21,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,21,-15,-16,-17,-19,21,-67,21,139,21,139,-67,-67,-67,-67,-67,139,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,21,21,21,-67,-7,21,-6,-67,139,-8,]),'ALTERB':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,22,-21,22,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,22,-15,-16,-17,-19,22,-67,22,22,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,22,22,22,-67,-7,22,-6,-67,-8,]),'MOVR':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,23,-21,23,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,23,-15,-16,-17,-19,23,-67,23,23,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,23,23,23,-67,-7,23,-6,-67,-8,]),'MOVL':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,24,-21,24,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,24,-15,-16,-17,-19,24,-67,24,24,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,24,24,24,-67,-7,24,-6,-67,-8,]),'HAMMER':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,25,-21,25,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,25,-15,-16,-17,-19,25,-67,25,25,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,25,25,25,-67,-7,25,-6,-67,-8,]),'STOP':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,26,-21,26,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,26,-15,-16,-17,-19,26,-67,26,26,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,26,26,26,-67,-7,26,-6,-67,-8,]),'REPEAT':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,27,-21,27,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,27,-15,-16,-17,-19,27,-67,27,27,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,27,27,27,-67,-7,27,-6,-67,-8,]),'PRINT':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,31,-21,31,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,31,-15,-16,-17,-19,31,-67,31,31,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,31,31,31,-67,-7,31,-6,-67,-8,]),'CALL':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,33,-21,33,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,33,-15,-16,-17,-19,33,-67,33,33,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,33,33,33,-67,-7,33,-6,-67,-8,]),'UNTIL':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,34,-21,34,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,34,-15,-16,-17,-19,34,-67,34,34,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,34,34,34,-67,-7,34,-6,-67,-8,]),'WHILE':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,35,-21,35,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,35,-15,-16,-17,-19,35,-67,35,35,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,35,35,35,-67,-7,35,-6,-67,-8,]),'CASE':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,188,193,],[-67,-67,36,-21,36,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,36,-15,-16,-17,-19,36,-67,36,36,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,36,36,36,-67,-7,36,-6,-67,36,-8,]),'VERT':([11,12,15,16,17,35,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,104,109,122,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,193,],[-67,-67,38,-21,38,38,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,38,-15,-16,-17,-19,38,-67,38,38,38,38,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,38,38,38,-67,-7,38,-6,-67,-8,]),'ELSE':([11,12,15,16,17,47,48,50,51,52,53,54,56,58,68,74,75,76,77,83,84,86,87,88,92,94,95,109,123,145,146,147,148,149,160,161,162,163,164,166,167,168,170,173,174,175,176,177,178,181,185,187,188,193,],[-67,-67,39,-21,39,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,39,-15,-16,-17,-19,39,-67,39,39,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-67,-67,-67,39,39,39,-67,-7,39,-6,-67,39,-8,]),'SEMICOLON':([11,12,15,16,17,18,23,24,26,28,29,30,32,37,40,41,47,48,50,51,52,53,54,56,58,62,63,64,66,68,74,75,76,77,83,84,86,87,88,92,94,95,105,107,109,116,117,119,120,121,123,124,125,126,127,132,133,145,146,147,148,149,150,151,157,160,161,162,163,164,166,167,168,169,170,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,],[-67,-67,-67,-21,-67,42,47,48,50,52,53,54,56,-48,-50,69,-67,-67,-67,-67,-67,-67,-67,-67,-67,-60,-61,-62,-67,-67,-10,-22,-23,-11,-13,-67,-15,-16,-17,-19,-67,-67,-51,-55,-67,145,146,147,148,149,-67,-56,-57,-59,-58,-63,-49,-67,-67,-67,-67,-67,-45,-46,170,-9,-12,-14,-18,-20,-67,-67,-67,177,-67,-67,-67,-67,-67,-67,-7,187,-67,-67,-67,-67,-6,-67,-67,-52,-53,-54,-8,-47,]),'BREAK':([16,47,48,50,51,52,53,54,56,74,75,76,77,83,84,86,87,88,92,145,146,147,148,149,160,161,162,163,164,170,177,178,185,187,193,],[-21,-67,-67,-67,-67,-67,-67,-67,-67,-10,-22,-23,-11,-13,118,-15,-16,-17,-19,-67,-67,-67,-67,-67,-9,-12,-14,-18,-20,-67,-67,-7,-6,-67,-8,]),'NUMBER':([35,96,97,98,99,100,101,102,103,104,106,114,122,134,159,192,],[61,125,-34,-35,-36,-37,-38,-39,126,61,129,136,61,136,136,136,]),'TRUE':([35,104,106,114,122,134,159,192,],[62,62,130,137,62,137,137,137,]),'FALSE':([35,104,106,114,122,134,159,192,],[63,63,131,138,63,138,138,138,]),'WHEN':([36,66,182,183,184,],[65,106,106,106,106,]),'NORTH':([49,],[79,]),'SOUTH':([49,],[80,]),'EAST':([49,],[81,]),'WEST':([49,],[82,]),'STRING':([55,],[90,]),'GT':([60,61,],[97,97,]),'LT':([60,61,],[98,98,]),'GET':([60,61,],[99,99,]),'LET':([60,61,],[100,100,]),'EQ':([60,61,],[101,101,]),'DT':([60,61,],[102,102,]),'NUMVAL':([70,],[112,]),'BOOLVAL':([70,],[113,]),'COMMA':([71,72,111,112,113,140,141,142,143,144,171,186,],[114,115,134,-24,-25,159,-30,-31,-32,-33,179,192,]),'ADD':([115,179,],[141,141,]),'SUB':([115,179,],[142,142,]),'MUL':([115,179,],[143,143,]),'DIV':([115,179,],[144,144,]),'THEN':([129,130,131,152,],[153,154,155,165,]),}
 
 _lr_action = {}
 for _k, _v in _lr_action_items.items():
@@ -17,7 +17,7 @@
       _lr_action[_x][_k] = _y
 del _lr_action_items
 
-_lr_goto_items = {'program':([0,],[1,]),'procedures':([2,6,65,],[3,10,105,]),'empty':([2,3,6,10,11,12,44,45,47,48,49,50,51,53,55,63,65,91,139,140,141,142,143,160,161,162,164,167,171,176,177,178,181,182,192,],[5,8,5,14,16,16,72,72,72,16,72,72,72,72,16,103,5,16,72,72,72,72,72,16,16,16,72,16,72,103,103,103,72,190,16,]),'principal':([3,],[6,]),'end':([10,],[13,]),'instructions':([11,12,48,55,91,160,161,162,167,192,],[15,17,80,90,118,168,169,170,175,194,]),'untilbody':([15,17,80,90,118,168,169,170,175,194,],[28,28,28,28,28,28,28,28,28,28,]),'whilebody':([15,17,80,90,118,168,169,170,175,194,],[29,29,29,29,29,29,29,29,29,29,]),'casebody':([15,17,80,90,118,168,169,170,175,194,],[30,30,30,30,30,30,30,30,30,30,]),'istrue':([15,17,35,80,90,100,117,118,168,169,170,175,194,],[32,32,61,32,32,61,61,32,32,32,32,32,32,]),'condition':([35,100,117,],[56,123,144,]),'commentary':([44,45,47,49,50,51,53,139,140,141,142,143,164,171,181,],[70,73,79,82,83,84,88,154,155,156,157,158,172,179,187,]),'position':([46,],[74,]),'repeat_instructions':([48,],[81,]),'startvalue':([52,],[85,]),'comparator':([57,58,],[92,99,]),'innercasebody':([63,176,177,178,],[101,183,184,185,]),'datatype':([66,],[106,]),'value':([109,128,153,186,],[129,150,166,191,]),'operator':([110,173,],[134,180,]),'case_else':([182,],[188,]),}
+_lr_goto_items = {'program':([0,],[1,]),'procedures':([2,6,69,],[3,10,110,]),'empty':([2,3,6,10,11,12,15,17,47,48,50,51,52,53,54,56,58,66,68,69,84,94,95,109,123,145,146,147,148,149,166,167,168,170,173,174,175,176,177,181,182,183,184,187,188,],[5,8,5,14,16,16,40,40,76,76,76,16,76,76,76,76,16,107,16,5,40,40,16,40,40,76,76,76,76,76,16,16,16,76,16,40,40,40,76,40,107,107,107,76,40,]),'principal':([3,],[6,]),'end':([10,],[13,]),'instructions':([11,12,51,58,68,95,166,167,168,173,],[15,17,84,94,109,123,174,175,176,181,]),'untilbody':([15,17,84,94,109,123,174,175,176,181,],[28,28,28,28,28,28,28,28,28,28,]),'whilebody':([15,17,84,94,109,123,174,175,176,181,],[29,29,29,29,29,29,29,29,29,29,]),'casebody':([15,17,84,94,109,123,174,175,176,181,188,],[30,30,30,30,30,30,30,30,30,30,194,]),'istrue':([15,17,35,84,94,104,109,122,123,174,175,176,181,],[32,32,64,32,32,64,32,64,32,32,32,32,32,]),'case_else':([15,17,84,94,109,123,174,175,176,181,188,],[37,37,37,37,37,37,37,37,37,37,37,]),'condition':([35,104,122,],[59,128,150,]),'commentary':([47,48,50,52,53,54,56,145,146,147,148,149,170,177,187,],[74,77,83,86,87,88,92,160,161,162,163,164,178,185,193,]),'position':([49,],[78,]),'repeat_instructions':([51,],[85,]),'startvalue':([55,],[89,]),'comparator':([60,61,],[96,103,]),'innercasebody':([66,182,183,184,],[105,189,190,191,]),'datatype':([70,],[111,]),'value':([114,134,159,192,],[135,156,172,195,]),'operator':([115,179,],[140,186,]),}
 
 _lr_goto = {}
 for _k, _v in _lr_goto_items.items():
@@ -73,24 +73,25 @@
   ('repeat_instructions -> instructions BREAK','repeat_instructions',2,'p_repeatInstructions','SyntaxAnalyzer.py',235),
   ('untilbody -> UNTIL LPARENT instructions RPARENT condition','untilbody',5,'p_untilbody','SyntaxAnalyzer.py',240),
   ('whilebody -> WHILE condition LPARENT instructions RPARENT','whilebody',5,'p_whilebody','SyntaxAnalyzer.py',245),
-  ('casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT case_else','casebody',10,'p_casebody1','SyntaxAnalyzer.py',250),
-  ('case_else -> ELSE LPARENT instructions RPARENT','case_else',4,'p_case_else1','SyntaxAnalyzer.py',255),
-  ('case_else -> empty','case_else',1,'p_case_else2','SyntaxAnalyzer.py',260),
-  ('casebody -> CASE ID innercasebody','casebody',3,'p_casebody3','SyntaxAnalyzer.py',265),
-  ('innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody1','SyntaxAnalyzer.py',270),
-  ('innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody2','SyntaxAnalyzer.py',275),
-  ('innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody3','SyntaxAnalyzer.py',280),
-  ('innercasebody -> empty','innercasebody',1,'p_innercasebodyEmpty','SyntaxAnalyzer.py',285),
-  ('condition -> ID comparator ID','condition',3,'p_condition1','SyntaxAnalyzer.py',289),
-  ('condition -> ID comparator NUMBER','condition',3,'p_condition2','SyntaxAnalyzer.py',294),
-  ('condition -> NUMBER comparator ID','condition',3,'p_condition3','SyntaxAnalyzer.py',299),
-  ('condition -> NUMBER comparator NUMBER','condition',3,'p_condition4','SyntaxAnalyzer.py',304),
-  ('condition -> TRUE','condition',1,'p_condition5','SyntaxAnalyzer.py',309),
-  ('condition -> FALSE','condition',1,'p_condition6','SyntaxAnalyzer.py',314),
-  ('condition -> istrue','condition',1,'p_condition7','SyntaxAnalyzer.py',319),
-  ('istrue -> VERT LPARENT ID RPARENT','istrue',4,'p_istrue','SyntaxAnalyzer.py',324),
-  ('startvalue -> STRING','startvalue',1,'p_startvalue1','SyntaxAnalyzer.py',329),
-  ('startvalue -> ID','startvalue',1,'p_startvalue2','SyntaxAnalyzer.py',334),
-  ('end -> empty','end',1,'p_end','SyntaxAnalyzer.py',338),
-  ('empty -> <empty>','empty',0,'p_empty','SyntaxAnalyzer.py',342),
+  ('casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody','casebody',10,'p_casebody1','SyntaxAnalyzer.py',250),
+  ('casebody -> case_else','casebody',1,'p_casebody2','SyntaxAnalyzer.py',254),
+  ('case_else -> ELSE LPARENT instructions RPARENT','case_else',4,'p_case_else1','SyntaxAnalyzer.py',259),
+  ('case_else -> empty','case_else',1,'p_case_else2','SyntaxAnalyzer.py',264),
+  ('casebody -> CASE ID innercasebody','casebody',3,'p_casebody3','SyntaxAnalyzer.py',269),
+  ('innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody1','SyntaxAnalyzer.py',274),
+  ('innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody2','SyntaxAnalyzer.py',279),
+  ('innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody3','SyntaxAnalyzer.py',284),
+  ('innercasebody -> empty','innercasebody',1,'p_innercasebodyEmpty','SyntaxAnalyzer.py',289),
+  ('condition -> ID comparator ID','condition',3,'p_condition1','SyntaxAnalyzer.py',293),
+  ('condition -> ID comparator NUMBER','condition',3,'p_condition2','SyntaxAnalyzer.py',298),
+  ('condition -> NUMBER comparator ID','condition',3,'p_condition3','SyntaxAnalyzer.py',303),
+  ('condition -> NUMBER comparator NUMBER','condition',3,'p_condition4','SyntaxAnalyzer.py',308),
+  ('condition -> TRUE','condition',1,'p_condition5','SyntaxAnalyzer.py',313),
+  ('condition -> FALSE','condition',1,'p_condition6','SyntaxAnalyzer.py',318),
+  ('condition -> istrue','condition',1,'p_condition7','SyntaxAnalyzer.py',323),
+  ('istrue -> VERT LPARENT ID RPARENT','istrue',4,'p_istrue','SyntaxAnalyzer.py',328),
+  ('startvalue -> STRING','startvalue',1,'p_startvalue1','SyntaxAnalyzer.py',333),
+  ('startvalue -> ID','startvalue',1,'p_startvalue2','SyntaxAnalyzer.py',338),
+  ('end -> empty','end',1,'p_end','SyntaxAnalyzer.py',342),
+  ('empty -> <empty>','empty',0,'p_empty','SyntaxAnalyzer.py',346),
 ]
