
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALTER ALTERB BOOLVAL BREAK CALL CASE COMMA COMMENT DIV DT EAST ELSE EQ FALSE GET GT HAMMER ID LET LPARENT LT MOVL MOVR MUL NEW NORTH NUMBER NUMVAL PRINCIPAL PRINT PROCEDURE REPEAT RPARENT SEMICOLON SOUTH STOP STRING SUB THEN TRUE UNTIL VALUES VERT WEST WHEN WHILEprogram : COMMENT procedures principal procedures endprincipal : PRINCIPAL LPARENT instructions RPARENT SEMICOLONprincipal : emptyprocedures : PROCEDURE ID LPARENT instructions RPARENT SEMICOLON proceduresprocedures : emptyinstructions : instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentaryinstructions : instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentaryinstructions : instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentaryinstructions : instructions ALTERB LPARENT ID RPARENT SEMICOLON commentaryinstructions : instructions MOVR SEMICOLON commentaryinstructions : instructions MOVL SEMICOLON commentaryinstructions : instructions HAMMER LPARENT position RPARENT SEMICOLON commentaryinstructions : instructions STOP SEMICOLON commentaryinstructions : instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentaryinstructions : instructions untilbody SEMICOLON commentaryinstructions : instructions whilebody SEMICOLON commentaryinstructions : instructions casebody SEMICOLON commentaryinstructions : instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentaryinstructions : instructions istrue SEMICOLON commentaryinstructions : instructions CALL LPARENT ID RPARENT SEMICOLON commentaryinstructions : emptycommentary : COMMENTcommentary : emptydatatype : NUMVALdatatype : BOOLVALvalue : NUMBERvalue : TRUEvalue : FALSEvalue : ALTER LPARENT ID COMMA operator COMMA value RPARENToperator : ADDoperator : SUBoperator : MULoperator : DIVcomparator : GTcomparator : LTcomparator : GETcomparator : LETcomparator : EQcomparator : DTposition : NORTHposition : SOUTHposition : EASTposition : WESTrepeat_instructions : instructions BREAKuntilbody : UNTIL LPARENT instructions RPARENT conditionwhilebody : WHILE condition LPARENT instructions RPARENTcasebody : CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENTcasebody : casebody ELSE LPARENT instructions RPARENTcasebody : CASE ID innercasebodyinnercasebody : WHEN NUMBER THEN LPARENT instructions RPARENT innercasebodyinnercasebody : WHEN TRUE THEN LPARENT instructions RPARENT innercasebodyinnercasebody : WHEN FALSE THEN LPARENT instructions RPARENT innercasebodyinnercasebody : emptycondition : ID comparator IDcondition : ID comparator NUMBERcondition : NUMBER comparator IDcondition : NUMBER comparator NUMBERcondition : TRUEcondition : FALSEcondition : istrueistrue : VERT LPARENT ID RPARENTstartvalue : STRINGstartvalue : IDend : emptyempty :'
    
_lr_action_items = {'COMMENT':([0,44,45,47,49,50,51,54,142,143,144,146,147,168,175,185,],[2,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'$end':([1,2,3,5,6,8,10,13,14,39,66,107,],[0,-65,-65,-5,-65,-3,-65,-1,-64,-2,-65,-4,]),'PROCEDURE':([2,3,5,6,8,39,66,107,],[4,-65,-5,4,-3,-2,4,-4,]),'PRINCIPAL':([2,3,5,66,107,],[-65,7,-5,-65,-4,]),'ID':([4,19,35,36,41,42,43,53,55,65,94,95,96,97,98,99,100,101,102,120,156,],[9,40,58,64,68,69,70,89,91,106,122,-34,-35,-36,-37,-38,-39,125,58,58,169,]),'LPARENT':([7,9,20,21,22,25,27,31,33,34,37,40,52,57,60,61,62,63,122,123,124,125,130,136,151,152,153,163,],[11,12,41,42,43,46,48,53,55,56,65,67,86,93,-58,-59,-60,102,-54,-55,-57,-56,-61,156,164,165,166,171,]),'RPARENT':([11,12,15,16,17,44,45,47,49,50,51,54,56,60,61,62,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,106,115,117,121,122,123,124,125,126,130,132,133,134,135,142,143,144,146,147,154,158,159,160,161,162,164,165,166,168,170,171,172,173,174,175,176,179,183,185,191,192,193,],[-65,-65,18,-21,38,-65,-65,-65,-65,-65,-65,-65,-65,-58,-59,-60,113,-10,-22,-23,-11,114,-40,-41,-42,-43,-13,116,-15,-16,-17,-65,118,-62,-63,-19,119,120,-65,130,-44,145,149,-54,-55,-57,-56,150,-61,155,-26,-27,-28,-65,-65,-65,-65,-65,167,-9,-12,-14,-18,-20,-65,-65,-65,-65,178,-65,180,181,182,-65,-7,186,-6,-65,-8,193,-29,]),'NEW':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,19,-21,19,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,19,-15,-16,-17,-65,-19,19,-65,19,19,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,19,19,19,-65,-7,19,-6,-65,-8,]),'VALUES':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,20,-21,20,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,20,-15,-16,-17,-65,-19,20,-65,20,20,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,20,20,20,-65,-7,20,-6,-65,-8,]),'ALTER':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,111,117,121,131,142,143,144,146,147,157,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,190,191,],[-65,-65,21,-21,21,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,21,-15,-16,-17,-65,-19,21,-65,136,21,21,136,-65,-65,-65,-65,-65,136,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,21,21,21,-65,-7,21,-6,-65,136,-8,]),'ALTERB':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,22,-21,22,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,22,-15,-16,-17,-65,-19,22,-65,22,22,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,22,22,22,-65,-7,22,-6,-65,-8,]),'MOVR':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,23,-21,23,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,23,-15,-16,-17,-65,-19,23,-65,23,23,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,23,23,23,-65,-7,23,-6,-65,-8,]),'MOVL':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,24,-21,24,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,24,-15,-16,-17,-65,-19,24,-65,24,24,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,24,24,24,-65,-7,24,-6,-65,-8,]),'HAMMER':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,25,-21,25,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,25,-15,-16,-17,-65,-19,25,-65,25,25,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,25,25,25,-65,-7,25,-6,-65,-8,]),'STOP':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,26,-21,26,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,26,-15,-16,-17,-65,-19,26,-65,26,26,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,26,26,26,-65,-7,26,-6,-65,-8,]),'REPEAT':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,27,-21,27,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,27,-15,-16,-17,-65,-19,27,-65,27,27,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,27,27,27,-65,-7,27,-6,-65,-8,]),'PRINT':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,31,-21,31,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,31,-15,-16,-17,-65,-19,31,-65,31,31,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,31,31,31,-65,-7,31,-6,-65,-8,]),'CALL':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,33,-21,33,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,33,-15,-16,-17,-65,-19,33,-65,33,33,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,33,33,33,-65,-7,33,-6,-65,-8,]),'UNTIL':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,34,-21,34,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,34,-15,-16,-17,-65,-19,34,-65,34,34,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,34,34,34,-65,-7,34,-6,-65,-8,]),'WHILE':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,35,-21,35,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,35,-15,-16,-17,-65,-19,35,-65,35,35,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,35,35,35,-65,-7,35,-6,-65,-8,]),'CASE':([11,12,15,16,17,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,117,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,36,-21,36,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,36,-15,-16,-17,-65,-19,36,-65,36,36,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,36,36,36,-65,-7,36,-6,-65,-8,]),'VERT':([11,12,15,16,17,35,44,45,47,48,49,50,51,54,56,71,72,73,74,80,81,83,84,85,86,90,92,93,102,117,120,121,142,143,144,146,147,158,159,160,161,162,164,165,166,168,171,172,173,174,175,176,179,183,185,191,],[-65,-65,37,-21,37,37,-65,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,37,-15,-16,-17,-65,-19,37,-65,37,37,37,37,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-65,-65,-65,37,37,37,-65,-7,37,-6,-65,-8,]),'BREAK':([16,44,45,47,48,49,50,51,54,71,72,73,74,80,81,83,84,85,90,142,143,144,146,147,158,159,160,161,162,168,175,176,183,185,191,],[-21,-65,-65,-65,-65,-65,-65,-65,-65,-10,-22,-23,-11,-13,115,-15,-16,-17,-19,-65,-65,-65,-65,-65,-9,-12,-14,-18,-20,-65,-65,-7,-6,-65,-8,]),'SEMICOLON':([18,23,24,26,28,29,30,32,38,60,61,62,64,103,105,113,114,116,118,119,122,123,124,125,130,145,148,149,155,167,178,180,181,182,186,187,188,189,],[39,44,45,47,49,50,51,54,66,-58,-59,-60,-65,-49,-53,142,143,144,146,147,-54,-55,-57,-56,-61,-48,-45,-46,168,175,185,-65,-65,-65,-47,-50,-51,-52,]),'ELSE':([30,64,103,105,145,180,181,182,186,187,188,189,],[52,-65,-49,-53,-48,-65,-65,-65,-47,-50,-51,-52,]),'NUMBER':([35,94,95,96,97,98,99,100,101,102,104,111,120,131,157,190,],[59,123,-34,-35,-36,-37,-38,-39,124,59,127,133,59,133,133,133,]),'TRUE':([35,102,104,111,120,131,157,190,],[60,60,128,134,60,134,134,134,]),'FALSE':([35,102,104,111,120,131,157,190,],[61,61,129,135,61,135,135,135,]),'WHEN':([36,64,180,181,182,],[63,104,104,104,104,]),'NORTH':([46,],[76,]),'SOUTH':([46,],[77,]),'EAST':([46,],[78,]),'WEST':([46,],[79,]),'STRING':([53,],[88,]),'GT':([58,59,],[95,95,]),'LT':([58,59,],[96,96,]),'GET':([58,59,],[97,97,]),'LET':([58,59,],[98,98,]),'EQ':([58,59,],[99,99,]),'DT':([58,59,],[100,100,]),'NUMVAL':([67,],[109,]),'BOOLVAL':([67,],[110,]),'COMMA':([68,69,108,109,110,137,138,139,140,141,169,184,],[111,112,131,-24,-25,157,-30,-31,-32,-33,177,190,]),'ADD':([112,177,],[138,138,]),'SUB':([112,177,],[139,139,]),'MUL':([112,177,],[140,140,]),'DIV':([112,177,],[141,141,]),'THEN':([127,128,129,150,],[151,152,153,163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'procedures':([2,6,66,],[3,10,107,]),'empty':([2,3,6,10,11,12,44,45,47,48,49,50,51,54,56,64,66,86,93,142,143,144,146,147,164,165,166,168,171,175,180,181,182,185,],[5,8,5,14,16,16,73,73,73,16,73,73,73,73,16,105,5,16,16,73,73,73,73,73,16,16,16,73,16,73,105,105,105,73,]),'principal':([3,],[6,]),'end':([10,],[13,]),'instructions':([11,12,48,56,86,93,164,165,166,171,],[15,17,81,92,117,121,172,173,174,179,]),'untilbody':([15,17,81,92,117,121,172,173,174,179,],[28,28,28,28,28,28,28,28,28,28,]),'whilebody':([15,17,81,92,117,121,172,173,174,179,],[29,29,29,29,29,29,29,29,29,29,]),'casebody':([15,17,81,92,117,121,172,173,174,179,],[30,30,30,30,30,30,30,30,30,30,]),'istrue':([15,17,35,81,92,102,117,120,121,172,173,174,179,],[32,32,62,32,32,62,32,62,32,32,32,32,32,]),'condition':([35,102,120,],[57,126,148,]),'commentary':([44,45,47,49,50,51,54,142,143,144,146,147,168,175,185,],[71,74,80,83,84,85,90,158,159,160,161,162,176,183,191,]),'position':([46,],[75,]),'repeat_instructions':([48,],[82,]),'startvalue':([53,],[87,]),'comparator':([58,59,],[94,101,]),'innercasebody':([64,180,181,182,],[103,187,188,189,]),'datatype':([67,],[108,]),'value':([111,131,157,190,],[132,154,170,192,]),'operator':([112,177,],[137,184,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> COMMENT procedures principal procedures end','program',5,'p_program','SyntaxAnalyzer.py',11),
  ('principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON','principal',5,'p_principal','SyntaxAnalyzer.py',18),
  ('principal -> empty','principal',1,'p_principalEmpty','SyntaxAnalyzer.py',23),
  ('procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures','procedures',7,'p_procedures','SyntaxAnalyzer.py',31),
  ('procedures -> empty','procedures',1,'p_proceduresEmpty','SyntaxAnalyzer.py',36),
  ('instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary','instructions',10,'p_instructions1','SyntaxAnalyzer.py',41),
  ('instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary','instructions',9,'p_instructions2','SyntaxAnalyzer.py',46),
  ('instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary','instructions',11,'p_instructions3','SyntaxAnalyzer.py',54),
  ('instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary','instructions',7,'p_instructions4','SyntaxAnalyzer.py',62),
  ('instructions -> instructions MOVR SEMICOLON commentary','instructions',4,'p_instructions5','SyntaxAnalyzer.py',67),
  ('instructions -> instructions MOVL SEMICOLON commentary','instructions',4,'p_instructions6','SyntaxAnalyzer.py',72),
  ('instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary','instructions',7,'p_instructions7','SyntaxAnalyzer.py',77),
  ('instructions -> instructions STOP SEMICOLON commentary','instructions',4,'p_instructions8','SyntaxAnalyzer.py',82),
  ('instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary','instructions',7,'p_instructions9','SyntaxAnalyzer.py',87),
  ('instructions -> instructions untilbody SEMICOLON commentary','instructions',4,'p_instructions10','SyntaxAnalyzer.py',92),
  ('instructions -> instructions whilebody SEMICOLON commentary','instructions',4,'p_instructions11','SyntaxAnalyzer.py',97),
  ('instructions -> instructions casebody SEMICOLON commentary','instructions',4,'p_instructions12','SyntaxAnalyzer.py',102),
  ('instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary','instructions',7,'p_instructions13','SyntaxAnalyzer.py',107),
  ('instructions -> instructions istrue SEMICOLON commentary','instructions',4,'p_instructions14','SyntaxAnalyzer.py',112),
  ('instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary','instructions',7,'p_instructions15','SyntaxAnalyzer.py',117),
  ('instructions -> empty','instructions',1,'p_instructionsEmpty','SyntaxAnalyzer.py',122),
  ('commentary -> COMMENT','commentary',1,'p_commentary1','SyntaxAnalyzer.py',127),
  ('commentary -> empty','commentary',1,'p_commentary2','SyntaxAnalyzer.py',131),
  ('datatype -> NUMVAL','datatype',1,'p_datatype1','SyntaxAnalyzer.py',135),
  ('datatype -> BOOLVAL','datatype',1,'p_datatype2','SyntaxAnalyzer.py',140),
  ('value -> NUMBER','value',1,'p_value1','SyntaxAnalyzer.py',145),
  ('value -> TRUE','value',1,'p_value2','SyntaxAnalyzer.py',150),
  ('value -> FALSE','value',1,'p_value3','SyntaxAnalyzer.py',155),
  ('value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT','value',8,'p_value4','SyntaxAnalyzer.py',160),
  ('operator -> ADD','operator',1,'p_operator1','SyntaxAnalyzer.py',165),
  ('operator -> SUB','operator',1,'p_operator2','SyntaxAnalyzer.py',170),
  ('operator -> MUL','operator',1,'p_operator3','SyntaxAnalyzer.py',175),
  ('operator -> DIV','operator',1,'p_operator4','SyntaxAnalyzer.py',180),
  ('comparator -> GT','comparator',1,'p_comparator1','SyntaxAnalyzer.py',185),
  ('comparator -> LT','comparator',1,'p_comparator2','SyntaxAnalyzer.py',190),
  ('comparator -> GET','comparator',1,'p_comparator3','SyntaxAnalyzer.py',195),
  ('comparator -> LET','comparator',1,'p_comparator4','SyntaxAnalyzer.py',200),
  ('comparator -> EQ','comparator',1,'p_comparator5','SyntaxAnalyzer.py',205),
  ('comparator -> DT','comparator',1,'p_comparator6','SyntaxAnalyzer.py',210),
  ('position -> NORTH','position',1,'p_position1','SyntaxAnalyzer.py',215),
  ('position -> SOUTH','position',1,'p_position2','SyntaxAnalyzer.py',220),
  ('position -> EAST','position',1,'p_position3','SyntaxAnalyzer.py',225),
  ('position -> WEST','position',1,'p_position4','SyntaxAnalyzer.py',230),
  ('repeat_instructions -> instructions BREAK','repeat_instructions',2,'p_repeatInstructions','SyntaxAnalyzer.py',235),
  ('untilbody -> UNTIL LPARENT instructions RPARENT condition','untilbody',5,'p_untilbody','SyntaxAnalyzer.py',240),
  ('whilebody -> WHILE condition LPARENT instructions RPARENT','whilebody',5,'p_whilebody','SyntaxAnalyzer.py',245),
  ('casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT','casebody',9,'p_casebody1','SyntaxAnalyzer.py',250),
  ('casebody -> casebody ELSE LPARENT instructions RPARENT','casebody',5,'p_casebody2','SyntaxAnalyzer.py',255),
  ('casebody -> CASE ID innercasebody','casebody',3,'p_casebody3','SyntaxAnalyzer.py',260),
  ('innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody1','SyntaxAnalyzer.py',265),
  ('innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody2','SyntaxAnalyzer.py',270),
  ('innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody','innercasebody',7,'p_innercasebody3','SyntaxAnalyzer.py',275),
  ('innercasebody -> empty','innercasebody',1,'p_innercasebodyEmpty','SyntaxAnalyzer.py',280),
  ('condition -> ID comparator ID','condition',3,'p_condition1','SyntaxAnalyzer.py',284),
  ('condition -> ID comparator NUMBER','condition',3,'p_condition2','SyntaxAnalyzer.py',289),
  ('condition -> NUMBER comparator ID','condition',3,'p_condition3','SyntaxAnalyzer.py',294),
  ('condition -> NUMBER comparator NUMBER','condition',3,'p_condition4','SyntaxAnalyzer.py',299),
  ('condition -> TRUE','condition',1,'p_condition5','SyntaxAnalyzer.py',304),
  ('condition -> FALSE','condition',1,'p_condition6','SyntaxAnalyzer.py',309),
  ('condition -> istrue','condition',1,'p_condition7','SyntaxAnalyzer.py',314),
  ('istrue -> VERT LPARENT ID RPARENT','istrue',4,'p_istrue','SyntaxAnalyzer.py',319),
  ('startvalue -> STRING','startvalue',1,'p_startvalue1','SyntaxAnalyzer.py',324),
  ('startvalue -> ID','startvalue',1,'p_startvalue2','SyntaxAnalyzer.py',329),
  ('end -> empty','end',1,'p_end','SyntaxAnalyzer.py',333),
  ('empty -> <empty>','empty',0,'p_empty','SyntaxAnalyzer.py',337),
]
