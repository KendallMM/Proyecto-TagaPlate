Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> COMMENT procedures principal procedures
Rule 2     principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON
Rule 3     principal -> empty
Rule 4     procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
Rule 5     procedures -> empty
Rule 6     instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
Rule 7     instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
Rule 8     instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
Rule 9     instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
Rule 10    instructions -> instructions MOVR SEMICOLON commentary
Rule 11    instructions -> instructions MOVL SEMICOLON commentary
Rule 12    instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
Rule 13    instructions -> instructions STOP SEMICOLON commentary
Rule 14    instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
Rule 15    instructions -> instructions untilbody SEMICOLON commentary
Rule 16    instructions -> instructions whilebody SEMICOLON commentary
Rule 17    instructions -> instructions casebody SEMICOLON commentary
Rule 18    instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary
Rule 19    instructions -> instructions istrue SEMICOLON commentary
Rule 20    instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary
Rule 21    instructions -> empty
Rule 22    commentary -> COMMENT
Rule 23    commentary -> empty
Rule 24    datatype -> NUMVAL
Rule 25    datatype -> BOOLVAL
Rule 26    value -> NUMBER
Rule 27    value -> TRUE
Rule 28    value -> FALSE
Rule 29    value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT
Rule 30    operator -> ADD
Rule 31    operator -> SUB
Rule 32    operator -> MUL
Rule 33    operator -> DIV
Rule 34    comparator -> GT
Rule 35    comparator -> LT
Rule 36    comparator -> GET
Rule 37    comparator -> LET
Rule 38    comparator -> EQ
Rule 39    comparator -> DT
Rule 40    position -> NORTH
Rule 41    position -> SOUTH
Rule 42    position -> EAST
Rule 43    position -> WEST
Rule 44    repeat_instructions -> instructions BREAK
Rule 45    untilbody -> UNTIL LPARENT instructions RPARENT condition
Rule 46    whilebody -> WHILE condition LPARENT instructions RPARENT
Rule 47    casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
Rule 48    casebody -> casebody ELSE LPARENT instructions RPARENT
Rule 49    casebody -> CASE ID innercasebody
Rule 50    innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
Rule 51    innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
Rule 52    innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
Rule 53    innercasebody -> empty
Rule 54    condition -> ID comparator ID
Rule 55    condition -> ID comparator NUMBER
Rule 56    condition -> NUMBER comparator ID
Rule 57    condition -> NUMBER comparator NUMBER
Rule 58    condition -> TRUE
Rule 59    condition -> FALSE
Rule 60    condition -> istrue
Rule 61    istrue -> VERT LPARENT ID RPARENT
Rule 62    printstart -> startvalue printvalues
Rule 63    printvalues -> COMMA STRING printvalues
Rule 64    printvalues -> COMMA ID printvalues
Rule 65    printvalues -> empty
Rule 66    startvalue -> STRING
Rule 67    startvalue -> ID
Rule 68    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 30
ALTER                : 8 29
ALTERB               : 9
BOOLVAL              : 25
BREAK                : 44
CALL                 : 20
CASE                 : 47 49
COMMA                : 6 7 8 8 29 29 63 64
COMMENT              : 1 22
DIV                  : 33
DT                   : 39
EAST                 : 42
ELSE                 : 48
EQ                   : 38
FALSE                : 28 52 59
GET                  : 36
GT                   : 34
HAMMER               : 12
ID                   : 4 6 7 8 9 20 29 49 54 54 55 56 61 64 67
LET                  : 37
LPARENT              : 2 4 6 7 8 9 12 14 18 20 29 45 46 47 47 48 50 51 52 61
LT                   : 35
MOVL                 : 11
MOVR                 : 10
MUL                  : 32
NEW                  : 6
NORTH                : 40
NUMBER               : 26 50 55 56 57 57
NUMVAL               : 24
PRINCIPAL            : 2
PRINT                : 18
PROCEDURE            : 4
REPEAT               : 14
RPARENT              : 2 4 6 7 8 9 12 14 18 20 29 45 46 47 47 48 50 51 52 61
SEMICOLON            : 2 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
SOUTH                : 41
STOP                 : 13
STRING               : 63 66
SUB                  : 31
THEN                 : 47 50 51 52
TRUE                 : 27 51 58
UNTIL                : 45
VALUES               : 7
VERT                 : 61
WEST                 : 43
WHEN                 : 47 50 51 52
WHILE                : 46
error                : 

Nonterminals, with rules where they appear

casebody             : 17 48
commentary           : 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
comparator           : 54 55 56 57
condition            : 45 46 47
datatype             : 6
empty                : 3 5 21 23 53 65
innercasebody        : 49 50 51 52
instructions         : 2 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 44 45 46 47 48 50 51 52
istrue               : 19 60
operator             : 8 29
position             : 12
principal            : 1
printstart           : 18
printvalues          : 62 63 64
procedures           : 1 1 4
program              : 0
repeat_instructions  : 14
startvalue           : 62
untilbody            : 15
value                : 6 7 8 29
whilebody            : 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . COMMENT procedures principal procedures

    COMMENT         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> COMMENT . procedures principal procedures
    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
    (5) procedures -> . empty
    (68) empty -> .

  ! shift/reduce conflict for PROCEDURE resolved as shift
    PROCEDURE       shift and go to state 4
    PRINCIPAL       reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)

  ! PROCEDURE       [ reduce using rule 68 (empty -> .) ]

    procedures                     shift and go to state 3
    empty                          shift and go to state 5

state 3

    (1) program -> COMMENT procedures . principal procedures
    (2) principal -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON
    (3) principal -> . empty
    (68) empty -> .

    PRINCIPAL       shift and go to state 7
    PROCEDURE       reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)

    principal                      shift and go to state 6
    empty                          shift and go to state 8

state 4

    (4) procedures -> PROCEDURE . ID LPARENT instructions RPARENT SEMICOLON procedures

    ID              shift and go to state 9


state 5

    (5) procedures -> empty .

    PRINCIPAL       reduce using rule 5 (procedures -> empty .)
    PROCEDURE       reduce using rule 5 (procedures -> empty .)
    $end            reduce using rule 5 (procedures -> empty .)


state 6

    (1) program -> COMMENT procedures principal . procedures
    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
    (5) procedures -> . empty
    (68) empty -> .

    PROCEDURE       shift and go to state 4
    $end            reduce using rule 68 (empty -> .)

    procedures                     shift and go to state 10
    empty                          shift and go to state 5

state 7

    (2) principal -> PRINCIPAL . LPARENT instructions RPARENT SEMICOLON

    LPARENT         shift and go to state 11


state 8

    (3) principal -> empty .

    PROCEDURE       reduce using rule 3 (principal -> empty .)
    $end            reduce using rule 3 (principal -> empty .)


state 9

    (4) procedures -> PROCEDURE ID . LPARENT instructions RPARENT SEMICOLON procedures

    LPARENT         shift and go to state 12


state 10

    (1) program -> COMMENT procedures principal procedures .

    $end            reduce using rule 1 (program -> COMMENT procedures principal procedures .)


state 11

    (2) principal -> PRINCIPAL LPARENT . instructions RPARENT SEMICOLON
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (68) empty -> .

    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)

    instructions                   shift and go to state 13
    empty                          shift and go to state 14

state 12

    (4) procedures -> PROCEDURE ID LPARENT . instructions RPARENT SEMICOLON procedures
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (68) empty -> .

    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)

    instructions                   shift and go to state 15
    empty                          shift and go to state 14

state 13

    (2) principal -> PRINCIPAL LPARENT instructions . RPARENT SEMICOLON
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT

    RPARENT         shift and go to state 16
    NEW             shift and go to state 17
    VALUES          shift and go to state 18
    ALTER           shift and go to state 19
    ALTERB          shift and go to state 20
    MOVR            shift and go to state 21
    MOVL            shift and go to state 22
    HAMMER          shift and go to state 23
    STOP            shift and go to state 24
    REPEAT          shift and go to state 25
    PRINT           shift and go to state 29
    CALL            shift and go to state 31
    UNTIL           shift and go to state 32
    WHILE           shift and go to state 33
    CASE            shift and go to state 34
    VERT            shift and go to state 35

    untilbody                      shift and go to state 26
    whilebody                      shift and go to state 27
    casebody                       shift and go to state 28
    istrue                         shift and go to state 30

state 14

    (21) instructions -> empty .

    RPARENT         reduce using rule 21 (instructions -> empty .)
    NEW             reduce using rule 21 (instructions -> empty .)
    VALUES          reduce using rule 21 (instructions -> empty .)
    ALTER           reduce using rule 21 (instructions -> empty .)
    ALTERB          reduce using rule 21 (instructions -> empty .)
    MOVR            reduce using rule 21 (instructions -> empty .)
    MOVL            reduce using rule 21 (instructions -> empty .)
    HAMMER          reduce using rule 21 (instructions -> empty .)
    STOP            reduce using rule 21 (instructions -> empty .)
    REPEAT          reduce using rule 21 (instructions -> empty .)
    PRINT           reduce using rule 21 (instructions -> empty .)
    CALL            reduce using rule 21 (instructions -> empty .)
    UNTIL           reduce using rule 21 (instructions -> empty .)
    WHILE           reduce using rule 21 (instructions -> empty .)
    CASE            reduce using rule 21 (instructions -> empty .)
    VERT            reduce using rule 21 (instructions -> empty .)
    BREAK           reduce using rule 21 (instructions -> empty .)


state 15

    (4) procedures -> PROCEDURE ID LPARENT instructions . RPARENT SEMICOLON procedures
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT

    RPARENT         shift and go to state 36
    NEW             shift and go to state 17
    VALUES          shift and go to state 18
    ALTER           shift and go to state 19
    ALTERB          shift and go to state 20
    MOVR            shift and go to state 21
    MOVL            shift and go to state 22
    HAMMER          shift and go to state 23
    STOP            shift and go to state 24
    REPEAT          shift and go to state 25
    PRINT           shift and go to state 29
    CALL            shift and go to state 31
    UNTIL           shift and go to state 32
    WHILE           shift and go to state 33
    CASE            shift and go to state 34
    VERT            shift and go to state 35

    untilbody                      shift and go to state 26
    whilebody                      shift and go to state 27
    casebody                       shift and go to state 28
    istrue                         shift and go to state 30

state 16

    (2) principal -> PRINCIPAL LPARENT instructions RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 37


state 17

    (6) instructions -> instructions NEW . ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary

    ID              shift and go to state 38


state 18

    (7) instructions -> instructions VALUES . LPARENT ID COMMA value RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 39


state 19

    (8) instructions -> instructions ALTER . LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 40


state 20

    (9) instructions -> instructions ALTERB . LPARENT ID RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 41


state 21

    (10) instructions -> instructions MOVR . SEMICOLON commentary

    SEMICOLON       shift and go to state 42


state 22

    (11) instructions -> instructions MOVL . SEMICOLON commentary

    SEMICOLON       shift and go to state 43


state 23

    (12) instructions -> instructions HAMMER . LPARENT position RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 44


state 24

    (13) instructions -> instructions STOP . SEMICOLON commentary

    SEMICOLON       shift and go to state 45


state 25

    (14) instructions -> instructions REPEAT . LPARENT repeat_instructions RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 46


state 26

    (15) instructions -> instructions untilbody . SEMICOLON commentary

    SEMICOLON       shift and go to state 47


state 27

    (16) instructions -> instructions whilebody . SEMICOLON commentary

    SEMICOLON       shift and go to state 48


state 28

    (17) instructions -> instructions casebody . SEMICOLON commentary
    (48) casebody -> casebody . ELSE LPARENT instructions RPARENT

    SEMICOLON       shift and go to state 49
    ELSE            shift and go to state 50


state 29

    (18) instructions -> instructions PRINT . LPARENT printstart RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 51


state 30

    (19) instructions -> instructions istrue . SEMICOLON commentary

    SEMICOLON       shift and go to state 52


state 31

    (20) instructions -> instructions CALL . LPARENT ID RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 53


state 32

    (45) untilbody -> UNTIL . LPARENT instructions RPARENT condition

    LPARENT         shift and go to state 54


state 33

    (46) whilebody -> WHILE . condition LPARENT instructions RPARENT
    (54) condition -> . ID comparator ID
    (55) condition -> . ID comparator NUMBER
    (56) condition -> . NUMBER comparator ID
    (57) condition -> . NUMBER comparator NUMBER
    (58) condition -> . TRUE
    (59) condition -> . FALSE
    (60) condition -> . istrue
    (61) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 56
    NUMBER          shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    VERT            shift and go to state 35

    condition                      shift and go to state 55
    istrue                         shift and go to state 60

state 34

    (47) casebody -> CASE . WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> CASE . ID innercasebody

    WHEN            shift and go to state 61
    ID              shift and go to state 62


state 35

    (61) istrue -> VERT . LPARENT ID RPARENT

    LPARENT         shift and go to state 63


state 36

    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT . SEMICOLON procedures

    SEMICOLON       shift and go to state 64


state 37

    (2) principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .

    PROCEDURE       reduce using rule 2 (principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    $end            reduce using rule 2 (principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)


state 38

    (6) instructions -> instructions NEW ID . LPARENT datatype COMMA value RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 65


state 39

    (7) instructions -> instructions VALUES LPARENT . ID COMMA value RPARENT SEMICOLON commentary

    ID              shift and go to state 66


state 40

    (8) instructions -> instructions ALTER LPARENT . ID COMMA operator COMMA value RPARENT SEMICOLON commentary

    ID              shift and go to state 67


state 41

    (9) instructions -> instructions ALTERB LPARENT . ID RPARENT SEMICOLON commentary

    ID              shift and go to state 68


state 42

    (10) instructions -> instructions MOVR SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 69
    empty                          shift and go to state 71

state 43

    (11) instructions -> instructions MOVL SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 72
    empty                          shift and go to state 71

state 44

    (12) instructions -> instructions HAMMER LPARENT . position RPARENT SEMICOLON commentary
    (40) position -> . NORTH
    (41) position -> . SOUTH
    (42) position -> . EAST
    (43) position -> . WEST

    NORTH           shift and go to state 74
    SOUTH           shift and go to state 75
    EAST            shift and go to state 76
    WEST            shift and go to state 77

    position                       shift and go to state 73

state 45

    (13) instructions -> instructions STOP SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 78
    empty                          shift and go to state 71

state 46

    (14) instructions -> instructions REPEAT LPARENT . repeat_instructions RPARENT SEMICOLON commentary
    (44) repeat_instructions -> . instructions BREAK
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (68) empty -> .

    BREAK           reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)

    instructions                   shift and go to state 79
    repeat_instructions            shift and go to state 80
    empty                          shift and go to state 14

state 47

    (15) instructions -> instructions untilbody SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 81
    empty                          shift and go to state 71

state 48

    (16) instructions -> instructions whilebody SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 82
    empty                          shift and go to state 71

state 49

    (17) instructions -> instructions casebody SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 83
    empty                          shift and go to state 71

state 50

    (48) casebody -> casebody ELSE . LPARENT instructions RPARENT

    LPARENT         shift and go to state 84


state 51

    (18) instructions -> instructions PRINT LPARENT . printstart RPARENT SEMICOLON commentary
    (62) printstart -> . startvalue printvalues
    (66) startvalue -> . STRING
    (67) startvalue -> . ID

    STRING          shift and go to state 87
    ID              shift and go to state 88

    printstart                     shift and go to state 85
    startvalue                     shift and go to state 86

state 52

    (19) instructions -> instructions istrue SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 89
    empty                          shift and go to state 71

state 53

    (20) instructions -> instructions CALL LPARENT . ID RPARENT SEMICOLON commentary

    ID              shift and go to state 90


state 54

    (45) untilbody -> UNTIL LPARENT . instructions RPARENT condition
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (68) empty -> .

    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)

    instructions                   shift and go to state 91
    empty                          shift and go to state 14

state 55

    (46) whilebody -> WHILE condition . LPARENT instructions RPARENT

    LPARENT         shift and go to state 92


state 56

    (54) condition -> ID . comparator ID
    (55) condition -> ID . comparator NUMBER
    (34) comparator -> . GT
    (35) comparator -> . LT
    (36) comparator -> . GET
    (37) comparator -> . LET
    (38) comparator -> . EQ
    (39) comparator -> . DT

    GT              shift and go to state 94
    LT              shift and go to state 95
    GET             shift and go to state 96
    LET             shift and go to state 97
    EQ              shift and go to state 98
    DT              shift and go to state 99

    comparator                     shift and go to state 93

state 57

    (56) condition -> NUMBER . comparator ID
    (57) condition -> NUMBER . comparator NUMBER
    (34) comparator -> . GT
    (35) comparator -> . LT
    (36) comparator -> . GET
    (37) comparator -> . LET
    (38) comparator -> . EQ
    (39) comparator -> . DT

    GT              shift and go to state 94
    LT              shift and go to state 95
    GET             shift and go to state 96
    LET             shift and go to state 97
    EQ              shift and go to state 98
    DT              shift and go to state 99

    comparator                     shift and go to state 100

state 58

    (58) condition -> TRUE .

    LPARENT         reduce using rule 58 (condition -> TRUE .)
    RPARENT         reduce using rule 58 (condition -> TRUE .)
    SEMICOLON       reduce using rule 58 (condition -> TRUE .)


state 59

    (59) condition -> FALSE .

    LPARENT         reduce using rule 59 (condition -> FALSE .)
    RPARENT         reduce using rule 59 (condition -> FALSE .)
    SEMICOLON       reduce using rule 59 (condition -> FALSE .)


state 60

    (60) condition -> istrue .

    LPARENT         reduce using rule 60 (condition -> istrue .)
    RPARENT         reduce using rule 60 (condition -> istrue .)
    SEMICOLON       reduce using rule 60 (condition -> istrue .)


state 61

    (47) casebody -> CASE WHEN . LPARENT condition RPARENT THEN LPARENT instructions RPARENT

    LPARENT         shift and go to state 101


state 62

    (49) casebody -> CASE ID . innercasebody
    (50) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . empty
    (68) empty -> .

    WHEN            shift and go to state 103
    SEMICOLON       reduce using rule 68 (empty -> .)
    ELSE            reduce using rule 68 (empty -> .)

    innercasebody                  shift and go to state 102
    empty                          shift and go to state 104

state 63

    (61) istrue -> VERT LPARENT . ID RPARENT

    ID              shift and go to state 105


state 64

    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON . procedures
    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
    (5) procedures -> . empty
    (68) empty -> .

  ! shift/reduce conflict for PROCEDURE resolved as shift
    PROCEDURE       shift and go to state 4
    PRINCIPAL       reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)

  ! PROCEDURE       [ reduce using rule 68 (empty -> .) ]

    procedures                     shift and go to state 106
    empty                          shift and go to state 5

state 65

    (6) instructions -> instructions NEW ID LPARENT . datatype COMMA value RPARENT SEMICOLON commentary
    (24) datatype -> . NUMVAL
    (25) datatype -> . BOOLVAL

    NUMVAL          shift and go to state 108
    BOOLVAL         shift and go to state 109

    datatype                       shift and go to state 107

state 66

    (7) instructions -> instructions VALUES LPARENT ID . COMMA value RPARENT SEMICOLON commentary

    COMMA           shift and go to state 110


state 67

    (8) instructions -> instructions ALTER LPARENT ID . COMMA operator COMMA value RPARENT SEMICOLON commentary

    COMMA           shift and go to state 111


state 68

    (9) instructions -> instructions ALTERB LPARENT ID . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 112


state 69

    (10) instructions -> instructions MOVR SEMICOLON commentary .

    RPARENT         reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    NEW             reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    VALUES          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    ALTER           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    ALTERB          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    MOVR            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    MOVL            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    HAMMER          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    STOP            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    REPEAT          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    PRINT           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    CALL            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    UNTIL           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    WHILE           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    CASE            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    VERT            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    BREAK           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)


state 70

    (22) commentary -> COMMENT .

    RPARENT         reduce using rule 22 (commentary -> COMMENT .)
    NEW             reduce using rule 22 (commentary -> COMMENT .)
    VALUES          reduce using rule 22 (commentary -> COMMENT .)
    ALTER           reduce using rule 22 (commentary -> COMMENT .)
    ALTERB          reduce using rule 22 (commentary -> COMMENT .)
    MOVR            reduce using rule 22 (commentary -> COMMENT .)
    MOVL            reduce using rule 22 (commentary -> COMMENT .)
    HAMMER          reduce using rule 22 (commentary -> COMMENT .)
    STOP            reduce using rule 22 (commentary -> COMMENT .)
    REPEAT          reduce using rule 22 (commentary -> COMMENT .)
    PRINT           reduce using rule 22 (commentary -> COMMENT .)
    CALL            reduce using rule 22 (commentary -> COMMENT .)
    UNTIL           reduce using rule 22 (commentary -> COMMENT .)
    WHILE           reduce using rule 22 (commentary -> COMMENT .)
    CASE            reduce using rule 22 (commentary -> COMMENT .)
    VERT            reduce using rule 22 (commentary -> COMMENT .)
    BREAK           reduce using rule 22 (commentary -> COMMENT .)


state 71

    (23) commentary -> empty .

    RPARENT         reduce using rule 23 (commentary -> empty .)
    NEW             reduce using rule 23 (commentary -> empty .)
    VALUES          reduce using rule 23 (commentary -> empty .)
    ALTER           reduce using rule 23 (commentary -> empty .)
    ALTERB          reduce using rule 23 (commentary -> empty .)
    MOVR            reduce using rule 23 (commentary -> empty .)
    MOVL            reduce using rule 23 (commentary -> empty .)
    HAMMER          reduce using rule 23 (commentary -> empty .)
    STOP            reduce using rule 23 (commentary -> empty .)
    REPEAT          reduce using rule 23 (commentary -> empty .)
    PRINT           reduce using rule 23 (commentary -> empty .)
    CALL            reduce using rule 23 (commentary -> empty .)
    UNTIL           reduce using rule 23 (commentary -> empty .)
    WHILE           reduce using rule 23 (commentary -> empty .)
    CASE            reduce using rule 23 (commentary -> empty .)
    VERT            reduce using rule 23 (commentary -> empty .)
    BREAK           reduce using rule 23 (commentary -> empty .)


state 72

    (11) instructions -> instructions MOVL SEMICOLON commentary .

    RPARENT         reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    NEW             reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    VALUES          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    ALTER           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    ALTERB          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    MOVR            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    MOVL            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    HAMMER          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    STOP            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    REPEAT          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    PRINT           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    CALL            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    UNTIL           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    WHILE           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    CASE            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    VERT            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    BREAK           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)


state 73

    (12) instructions -> instructions HAMMER LPARENT position . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 113


state 74

    (40) position -> NORTH .

    RPARENT         reduce using rule 40 (position -> NORTH .)


state 75

    (41) position -> SOUTH .

    RPARENT         reduce using rule 41 (position -> SOUTH .)


state 76

    (42) position -> EAST .

    RPARENT         reduce using rule 42 (position -> EAST .)


state 77

    (43) position -> WEST .

    RPARENT         reduce using rule 43 (position -> WEST .)


state 78

    (13) instructions -> instructions STOP SEMICOLON commentary .

    RPARENT         reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    NEW             reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    VALUES          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    ALTER           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    ALTERB          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    MOVR            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    MOVL            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    HAMMER          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    STOP            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    REPEAT          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    PRINT           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    CALL            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    UNTIL           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    WHILE           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    CASE            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    VERT            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    BREAK           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)


state 79

    (44) repeat_instructions -> instructions . BREAK
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT

    BREAK           shift and go to state 114
    NEW             shift and go to state 17
    VALUES          shift and go to state 18
    ALTER           shift and go to state 19
    ALTERB          shift and go to state 20
    MOVR            shift and go to state 21
    MOVL            shift and go to state 22
    HAMMER          shift and go to state 23
    STOP            shift and go to state 24
    REPEAT          shift and go to state 25
    PRINT           shift and go to state 29
    CALL            shift and go to state 31
    UNTIL           shift and go to state 32
    WHILE           shift and go to state 33
    CASE            shift and go to state 34
    VERT            shift and go to state 35

    untilbody                      shift and go to state 26
    whilebody                      shift and go to state 27
    casebody                       shift and go to state 28
    istrue                         shift and go to state 30

state 80

    (14) instructions -> instructions REPEAT LPARENT repeat_instructions . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 115


state 81

    (15) instructions -> instructions untilbody SEMICOLON commentary .

    RPARENT         reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    NEW             reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    VALUES          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    ALTER           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    ALTERB          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    MOVR            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    MOVL            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    HAMMER          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    STOP            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    REPEAT          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    PRINT           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    CALL            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    UNTIL           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    WHILE           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    CASE            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    VERT            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    BREAK           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)


state 82

    (16) instructions -> instructions whilebody SEMICOLON commentary .

    RPARENT         reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    NEW             reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    VALUES          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    ALTER           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    ALTERB          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    MOVR            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    MOVL            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    HAMMER          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    STOP            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    REPEAT          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    PRINT           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    CALL            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    UNTIL           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    WHILE           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    CASE            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    VERT            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    BREAK           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)


state 83

    (17) instructions -> instructions casebody SEMICOLON commentary .

    RPARENT         reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    NEW             reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    VALUES          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    ALTER           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    ALTERB          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    MOVR            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    MOVL            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    HAMMER          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    STOP            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    REPEAT          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    PRINT           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    CALL            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    UNTIL           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    WHILE           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    CASE            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    VERT            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    BREAK           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)


state 84

    (48) casebody -> casebody ELSE LPARENT . instructions RPARENT
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (68) empty -> .

    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)

    instructions                   shift and go to state 116
    empty                          shift and go to state 14

state 85

    (18) instructions -> instructions PRINT LPARENT printstart . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 117


state 86

    (62) printstart -> startvalue . printvalues
    (63) printvalues -> . COMMA STRING printvalues
    (64) printvalues -> . COMMA ID printvalues
    (65) printvalues -> . empty
    (68) empty -> .

    COMMA           shift and go to state 119
    RPARENT         reduce using rule 68 (empty -> .)

    printvalues                    shift and go to state 118
    empty                          shift and go to state 120

state 87

    (66) startvalue -> STRING .

    COMMA           reduce using rule 66 (startvalue -> STRING .)
    RPARENT         reduce using rule 66 (startvalue -> STRING .)


state 88

    (67) startvalue -> ID .

    COMMA           reduce using rule 67 (startvalue -> ID .)
    RPARENT         reduce using rule 67 (startvalue -> ID .)


state 89

    (19) instructions -> instructions istrue SEMICOLON commentary .

    RPARENT         reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    NEW             reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    VALUES          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    ALTER           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    ALTERB          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    MOVR            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    MOVL            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    HAMMER          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    STOP            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    REPEAT          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    PRINT           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    CALL            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    UNTIL           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    WHILE           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    CASE            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    VERT            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    BREAK           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)


state 90

    (20) instructions -> instructions CALL LPARENT ID . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 121


state 91

    (45) untilbody -> UNTIL LPARENT instructions . RPARENT condition
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT

    RPARENT         shift and go to state 122
    NEW             shift and go to state 17
    VALUES          shift and go to state 18
    ALTER           shift and go to state 19
    ALTERB          shift and go to state 20
    MOVR            shift and go to state 21
    MOVL            shift and go to state 22
    HAMMER          shift and go to state 23
    STOP            shift and go to state 24
    REPEAT          shift and go to state 25
    PRINT           shift and go to state 29
    CALL            shift and go to state 31
    UNTIL           shift and go to state 32
    WHILE           shift and go to state 33
    CASE            shift and go to state 34
    VERT            shift and go to state 35

    untilbody                      shift and go to state 26
    whilebody                      shift and go to state 27
    casebody                       shift and go to state 28
    istrue                         shift and go to state 30

state 92

    (46) whilebody -> WHILE condition LPARENT . instructions RPARENT
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (68) empty -> .

    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)

    instructions                   shift and go to state 123
    empty                          shift and go to state 14

state 93

    (54) condition -> ID comparator . ID
    (55) condition -> ID comparator . NUMBER

    ID              shift and go to state 124
    NUMBER          shift and go to state 125


state 94

    (34) comparator -> GT .

    ID              reduce using rule 34 (comparator -> GT .)
    NUMBER          reduce using rule 34 (comparator -> GT .)


state 95

    (35) comparator -> LT .

    ID              reduce using rule 35 (comparator -> LT .)
    NUMBER          reduce using rule 35 (comparator -> LT .)


state 96

    (36) comparator -> GET .

    ID              reduce using rule 36 (comparator -> GET .)
    NUMBER          reduce using rule 36 (comparator -> GET .)


state 97

    (37) comparator -> LET .

    ID              reduce using rule 37 (comparator -> LET .)
    NUMBER          reduce using rule 37 (comparator -> LET .)


state 98

    (38) comparator -> EQ .

    ID              reduce using rule 38 (comparator -> EQ .)
    NUMBER          reduce using rule 38 (comparator -> EQ .)


state 99

    (39) comparator -> DT .

    ID              reduce using rule 39 (comparator -> DT .)
    NUMBER          reduce using rule 39 (comparator -> DT .)


state 100

    (56) condition -> NUMBER comparator . ID
    (57) condition -> NUMBER comparator . NUMBER

    ID              shift and go to state 127
    NUMBER          shift and go to state 126


state 101

    (47) casebody -> CASE WHEN LPARENT . condition RPARENT THEN LPARENT instructions RPARENT
    (54) condition -> . ID comparator ID
    (55) condition -> . ID comparator NUMBER
    (56) condition -> . NUMBER comparator ID
    (57) condition -> . NUMBER comparator NUMBER
    (58) condition -> . TRUE
    (59) condition -> . FALSE
    (60) condition -> . istrue
    (61) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 56
    NUMBER          shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    VERT            shift and go to state 35

    condition                      shift and go to state 128
    istrue                         shift and go to state 60

state 102

    (49) casebody -> CASE ID innercasebody .

    SEMICOLON       reduce using rule 49 (casebody -> CASE ID innercasebody .)
    ELSE            reduce using rule 49 (casebody -> CASE ID innercasebody .)


state 103

    (50) innercasebody -> WHEN . NUMBER THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> WHEN . TRUE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> WHEN . FALSE THEN LPARENT instructions RPARENT innercasebody

    NUMBER          shift and go to state 129
    TRUE            shift and go to state 130
    FALSE           shift and go to state 131


state 104

    (53) innercasebody -> empty .

    SEMICOLON       reduce using rule 53 (innercasebody -> empty .)
    ELSE            reduce using rule 53 (innercasebody -> empty .)


state 105

    (61) istrue -> VERT LPARENT ID . RPARENT

    RPARENT         shift and go to state 132


state 106

    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .

    PRINCIPAL       reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)
    PROCEDURE       reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)
    $end            reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)


state 107

    (6) instructions -> instructions NEW ID LPARENT datatype . COMMA value RPARENT SEMICOLON commentary

    COMMA           shift and go to state 133


state 108

    (24) datatype -> NUMVAL .

    COMMA           reduce using rule 24 (datatype -> NUMVAL .)


state 109

    (25) datatype -> BOOLVAL .

    COMMA           reduce using rule 25 (datatype -> BOOLVAL .)


state 110

    (7) instructions -> instructions VALUES LPARENT ID COMMA . value RPARENT SEMICOLON commentary
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    ALTER           shift and go to state 138

    value                          shift and go to state 134

state 111

    (8) instructions -> instructions ALTER LPARENT ID COMMA . operator COMMA value RPARENT SEMICOLON commentary
    (30) operator -> . ADD
    (31) operator -> . SUB
    (32) operator -> . MUL
    (33) operator -> . DIV

    ADD             shift and go to state 140
    SUB             shift and go to state 141
    MUL             shift and go to state 142
    DIV             shift and go to state 143

    operator                       shift and go to state 139

state 112

    (9) instructions -> instructions ALTERB LPARENT ID RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 144


state 113

    (12) instructions -> instructions HAMMER LPARENT position RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 145


state 114

    (44) repeat_instructions -> instructions BREAK .

    RPARENT         reduce using rule 44 (repeat_instructions -> instructions BREAK .)


state 115

    (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 146


state 116

    (48) casebody -> casebody ELSE LPARENT instructions . RPARENT
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT

    RPARENT         shift and go to state 147
    NEW             shift and go to state 17
    VALUES          shift and go to state 18
    ALTER           shift and go to state 19
    ALTERB          shift and go to state 20
    MOVR            shift and go to state 21
    MOVL            shift and go to state 22
    HAMMER          shift and go to state 23
    STOP            shift and go to state 24
    REPEAT          shift and go to state 25
    PRINT           shift and go to state 29
    CALL            shift and go to state 31
    UNTIL           shift and go to state 32
    WHILE           shift and go to state 33
    CASE            shift and go to state 34
    VERT            shift and go to state 35

    casebody                       shift and go to state 28
    untilbody                      shift and go to state 26
    whilebody                      shift and go to state 27
    istrue                         shift and go to state 30

state 117

    (18) instructions -> instructions PRINT LPARENT printstart RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 148


state 118

    (62) printstart -> startvalue printvalues .

    RPARENT         reduce using rule 62 (printstart -> startvalue printvalues .)


state 119

    (63) printvalues -> COMMA . STRING printvalues
    (64) printvalues -> COMMA . ID printvalues

    STRING          shift and go to state 149
    ID              shift and go to state 150


state 120

    (65) printvalues -> empty .

    RPARENT         reduce using rule 65 (printvalues -> empty .)


state 121

    (20) instructions -> instructions CALL LPARENT ID RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 151


state 122

    (45) untilbody -> UNTIL LPARENT instructions RPARENT . condition
    (54) condition -> . ID comparator ID
    (55) condition -> . ID comparator NUMBER
    (56) condition -> . NUMBER comparator ID
    (57) condition -> . NUMBER comparator NUMBER
    (58) condition -> . TRUE
    (59) condition -> . FALSE
    (60) condition -> . istrue
    (61) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 56
    NUMBER          shift and go to state 57
    TRUE            shift and go to state 58
    FALSE           shift and go to state 59
    VERT            shift and go to state 35

    condition                      shift and go to state 152
    istrue                         shift and go to state 60

state 123

    (46) whilebody -> WHILE condition LPARENT instructions . RPARENT
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT

    RPARENT         shift and go to state 153
    NEW             shift and go to state 17
    VALUES          shift and go to state 18
    ALTER           shift and go to state 19
    ALTERB          shift and go to state 20
    MOVR            shift and go to state 21
    MOVL            shift and go to state 22
    HAMMER          shift and go to state 23
    STOP            shift and go to state 24
    REPEAT          shift and go to state 25
    PRINT           shift and go to state 29
    CALL            shift and go to state 31
    UNTIL           shift and go to state 32
    WHILE           shift and go to state 33
    CASE            shift and go to state 34
    VERT            shift and go to state 35

    untilbody                      shift and go to state 26
    whilebody                      shift and go to state 27
    casebody                       shift and go to state 28
    istrue                         shift and go to state 30

state 124

    (54) condition -> ID comparator ID .

    LPARENT         reduce using rule 54 (condition -> ID comparator ID .)
    RPARENT         reduce using rule 54 (condition -> ID comparator ID .)
    SEMICOLON       reduce using rule 54 (condition -> ID comparator ID .)


state 125

    (55) condition -> ID comparator NUMBER .

    LPARENT         reduce using rule 55 (condition -> ID comparator NUMBER .)
    RPARENT         reduce using rule 55 (condition -> ID comparator NUMBER .)
    SEMICOLON       reduce using rule 55 (condition -> ID comparator NUMBER .)


state 126

    (57) condition -> NUMBER comparator NUMBER .

    LPARENT         reduce using rule 57 (condition -> NUMBER comparator NUMBER .)
    RPARENT         reduce using rule 57 (condition -> NUMBER comparator NUMBER .)
    SEMICOLON       reduce using rule 57 (condition -> NUMBER comparator NUMBER .)


state 127

    (56) condition -> NUMBER comparator ID .

    LPARENT         reduce using rule 56 (condition -> NUMBER comparator ID .)
    RPARENT         reduce using rule 56 (condition -> NUMBER comparator ID .)
    SEMICOLON       reduce using rule 56 (condition -> NUMBER comparator ID .)


state 128

    (47) casebody -> CASE WHEN LPARENT condition . RPARENT THEN LPARENT instructions RPARENT

    RPARENT         shift and go to state 154


state 129

    (50) innercasebody -> WHEN NUMBER . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 155


state 130

    (51) innercasebody -> WHEN TRUE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 156


state 131

    (52) innercasebody -> WHEN FALSE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 157


state 132

    (61) istrue -> VERT LPARENT ID RPARENT .

    SEMICOLON       reduce using rule 61 (istrue -> VERT LPARENT ID RPARENT .)
    LPARENT         reduce using rule 61 (istrue -> VERT LPARENT ID RPARENT .)
    RPARENT         reduce using rule 61 (istrue -> VERT LPARENT ID RPARENT .)


state 133

    (6) instructions -> instructions NEW ID LPARENT datatype COMMA . value RPARENT SEMICOLON commentary
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    ALTER           shift and go to state 138

    value                          shift and go to state 158

state 134

    (7) instructions -> instructions VALUES LPARENT ID COMMA value . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 159


state 135

    (26) value -> NUMBER .

    RPARENT         reduce using rule 26 (value -> NUMBER .)


state 136

    (27) value -> TRUE .

    RPARENT         reduce using rule 27 (value -> TRUE .)


state 137

    (28) value -> FALSE .

    RPARENT         reduce using rule 28 (value -> FALSE .)


state 138

    (29) value -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT

    LPARENT         shift and go to state 160


state 139

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator . COMMA value RPARENT SEMICOLON commentary

    COMMA           shift and go to state 161


state 140

    (30) operator -> ADD .

    COMMA           reduce using rule 30 (operator -> ADD .)


state 141

    (31) operator -> SUB .

    COMMA           reduce using rule 31 (operator -> SUB .)


state 142

    (32) operator -> MUL .

    COMMA           reduce using rule 32 (operator -> MUL .)


state 143

    (33) operator -> DIV .

    COMMA           reduce using rule 33 (operator -> DIV .)


state 144

    (9) instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 162
    empty                          shift and go to state 71

state 145

    (12) instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 163
    empty                          shift and go to state 71

state 146

    (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 164
    empty                          shift and go to state 71

state 147

    (48) casebody -> casebody ELSE LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 48 (casebody -> casebody ELSE LPARENT instructions RPARENT .)
    ELSE            reduce using rule 48 (casebody -> casebody ELSE LPARENT instructions RPARENT .)


state 148

    (18) instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 165
    empty                          shift and go to state 71

state 149

    (63) printvalues -> COMMA STRING . printvalues
    (63) printvalues -> . COMMA STRING printvalues
    (64) printvalues -> . COMMA ID printvalues
    (65) printvalues -> . empty
    (68) empty -> .

    COMMA           shift and go to state 119
    RPARENT         reduce using rule 68 (empty -> .)

    printvalues                    shift and go to state 166
    empty                          shift and go to state 120

state 150

    (64) printvalues -> COMMA ID . printvalues
    (63) printvalues -> . COMMA STRING printvalues
    (64) printvalues -> . COMMA ID printvalues
    (65) printvalues -> . empty
    (68) empty -> .

    COMMA           shift and go to state 119
    RPARENT         reduce using rule 68 (empty -> .)

    printvalues                    shift and go to state 167
    empty                          shift and go to state 120

state 151

    (20) instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 168
    empty                          shift and go to state 71

state 152

    (45) untilbody -> UNTIL LPARENT instructions RPARENT condition .

    SEMICOLON       reduce using rule 45 (untilbody -> UNTIL LPARENT instructions RPARENT condition .)


state 153

    (46) whilebody -> WHILE condition LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 46 (whilebody -> WHILE condition LPARENT instructions RPARENT .)


state 154

    (47) casebody -> CASE WHEN LPARENT condition RPARENT . THEN LPARENT instructions RPARENT

    THEN            shift and go to state 169


state 155

    (50) innercasebody -> WHEN NUMBER THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 170


state 156

    (51) innercasebody -> WHEN TRUE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 171


state 157

    (52) innercasebody -> WHEN FALSE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 172


state 158

    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 173


state 159

    (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 174


state 160

    (29) value -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT

    ID              shift and go to state 175


state 161

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA . value RPARENT SEMICOLON commentary
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    ALTER           shift and go to state 138

    value                          shift and go to state 176

state 162

    (9) instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)


state 163

    (12) instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)


state 164

    (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)


state 165

    (18) instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 18 (instructions -> instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary .)


state 166

    (63) printvalues -> COMMA STRING printvalues .

    RPARENT         reduce using rule 63 (printvalues -> COMMA STRING printvalues .)


state 167

    (64) printvalues -> COMMA ID printvalues .

    RPARENT         reduce using rule 64 (printvalues -> COMMA ID printvalues .)


state 168

    (20) instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)


state 169

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN . LPARENT instructions RPARENT

    LPARENT         shift and go to state 177


state 170

    (50) innercasebody -> WHEN NUMBER THEN LPARENT . instructions RPARENT innercasebody
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (68) empty -> .

    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)

    instructions                   shift and go to state 178
    empty                          shift and go to state 14

state 171

    (51) innercasebody -> WHEN TRUE THEN LPARENT . instructions RPARENT innercasebody
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (68) empty -> .

    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)

    instructions                   shift and go to state 179
    empty                          shift and go to state 14

state 172

    (52) innercasebody -> WHEN FALSE THEN LPARENT . instructions RPARENT innercasebody
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (68) empty -> .

    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)

    instructions                   shift and go to state 180
    empty                          shift and go to state 14

state 173

    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 181


state 174

    (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 182
    empty                          shift and go to state 71

state 175

    (29) value -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT

    COMMA           shift and go to state 183


state 176

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 184


state 177

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT . instructions RPARENT
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (68) empty -> .

    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)

    instructions                   shift and go to state 185
    empty                          shift and go to state 14

state 178

    (50) innercasebody -> WHEN NUMBER THEN LPARENT instructions . RPARENT innercasebody
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT

    RPARENT         shift and go to state 186
    NEW             shift and go to state 17
    VALUES          shift and go to state 18
    ALTER           shift and go to state 19
    ALTERB          shift and go to state 20
    MOVR            shift and go to state 21
    MOVL            shift and go to state 22
    HAMMER          shift and go to state 23
    STOP            shift and go to state 24
    REPEAT          shift and go to state 25
    PRINT           shift and go to state 29
    CALL            shift and go to state 31
    UNTIL           shift and go to state 32
    WHILE           shift and go to state 33
    CASE            shift and go to state 34
    VERT            shift and go to state 35

    untilbody                      shift and go to state 26
    whilebody                      shift and go to state 27
    casebody                       shift and go to state 28
    istrue                         shift and go to state 30

state 179

    (51) innercasebody -> WHEN TRUE THEN LPARENT instructions . RPARENT innercasebody
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT

    RPARENT         shift and go to state 187
    NEW             shift and go to state 17
    VALUES          shift and go to state 18
    ALTER           shift and go to state 19
    ALTERB          shift and go to state 20
    MOVR            shift and go to state 21
    MOVL            shift and go to state 22
    HAMMER          shift and go to state 23
    STOP            shift and go to state 24
    REPEAT          shift and go to state 25
    PRINT           shift and go to state 29
    CALL            shift and go to state 31
    UNTIL           shift and go to state 32
    WHILE           shift and go to state 33
    CASE            shift and go to state 34
    VERT            shift and go to state 35

    untilbody                      shift and go to state 26
    whilebody                      shift and go to state 27
    casebody                       shift and go to state 28
    istrue                         shift and go to state 30

state 180

    (52) innercasebody -> WHEN FALSE THEN LPARENT instructions . RPARENT innercasebody
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT

    RPARENT         shift and go to state 188
    NEW             shift and go to state 17
    VALUES          shift and go to state 18
    ALTER           shift and go to state 19
    ALTERB          shift and go to state 20
    MOVR            shift and go to state 21
    MOVL            shift and go to state 22
    HAMMER          shift and go to state 23
    STOP            shift and go to state 24
    REPEAT          shift and go to state 25
    PRINT           shift and go to state 29
    CALL            shift and go to state 31
    UNTIL           shift and go to state 32
    WHILE           shift and go to state 33
    CASE            shift and go to state 34
    VERT            shift and go to state 35

    untilbody                      shift and go to state 26
    whilebody                      shift and go to state 27
    casebody                       shift and go to state 28
    istrue                         shift and go to state 30

state 181

    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 189
    empty                          shift and go to state 71

state 182

    (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)


state 183

    (29) value -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT
    (30) operator -> . ADD
    (31) operator -> . SUB
    (32) operator -> . MUL
    (33) operator -> . DIV

    ADD             shift and go to state 140
    SUB             shift and go to state 141
    MUL             shift and go to state 142
    DIV             shift and go to state 143

    operator                       shift and go to state 190

state 184

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 191


state 185

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions . RPARENT
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT printstart RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT

    RPARENT         shift and go to state 192
    NEW             shift and go to state 17
    VALUES          shift and go to state 18
    ALTER           shift and go to state 19
    ALTERB          shift and go to state 20
    MOVR            shift and go to state 21
    MOVL            shift and go to state 22
    HAMMER          shift and go to state 23
    STOP            shift and go to state 24
    REPEAT          shift and go to state 25
    PRINT           shift and go to state 29
    CALL            shift and go to state 31
    UNTIL           shift and go to state 32
    WHILE           shift and go to state 33
    CASE            shift and go to state 34
    VERT            shift and go to state 35

    untilbody                      shift and go to state 26
    whilebody                      shift and go to state 27
    casebody                       shift and go to state 28
    istrue                         shift and go to state 30

state 186

    (50) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT . innercasebody
    (50) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . empty
    (68) empty -> .

    WHEN            shift and go to state 103
    SEMICOLON       reduce using rule 68 (empty -> .)
    ELSE            reduce using rule 68 (empty -> .)

    innercasebody                  shift and go to state 193
    empty                          shift and go to state 104

state 187

    (51) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT . innercasebody
    (50) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . empty
    (68) empty -> .

    WHEN            shift and go to state 103
    SEMICOLON       reduce using rule 68 (empty -> .)
    ELSE            reduce using rule 68 (empty -> .)

    innercasebody                  shift and go to state 194
    empty                          shift and go to state 104

state 188

    (52) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT . innercasebody
    (50) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . empty
    (68) empty -> .

    WHEN            shift and go to state 103
    SEMICOLON       reduce using rule 68 (empty -> .)
    ELSE            reduce using rule 68 (empty -> .)

    innercasebody                  shift and go to state 195
    empty                          shift and go to state 104

state 189

    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)


state 190

    (29) value -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT

    COMMA           shift and go to state 196


state 191

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (68) empty -> .

    COMMENT         shift and go to state 70
    RPARENT         reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    VALUES          reduce using rule 68 (empty -> .)
    ALTER           reduce using rule 68 (empty -> .)
    ALTERB          reduce using rule 68 (empty -> .)
    MOVR            reduce using rule 68 (empty -> .)
    MOVL            reduce using rule 68 (empty -> .)
    HAMMER          reduce using rule 68 (empty -> .)
    STOP            reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)
    CALL            reduce using rule 68 (empty -> .)
    UNTIL           reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    CASE            reduce using rule 68 (empty -> .)
    VERT            reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    commentary                     shift and go to state 197
    empty                          shift and go to state 71

state 192

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 47 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)
    ELSE            reduce using rule 47 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)


state 193

    (50) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 50 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 50 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)


state 194

    (51) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 51 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 51 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)


state 195

    (52) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 52 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 52 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)


state 196

    (29) value -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    ALTER           shift and go to state 138

    value                          shift and go to state 198

state 197

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)


state 198

    (29) value -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT

    RPARENT         shift and go to state 199


state 199

    (29) value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .

    RPARENT         reduce using rule 29 (value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PROCEDURE in state 2 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 64 resolved as shift
