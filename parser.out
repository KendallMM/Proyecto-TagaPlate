Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> COMMENT procedures principal procedures
Rule 2     principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON
Rule 3     principal -> empty
Rule 4     procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
Rule 5     procedures -> empty
Rule 6     instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
Rule 7     instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
Rule 8     instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
Rule 9     instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions
Rule 10    instructions -> MOVR SEMICOLON instructions
Rule 11    instructions -> MOVL SEMICOLON instructions
Rule 12    instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions
Rule 13    instructions -> STOP SEMICOLON instructions
Rule 14    instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
Rule 15    instructions -> untilbody SEMICOLON instructions
Rule 16    instructions -> whilebody SEMICOLON instructions
Rule 17    instructions -> casebody SEMICOLON instructions
Rule 18    instructions -> PRINT LPARENT printstart RPARENT SEMICOLON instructions
Rule 19    instructions -> istrue SEMICOLON instructions
Rule 20    instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions
Rule 21    instructions -> COMMENT
Rule 22    instructions -> empty
Rule 23    datatype -> NUMVAL
Rule 24    datatype -> BOOLVAL
Rule 25    value -> NUMBER
Rule 26    value -> TRUE
Rule 27    value -> FALSE
Rule 28    value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT
Rule 29    operator -> ADD
Rule 30    operator -> SUB
Rule 31    operator -> MUL
Rule 32    operator -> DIV
Rule 33    comparator -> GT
Rule 34    comparator -> LT
Rule 35    comparator -> GET
Rule 36    comparator -> LET
Rule 37    comparator -> EQ
Rule 38    comparator -> DT
Rule 39    position -> NORTH
Rule 40    position -> SOUTH
Rule 41    position -> EAST
Rule 42    position -> WEST
Rule 43    repeat_instructions -> instructions BREAK
Rule 44    untilbody -> UNTIL LPARENT instructions RPARENT condition
Rule 45    whilebody -> WHILE condition LPARENT instructions RPARENT
Rule 46    casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
Rule 47    casebody -> casebody ELSE LPARENT instructions RPARENT
Rule 48    casebody -> CASE ID innercasebody
Rule 49    innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
Rule 50    innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
Rule 51    innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
Rule 52    innercasebody -> empty
Rule 53    condition -> ID comparator ID
Rule 54    condition -> ID comparator NUMBER
Rule 55    condition -> NUMBER comparator ID
Rule 56    condition -> NUMBER comparator NUMBER
Rule 57    condition -> TRUE
Rule 58    condition -> FALSE
Rule 59    condition -> istrue
Rule 60    istrue -> VERT LPARENT ID RPARENT
Rule 61    printstart -> startvalue printvalues
Rule 62    printvalues -> COMMA STRING printvalues
Rule 63    printvalues -> COMMA ID printvalues
Rule 64    printvalues -> empty
Rule 65    startvalue -> STRING
Rule 66    startvalue -> ID
Rule 67    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 29
ALTER                : 8 28
ALTERB               : 9
BOOLVAL              : 24
BREAK                : 43
CALL                 : 20
CASE                 : 46 48
COMMA                : 6 7 8 8 28 28 62 63
COMMENT              : 1 21
DIV                  : 32
DT                   : 38
EAST                 : 41
ELSE                 : 47
EQ                   : 37
FALSE                : 27 51 58
GET                  : 35
GT                   : 33
HAMMER               : 12
ID                   : 4 6 7 8 20 28 48 53 53 54 55 60 63 66
LET                  : 36
LPARENT              : 2 4 6 7 8 9 12 14 18 20 28 44 45 46 46 47 49 50 51 60
LT                   : 34
MOVL                 : 11
MOVR                 : 10
MUL                  : 31
NEW                  : 6
NORTH                : 39
NUMBER               : 25 49 54 55 56 56
NUMVAL               : 23
PRINCIPAL            : 2
PRINT                : 18
PROCEDURE            : 4
REPEAT               : 14
RPARENT              : 2 4 6 7 8 9 12 14 18 20 28 44 45 46 46 47 49 50 51 60
SEMICOLON            : 2 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
SOUTH                : 40
STOP                 : 13
STRING               : 62 65
SUB                  : 30
THEN                 : 46 49 50 51
TRUE                 : 26 50 57
UNTIL                : 44
VALUES               : 7
VERT                 : 60
WEST                 : 42
WHEN                 : 46 49 50 51
WHILE                : 45
error                : 

Nonterminals, with rules where they appear

casebody             : 17 47
comparator           : 53 54 55 56
condition            : 44 45 46
datatype             : 6
empty                : 3 5 22 52 64
innercasebody        : 48 49 50 51
instructions         : 2 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 43 44 45 46 47 49 50 51
istrue               : 19 59
operator             : 8 28
position             : 12
principal            : 1
printstart           : 18
printvalues          : 61 62 63
procedures           : 1 1 4
program              : 0
repeat_instructions  : 14
startvalue           : 61
untilbody            : 15
value                : 6 7 8 9 28
whilebody            : 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . COMMENT procedures principal procedures

    COMMENT         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> COMMENT . procedures principal procedures
    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
    (5) procedures -> . empty
    (67) empty -> .

  ! shift/reduce conflict for PROCEDURE resolved as shift
    PROCEDURE       shift and go to state 4
    PRINCIPAL       reduce using rule 67 (empty -> .)
    $end            reduce using rule 67 (empty -> .)

  ! PROCEDURE       [ reduce using rule 67 (empty -> .) ]

    procedures                     shift and go to state 3
    empty                          shift and go to state 5

state 3

    (1) program -> COMMENT procedures . principal procedures
    (2) principal -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON
    (3) principal -> . empty
    (67) empty -> .

    PRINCIPAL       shift and go to state 7
    PROCEDURE       reduce using rule 67 (empty -> .)
    $end            reduce using rule 67 (empty -> .)

    principal                      shift and go to state 6
    empty                          shift and go to state 8

state 4

    (4) procedures -> PROCEDURE . ID LPARENT instructions RPARENT SEMICOLON procedures

    ID              shift and go to state 9


state 5

    (5) procedures -> empty .

    PRINCIPAL       reduce using rule 5 (procedures -> empty .)
    PROCEDURE       reduce using rule 5 (procedures -> empty .)
    $end            reduce using rule 5 (procedures -> empty .)


state 6

    (1) program -> COMMENT procedures principal . procedures
    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
    (5) procedures -> . empty
    (67) empty -> .

    PROCEDURE       shift and go to state 4
    $end            reduce using rule 67 (empty -> .)

    procedures                     shift and go to state 10
    empty                          shift and go to state 5

state 7

    (2) principal -> PRINCIPAL . LPARENT instructions RPARENT SEMICOLON

    LPARENT         shift and go to state 11


state 8

    (3) principal -> empty .

    PROCEDURE       reduce using rule 3 (principal -> empty .)
    $end            reduce using rule 3 (principal -> empty .)


state 9

    (4) procedures -> PROCEDURE ID . LPARENT instructions RPARENT SEMICOLON procedures

    LPARENT         shift and go to state 12


state 10

    (1) program -> COMMENT procedures principal procedures .

    $end            reduce using rule 1 (program -> COMMENT procedures principal procedures .)


state 11

    (2) principal -> PRINCIPAL LPARENT . instructions RPARENT SEMICOLON
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 13
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 12

    (4) procedures -> PROCEDURE ID LPARENT . instructions RPARENT SEMICOLON procedures
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 35
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 13

    (2) principal -> PRINCIPAL LPARENT instructions . RPARENT SEMICOLON

    RPARENT         shift and go to state 36


state 14

    (6) instructions -> NEW . ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 37


state 15

    (7) instructions -> VALUES . LPARENT ID COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 38


state 16

    (8) instructions -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 39


state 17

    (9) instructions -> ALTERB . LPARENT value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 40


state 18

    (10) instructions -> MOVR . SEMICOLON instructions

    SEMICOLON       shift and go to state 41


state 19

    (11) instructions -> MOVL . SEMICOLON instructions

    SEMICOLON       shift and go to state 42


state 20

    (12) instructions -> HAMMER . LPARENT position RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 43


state 21

    (13) instructions -> STOP . SEMICOLON instructions

    SEMICOLON       shift and go to state 44


state 22

    (14) instructions -> REPEAT . LPARENT repeat_instructions RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 45


state 23

    (15) instructions -> untilbody . SEMICOLON instructions

    SEMICOLON       shift and go to state 46


state 24

    (16) instructions -> whilebody . SEMICOLON instructions

    SEMICOLON       shift and go to state 47


state 25

    (17) instructions -> casebody . SEMICOLON instructions
    (47) casebody -> casebody . ELSE LPARENT instructions RPARENT

    SEMICOLON       shift and go to state 48
    ELSE            shift and go to state 49


state 26

    (18) instructions -> PRINT . LPARENT printstart RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 50


state 27

    (19) instructions -> istrue . SEMICOLON instructions

    SEMICOLON       shift and go to state 51


state 28

    (20) instructions -> CALL . LPARENT ID RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 52


state 29

    (21) instructions -> COMMENT .

    RPARENT         reduce using rule 21 (instructions -> COMMENT .)
    BREAK           reduce using rule 21 (instructions -> COMMENT .)


state 30

    (22) instructions -> empty .

    RPARENT         reduce using rule 22 (instructions -> empty .)
    BREAK           reduce using rule 22 (instructions -> empty .)


state 31

    (44) untilbody -> UNTIL . LPARENT instructions RPARENT condition

    LPARENT         shift and go to state 53


state 32

    (45) whilebody -> WHILE . condition LPARENT instructions RPARENT
    (53) condition -> . ID comparator ID
    (54) condition -> . ID comparator NUMBER
    (55) condition -> . NUMBER comparator ID
    (56) condition -> . NUMBER comparator NUMBER
    (57) condition -> . TRUE
    (58) condition -> . FALSE
    (59) condition -> . istrue
    (60) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 55
    NUMBER          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    VERT            shift and go to state 34

    condition                      shift and go to state 54
    istrue                         shift and go to state 59

state 33

    (46) casebody -> CASE . WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> CASE . ID innercasebody

    WHEN            shift and go to state 60
    ID              shift and go to state 61


state 34

    (60) istrue -> VERT . LPARENT ID RPARENT

    LPARENT         shift and go to state 62


state 35

    (4) procedures -> PROCEDURE ID LPARENT instructions . RPARENT SEMICOLON procedures

    RPARENT         shift and go to state 63


state 36

    (2) principal -> PRINCIPAL LPARENT instructions RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 64


state 37

    (6) instructions -> NEW ID . LPARENT datatype COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 65


state 38

    (7) instructions -> VALUES LPARENT . ID COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 66


state 39

    (8) instructions -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 67


state 40

    (9) instructions -> ALTERB LPARENT . value RPARENT SEMICOLON instructions
    (25) value -> . NUMBER
    (26) value -> . TRUE
    (27) value -> . FALSE
    (28) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    ALTER           shift and go to state 72

    value                          shift and go to state 68

state 41

    (10) instructions -> MOVR SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 73
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 42

    (11) instructions -> MOVL SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 74
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 43

    (12) instructions -> HAMMER LPARENT . position RPARENT SEMICOLON instructions
    (39) position -> . NORTH
    (40) position -> . SOUTH
    (41) position -> . EAST
    (42) position -> . WEST

    NORTH           shift and go to state 76
    SOUTH           shift and go to state 77
    EAST            shift and go to state 78
    WEST            shift and go to state 79

    position                       shift and go to state 75

state 44

    (13) instructions -> STOP SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 80
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 45

    (14) instructions -> REPEAT LPARENT . repeat_instructions RPARENT SEMICOLON instructions
    (43) repeat_instructions -> . instructions BREAK
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    BREAK           reduce using rule 67 (empty -> .)

    repeat_instructions            shift and go to state 81
    instructions                   shift and go to state 82
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 46

    (15) instructions -> untilbody SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    untilbody                      shift and go to state 23
    instructions                   shift and go to state 83
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 47

    (16) instructions -> whilebody SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    whilebody                      shift and go to state 24
    instructions                   shift and go to state 84
    untilbody                      shift and go to state 23
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 48

    (17) instructions -> casebody SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    casebody                       shift and go to state 25
    instructions                   shift and go to state 85
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 49

    (47) casebody -> casebody ELSE . LPARENT instructions RPARENT

    LPARENT         shift and go to state 86


state 50

    (18) instructions -> PRINT LPARENT . printstart RPARENT SEMICOLON instructions
    (61) printstart -> . startvalue printvalues
    (65) startvalue -> . STRING
    (66) startvalue -> . ID

    STRING          shift and go to state 89
    ID              shift and go to state 90

    printstart                     shift and go to state 87
    startvalue                     shift and go to state 88

state 51

    (19) instructions -> istrue SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    istrue                         shift and go to state 27
    instructions                   shift and go to state 91
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    empty                          shift and go to state 30

state 52

    (20) instructions -> CALL LPARENT . ID RPARENT SEMICOLON instructions

    ID              shift and go to state 92


state 53

    (44) untilbody -> UNTIL LPARENT . instructions RPARENT condition
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 93
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 54

    (45) whilebody -> WHILE condition . LPARENT instructions RPARENT

    LPARENT         shift and go to state 94


state 55

    (53) condition -> ID . comparator ID
    (54) condition -> ID . comparator NUMBER
    (33) comparator -> . GT
    (34) comparator -> . LT
    (35) comparator -> . GET
    (36) comparator -> . LET
    (37) comparator -> . EQ
    (38) comparator -> . DT

    GT              shift and go to state 96
    LT              shift and go to state 97
    GET             shift and go to state 98
    LET             shift and go to state 99
    EQ              shift and go to state 100
    DT              shift and go to state 101

    comparator                     shift and go to state 95

state 56

    (55) condition -> NUMBER . comparator ID
    (56) condition -> NUMBER . comparator NUMBER
    (33) comparator -> . GT
    (34) comparator -> . LT
    (35) comparator -> . GET
    (36) comparator -> . LET
    (37) comparator -> . EQ
    (38) comparator -> . DT

    GT              shift and go to state 96
    LT              shift and go to state 97
    GET             shift and go to state 98
    LET             shift and go to state 99
    EQ              shift and go to state 100
    DT              shift and go to state 101

    comparator                     shift and go to state 102

state 57

    (57) condition -> TRUE .

    LPARENT         reduce using rule 57 (condition -> TRUE .)
    RPARENT         reduce using rule 57 (condition -> TRUE .)
    SEMICOLON       reduce using rule 57 (condition -> TRUE .)


state 58

    (58) condition -> FALSE .

    LPARENT         reduce using rule 58 (condition -> FALSE .)
    RPARENT         reduce using rule 58 (condition -> FALSE .)
    SEMICOLON       reduce using rule 58 (condition -> FALSE .)


state 59

    (59) condition -> istrue .

    LPARENT         reduce using rule 59 (condition -> istrue .)
    RPARENT         reduce using rule 59 (condition -> istrue .)
    SEMICOLON       reduce using rule 59 (condition -> istrue .)


state 60

    (46) casebody -> CASE WHEN . LPARENT condition RPARENT THEN LPARENT instructions RPARENT

    LPARENT         shift and go to state 103


state 61

    (48) casebody -> CASE ID . innercasebody
    (49) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (50) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 104
    empty                          shift and go to state 106

state 62

    (60) istrue -> VERT LPARENT . ID RPARENT

    ID              shift and go to state 107


state 63

    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT . SEMICOLON procedures

    SEMICOLON       shift and go to state 108


state 64

    (2) principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .

    PROCEDURE       reduce using rule 2 (principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    $end            reduce using rule 2 (principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)


state 65

    (6) instructions -> NEW ID LPARENT . datatype COMMA value RPARENT SEMICOLON instructions
    (23) datatype -> . NUMVAL
    (24) datatype -> . BOOLVAL

    NUMVAL          shift and go to state 110
    BOOLVAL         shift and go to state 111

    datatype                       shift and go to state 109

state 66

    (7) instructions -> VALUES LPARENT ID . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 112


state 67

    (8) instructions -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 113


state 68

    (9) instructions -> ALTERB LPARENT value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 114


state 69

    (25) value -> NUMBER .

    RPARENT         reduce using rule 25 (value -> NUMBER .)


state 70

    (26) value -> TRUE .

    RPARENT         reduce using rule 26 (value -> TRUE .)


state 71

    (27) value -> FALSE .

    RPARENT         reduce using rule 27 (value -> FALSE .)


state 72

    (28) value -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT

    LPARENT         shift and go to state 115


state 73

    (10) instructions -> MOVR SEMICOLON instructions .

    RPARENT         reduce using rule 10 (instructions -> MOVR SEMICOLON instructions .)
    BREAK           reduce using rule 10 (instructions -> MOVR SEMICOLON instructions .)


state 74

    (11) instructions -> MOVL SEMICOLON instructions .

    RPARENT         reduce using rule 11 (instructions -> MOVL SEMICOLON instructions .)
    BREAK           reduce using rule 11 (instructions -> MOVL SEMICOLON instructions .)


state 75

    (12) instructions -> HAMMER LPARENT position . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 116


state 76

    (39) position -> NORTH .

    RPARENT         reduce using rule 39 (position -> NORTH .)


state 77

    (40) position -> SOUTH .

    RPARENT         reduce using rule 40 (position -> SOUTH .)


state 78

    (41) position -> EAST .

    RPARENT         reduce using rule 41 (position -> EAST .)


state 79

    (42) position -> WEST .

    RPARENT         reduce using rule 42 (position -> WEST .)


state 80

    (13) instructions -> STOP SEMICOLON instructions .

    RPARENT         reduce using rule 13 (instructions -> STOP SEMICOLON instructions .)
    BREAK           reduce using rule 13 (instructions -> STOP SEMICOLON instructions .)


state 81

    (14) instructions -> REPEAT LPARENT repeat_instructions . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 117


state 82

    (43) repeat_instructions -> instructions . BREAK

    BREAK           shift and go to state 118


state 83

    (15) instructions -> untilbody SEMICOLON instructions .

    RPARENT         reduce using rule 15 (instructions -> untilbody SEMICOLON instructions .)
    BREAK           reduce using rule 15 (instructions -> untilbody SEMICOLON instructions .)


state 84

    (16) instructions -> whilebody SEMICOLON instructions .

    RPARENT         reduce using rule 16 (instructions -> whilebody SEMICOLON instructions .)
    BREAK           reduce using rule 16 (instructions -> whilebody SEMICOLON instructions .)


state 85

    (17) instructions -> casebody SEMICOLON instructions .

    RPARENT         reduce using rule 17 (instructions -> casebody SEMICOLON instructions .)
    BREAK           reduce using rule 17 (instructions -> casebody SEMICOLON instructions .)


state 86

    (47) casebody -> casebody ELSE LPARENT . instructions RPARENT
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    casebody                       shift and go to state 25
    instructions                   shift and go to state 119
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 87

    (18) instructions -> PRINT LPARENT printstart . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 120


state 88

    (61) printstart -> startvalue . printvalues
    (62) printvalues -> . COMMA STRING printvalues
    (63) printvalues -> . COMMA ID printvalues
    (64) printvalues -> . empty
    (67) empty -> .

    COMMA           shift and go to state 122
    RPARENT         reduce using rule 67 (empty -> .)

    printvalues                    shift and go to state 121
    empty                          shift and go to state 123

state 89

    (65) startvalue -> STRING .

    COMMA           reduce using rule 65 (startvalue -> STRING .)
    RPARENT         reduce using rule 65 (startvalue -> STRING .)


state 90

    (66) startvalue -> ID .

    COMMA           reduce using rule 66 (startvalue -> ID .)
    RPARENT         reduce using rule 66 (startvalue -> ID .)


state 91

    (19) instructions -> istrue SEMICOLON instructions .

    RPARENT         reduce using rule 19 (instructions -> istrue SEMICOLON instructions .)
    BREAK           reduce using rule 19 (instructions -> istrue SEMICOLON instructions .)


state 92

    (20) instructions -> CALL LPARENT ID . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 124


state 93

    (44) untilbody -> UNTIL LPARENT instructions . RPARENT condition

    RPARENT         shift and go to state 125


state 94

    (45) whilebody -> WHILE condition LPARENT . instructions RPARENT
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 126
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 95

    (53) condition -> ID comparator . ID
    (54) condition -> ID comparator . NUMBER

    ID              shift and go to state 127
    NUMBER          shift and go to state 128


state 96

    (33) comparator -> GT .

    ID              reduce using rule 33 (comparator -> GT .)
    NUMBER          reduce using rule 33 (comparator -> GT .)


state 97

    (34) comparator -> LT .

    ID              reduce using rule 34 (comparator -> LT .)
    NUMBER          reduce using rule 34 (comparator -> LT .)


state 98

    (35) comparator -> GET .

    ID              reduce using rule 35 (comparator -> GET .)
    NUMBER          reduce using rule 35 (comparator -> GET .)


state 99

    (36) comparator -> LET .

    ID              reduce using rule 36 (comparator -> LET .)
    NUMBER          reduce using rule 36 (comparator -> LET .)


state 100

    (37) comparator -> EQ .

    ID              reduce using rule 37 (comparator -> EQ .)
    NUMBER          reduce using rule 37 (comparator -> EQ .)


state 101

    (38) comparator -> DT .

    ID              reduce using rule 38 (comparator -> DT .)
    NUMBER          reduce using rule 38 (comparator -> DT .)


state 102

    (55) condition -> NUMBER comparator . ID
    (56) condition -> NUMBER comparator . NUMBER

    ID              shift and go to state 130
    NUMBER          shift and go to state 129


state 103

    (46) casebody -> CASE WHEN LPARENT . condition RPARENT THEN LPARENT instructions RPARENT
    (53) condition -> . ID comparator ID
    (54) condition -> . ID comparator NUMBER
    (55) condition -> . NUMBER comparator ID
    (56) condition -> . NUMBER comparator NUMBER
    (57) condition -> . TRUE
    (58) condition -> . FALSE
    (59) condition -> . istrue
    (60) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 55
    NUMBER          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    VERT            shift and go to state 34

    condition                      shift and go to state 131
    istrue                         shift and go to state 59

state 104

    (48) casebody -> CASE ID innercasebody .

    SEMICOLON       reduce using rule 48 (casebody -> CASE ID innercasebody .)
    ELSE            reduce using rule 48 (casebody -> CASE ID innercasebody .)


state 105

    (49) innercasebody -> WHEN . NUMBER THEN LPARENT instructions RPARENT innercasebody
    (50) innercasebody -> WHEN . TRUE THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> WHEN . FALSE THEN LPARENT instructions RPARENT innercasebody

    NUMBER          shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134


state 106

    (52) innercasebody -> empty .

    SEMICOLON       reduce using rule 52 (innercasebody -> empty .)
    ELSE            reduce using rule 52 (innercasebody -> empty .)


state 107

    (60) istrue -> VERT LPARENT ID . RPARENT

    RPARENT         shift and go to state 135


state 108

    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON . procedures
    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
    (5) procedures -> . empty
    (67) empty -> .

  ! shift/reduce conflict for PROCEDURE resolved as shift
    PROCEDURE       shift and go to state 4
    PRINCIPAL       reduce using rule 67 (empty -> .)
    $end            reduce using rule 67 (empty -> .)

  ! PROCEDURE       [ reduce using rule 67 (empty -> .) ]

    procedures                     shift and go to state 136
    empty                          shift and go to state 5

state 109

    (6) instructions -> NEW ID LPARENT datatype . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 137


state 110

    (23) datatype -> NUMVAL .

    COMMA           reduce using rule 23 (datatype -> NUMVAL .)


state 111

    (24) datatype -> BOOLVAL .

    COMMA           reduce using rule 24 (datatype -> BOOLVAL .)


state 112

    (7) instructions -> VALUES LPARENT ID COMMA . value RPARENT SEMICOLON instructions
    (25) value -> . NUMBER
    (26) value -> . TRUE
    (27) value -> . FALSE
    (28) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    ALTER           shift and go to state 72

    value                          shift and go to state 138

state 113

    (8) instructions -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT SEMICOLON instructions
    (29) operator -> . ADD
    (30) operator -> . SUB
    (31) operator -> . MUL
    (32) operator -> . DIV

    ADD             shift and go to state 140
    SUB             shift and go to state 141
    MUL             shift and go to state 142
    DIV             shift and go to state 143

    operator                       shift and go to state 139

state 114

    (9) instructions -> ALTERB LPARENT value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 144


state 115

    (28) value -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT

    ID              shift and go to state 145


state 116

    (12) instructions -> HAMMER LPARENT position RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 146


state 117

    (14) instructions -> REPEAT LPARENT repeat_instructions RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 147


state 118

    (43) repeat_instructions -> instructions BREAK .

    RPARENT         reduce using rule 43 (repeat_instructions -> instructions BREAK .)


state 119

    (47) casebody -> casebody ELSE LPARENT instructions . RPARENT

    RPARENT         shift and go to state 148


state 120

    (18) instructions -> PRINT LPARENT printstart RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 149


state 121

    (61) printstart -> startvalue printvalues .

    RPARENT         reduce using rule 61 (printstart -> startvalue printvalues .)


state 122

    (62) printvalues -> COMMA . STRING printvalues
    (63) printvalues -> COMMA . ID printvalues

    STRING          shift and go to state 150
    ID              shift and go to state 151


state 123

    (64) printvalues -> empty .

    RPARENT         reduce using rule 64 (printvalues -> empty .)


state 124

    (20) instructions -> CALL LPARENT ID RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 152


state 125

    (44) untilbody -> UNTIL LPARENT instructions RPARENT . condition
    (53) condition -> . ID comparator ID
    (54) condition -> . ID comparator NUMBER
    (55) condition -> . NUMBER comparator ID
    (56) condition -> . NUMBER comparator NUMBER
    (57) condition -> . TRUE
    (58) condition -> . FALSE
    (59) condition -> . istrue
    (60) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 55
    NUMBER          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    VERT            shift and go to state 34

    condition                      shift and go to state 153
    istrue                         shift and go to state 59

state 126

    (45) whilebody -> WHILE condition LPARENT instructions . RPARENT

    RPARENT         shift and go to state 154


state 127

    (53) condition -> ID comparator ID .

    LPARENT         reduce using rule 53 (condition -> ID comparator ID .)
    RPARENT         reduce using rule 53 (condition -> ID comparator ID .)
    SEMICOLON       reduce using rule 53 (condition -> ID comparator ID .)


state 128

    (54) condition -> ID comparator NUMBER .

    LPARENT         reduce using rule 54 (condition -> ID comparator NUMBER .)
    RPARENT         reduce using rule 54 (condition -> ID comparator NUMBER .)
    SEMICOLON       reduce using rule 54 (condition -> ID comparator NUMBER .)


state 129

    (56) condition -> NUMBER comparator NUMBER .

    LPARENT         reduce using rule 56 (condition -> NUMBER comparator NUMBER .)
    RPARENT         reduce using rule 56 (condition -> NUMBER comparator NUMBER .)
    SEMICOLON       reduce using rule 56 (condition -> NUMBER comparator NUMBER .)


state 130

    (55) condition -> NUMBER comparator ID .

    LPARENT         reduce using rule 55 (condition -> NUMBER comparator ID .)
    RPARENT         reduce using rule 55 (condition -> NUMBER comparator ID .)
    SEMICOLON       reduce using rule 55 (condition -> NUMBER comparator ID .)


state 131

    (46) casebody -> CASE WHEN LPARENT condition . RPARENT THEN LPARENT instructions RPARENT

    RPARENT         shift and go to state 155


state 132

    (49) innercasebody -> WHEN NUMBER . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 156


state 133

    (50) innercasebody -> WHEN TRUE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 157


state 134

    (51) innercasebody -> WHEN FALSE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 158


state 135

    (60) istrue -> VERT LPARENT ID RPARENT .

    SEMICOLON       reduce using rule 60 (istrue -> VERT LPARENT ID RPARENT .)
    LPARENT         reduce using rule 60 (istrue -> VERT LPARENT ID RPARENT .)
    RPARENT         reduce using rule 60 (istrue -> VERT LPARENT ID RPARENT .)


state 136

    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .

    PRINCIPAL       reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)
    PROCEDURE       reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)
    $end            reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)


state 137

    (6) instructions -> NEW ID LPARENT datatype COMMA . value RPARENT SEMICOLON instructions
    (25) value -> . NUMBER
    (26) value -> . TRUE
    (27) value -> . FALSE
    (28) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    ALTER           shift and go to state 72

    value                          shift and go to state 159

state 138

    (7) instructions -> VALUES LPARENT ID COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 160


state 139

    (8) instructions -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 161


state 140

    (29) operator -> ADD .

    COMMA           reduce using rule 29 (operator -> ADD .)


state 141

    (30) operator -> SUB .

    COMMA           reduce using rule 30 (operator -> SUB .)


state 142

    (31) operator -> MUL .

    COMMA           reduce using rule 31 (operator -> MUL .)


state 143

    (32) operator -> DIV .

    COMMA           reduce using rule 32 (operator -> DIV .)


state 144

    (9) instructions -> ALTERB LPARENT value RPARENT SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 162
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 145

    (28) value -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT

    COMMA           shift and go to state 163


state 146

    (12) instructions -> HAMMER LPARENT position RPARENT SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 164
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 147

    (14) instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 165
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 148

    (47) casebody -> casebody ELSE LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 47 (casebody -> casebody ELSE LPARENT instructions RPARENT .)
    ELSE            reduce using rule 47 (casebody -> casebody ELSE LPARENT instructions RPARENT .)


state 149

    (18) instructions -> PRINT LPARENT printstart RPARENT SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 166
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 150

    (62) printvalues -> COMMA STRING . printvalues
    (62) printvalues -> . COMMA STRING printvalues
    (63) printvalues -> . COMMA ID printvalues
    (64) printvalues -> . empty
    (67) empty -> .

    COMMA           shift and go to state 122
    RPARENT         reduce using rule 67 (empty -> .)

    printvalues                    shift and go to state 167
    empty                          shift and go to state 123

state 151

    (63) printvalues -> COMMA ID . printvalues
    (62) printvalues -> . COMMA STRING printvalues
    (63) printvalues -> . COMMA ID printvalues
    (64) printvalues -> . empty
    (67) empty -> .

    COMMA           shift and go to state 122
    RPARENT         reduce using rule 67 (empty -> .)

    printvalues                    shift and go to state 168
    empty                          shift and go to state 123

state 152

    (20) instructions -> CALL LPARENT ID RPARENT SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 169
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 153

    (44) untilbody -> UNTIL LPARENT instructions RPARENT condition .

    SEMICOLON       reduce using rule 44 (untilbody -> UNTIL LPARENT instructions RPARENT condition .)


state 154

    (45) whilebody -> WHILE condition LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 45 (whilebody -> WHILE condition LPARENT instructions RPARENT .)


state 155

    (46) casebody -> CASE WHEN LPARENT condition RPARENT . THEN LPARENT instructions RPARENT

    THEN            shift and go to state 170


state 156

    (49) innercasebody -> WHEN NUMBER THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 171


state 157

    (50) innercasebody -> WHEN TRUE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 172


state 158

    (51) innercasebody -> WHEN FALSE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 173


state 159

    (6) instructions -> NEW ID LPARENT datatype COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 174


state 160

    (7) instructions -> VALUES LPARENT ID COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 175


state 161

    (8) instructions -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT SEMICOLON instructions
    (25) value -> . NUMBER
    (26) value -> . TRUE
    (27) value -> . FALSE
    (28) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    ALTER           shift and go to state 72

    value                          shift and go to state 176

state 162

    (9) instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 9 (instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 9 (instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .)


state 163

    (28) value -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT
    (29) operator -> . ADD
    (30) operator -> . SUB
    (31) operator -> . MUL
    (32) operator -> . DIV

    ADD             shift and go to state 140
    SUB             shift and go to state 141
    MUL             shift and go to state 142
    DIV             shift and go to state 143

    operator                       shift and go to state 177

state 164

    (12) instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 12 (instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 12 (instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .)


state 165

    (14) instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 14 (instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 14 (instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .)


state 166

    (18) instructions -> PRINT LPARENT printstart RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 18 (instructions -> PRINT LPARENT printstart RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 18 (instructions -> PRINT LPARENT printstart RPARENT SEMICOLON instructions .)


state 167

    (62) printvalues -> COMMA STRING printvalues .

    RPARENT         reduce using rule 62 (printvalues -> COMMA STRING printvalues .)


state 168

    (63) printvalues -> COMMA ID printvalues .

    RPARENT         reduce using rule 63 (printvalues -> COMMA ID printvalues .)


state 169

    (20) instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 20 (instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 20 (instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .)


state 170

    (46) casebody -> CASE WHEN LPARENT condition RPARENT THEN . LPARENT instructions RPARENT

    LPARENT         shift and go to state 178


state 171

    (49) innercasebody -> WHEN NUMBER THEN LPARENT . instructions RPARENT innercasebody
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 179
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 172

    (50) innercasebody -> WHEN TRUE THEN LPARENT . instructions RPARENT innercasebody
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 180
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 173

    (51) innercasebody -> WHEN FALSE THEN LPARENT . instructions RPARENT innercasebody
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 181
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 174

    (6) instructions -> NEW ID LPARENT datatype COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 182


state 175

    (7) instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 183
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 176

    (8) instructions -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 184


state 177

    (28) value -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT

    COMMA           shift and go to state 185


state 178

    (46) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT . instructions RPARENT
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 186
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 179

    (49) innercasebody -> WHEN NUMBER THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 187


state 180

    (50) innercasebody -> WHEN TRUE THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 188


state 181

    (51) innercasebody -> WHEN FALSE THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 189


state 182

    (6) instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 190
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 183

    (7) instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 7 (instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 7 (instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .)


state 184

    (8) instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 191


state 185

    (28) value -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT
    (25) value -> . NUMBER
    (26) value -> . TRUE
    (27) value -> . FALSE
    (28) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    ALTER           shift and go to state 72

    value                          shift and go to state 192

state 186

    (46) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions . RPARENT

    RPARENT         shift and go to state 193


state 187

    (49) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT . innercasebody
    (49) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (50) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 194
    empty                          shift and go to state 106

state 188

    (50) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT . innercasebody
    (49) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (50) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 195
    empty                          shift and go to state 106

state 189

    (51) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT . innercasebody
    (49) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (50) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 196
    empty                          shift and go to state 106

state 190

    (6) instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 6 (instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 6 (instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .)


state 191

    (8) instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON . instructions
    (6) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (10) instructions -> . MOVR SEMICOLON instructions
    (11) instructions -> . MOVL SEMICOLON instructions
    (12) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (13) instructions -> . STOP SEMICOLON instructions
    (14) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (15) instructions -> . untilbody SEMICOLON instructions
    (16) instructions -> . whilebody SEMICOLON instructions
    (17) instructions -> . casebody SEMICOLON instructions
    (18) instructions -> . PRINT LPARENT printstart RPARENT SEMICOLON instructions
    (19) instructions -> . istrue SEMICOLON instructions
    (20) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (21) instructions -> . COMMENT
    (22) instructions -> . empty
    (44) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (45) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (46) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (48) casebody -> . CASE ID innercasebody
    (60) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 14
    VALUES          shift and go to state 15
    ALTER           shift and go to state 16
    ALTERB          shift and go to state 17
    MOVR            shift and go to state 18
    MOVL            shift and go to state 19
    HAMMER          shift and go to state 20
    STOP            shift and go to state 21
    REPEAT          shift and go to state 22
    PRINT           shift and go to state 26
    CALL            shift and go to state 28
    COMMENT         shift and go to state 29
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 197
    untilbody                      shift and go to state 23
    whilebody                      shift and go to state 24
    casebody                       shift and go to state 25
    istrue                         shift and go to state 27
    empty                          shift and go to state 30

state 192

    (28) value -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT

    RPARENT         shift and go to state 198


state 193

    (46) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 46 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)
    ELSE            reduce using rule 46 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)


state 194

    (49) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 49 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 49 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)


state 195

    (50) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 50 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 50 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)


state 196

    (51) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 51 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 51 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)


state 197

    (8) instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 8 (instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 8 (instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions .)


state 198

    (28) value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .

    RPARENT         reduce using rule 28 (value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PROCEDURE in state 2 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 108 resolved as shift
