Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> COMMENT bodyprogram
Rule 2     bodyprogram -> procedure bodyprogram
Rule 3     bodyprogram -> procedure
Rule 4     bodyprogram -> empty
Rule 5     procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON
Rule 6     procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON
Rule 7     instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
Rule 8     instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
Rule 9     instructions -> alterbody SEMICOLON instructions
Rule 10    instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions
Rule 11    instructions -> MOVR SEMICOLON instructions
Rule 12    instructions -> MOVL SEMICOLON instructions
Rule 13    instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions
Rule 14    instructions -> STOP SEMICOLON instructions
Rule 15    instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
Rule 16    instructions -> untilbody SEMICOLON instructions
Rule 17    instructions -> whilebody SEMICOLON instructions
Rule 18    instructions -> casebody SEMICOLON instructions
Rule 19    instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions
Rule 20    instructions -> istrue SEMICOLON instructions
Rule 21    instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions
Rule 22    instructions -> empty
Rule 23    alterbody -> ALTER LPARENT ID COMMA operator COMMA value RPARENT
Rule 24    datatype -> NUMVAL
Rule 25    datatype -> BOOLVAL
Rule 26    value -> NUMBER
Rule 27    value -> TRUE
Rule 28    value -> FALSE
Rule 29    value -> alterbody
Rule 30    operator -> ADD
Rule 31    operator -> SUB
Rule 32    operator -> MUL
Rule 33    operator -> DIV
Rule 34    comparator -> GT
Rule 35    comparator -> LT
Rule 36    comparator -> GET
Rule 37    comparator -> LET
Rule 38    comparator -> EQ
Rule 39    comparator -> DT
Rule 40    position -> NORTH
Rule 41    position -> SOUTH
Rule 42    position -> EAST
Rule 43    position -> WEST
Rule 44    repeat_instructions -> instructions BREAK
Rule 45    untilbody -> UNTIL LPARENT instructions RPARENT condition
Rule 46    whilebody -> WHILE condition LPARENT instructions RPARENT
Rule 47    casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
Rule 48    casebody -> casebody ELSE LPARENT instructions RPARENT
Rule 49    casebody -> CASE ID innercasebody
Rule 50    innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
Rule 51    innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
Rule 52    innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
Rule 53    innercasebody -> empty
Rule 54    condition -> ID comparator ID
Rule 55    condition -> ID comparator NUMBER
Rule 56    condition -> NUMBER comparator ID
Rule 57    condition -> NUMBER comparator NUMBER
Rule 58    condition -> TRUE
Rule 59    condition -> FALSE
Rule 60    condition -> istrue
Rule 61    istrue -> VERT LPARENT ID RPARENT
Rule 62    printvalues -> STRING printvalues
Rule 63    printvalues -> COMMA ID printvalues
Rule 64    printvalues -> empty
Rule 65    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 30
ALTER                : 23
ALTERB               : 10
BOOLVAL              : 25
BREAK                : 44
CALL                 : 21
CASE                 : 47 49
COMMA                : 7 8 23 23 63
COMMENT              : 1
DIV                  : 33
DT                   : 39
EAST                 : 42
ELSE                 : 48
EQ                   : 38
FALSE                : 28 52 59
GET                  : 36
GT                   : 34
HAMMER               : 13
ID                   : 6 7 8 21 23 49 54 54 55 56 61 63
LET                  : 37
LPARENT              : 5 6 7 8 10 13 15 19 21 23 45 46 47 47 48 50 51 52 61
LT                   : 35
MOVL                 : 12
MOVR                 : 11
MUL                  : 32
NEW                  : 7
NORTH                : 40
NUMBER               : 26 50 55 56 57 57
NUMVAL               : 24
PRINCIPAL            : 5
PRINT                : 19
PROCEDURE            : 6
REPEAT               : 15
RPARENT              : 5 6 7 8 10 13 15 19 21 23 45 46 47 47 48 50 51 52 61
SEMICOLON            : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
SOUTH                : 41
STOP                 : 14
STRING               : 62
SUB                  : 31
THEN                 : 47 50 51 52
TRUE                 : 27 51 58
UNTIL                : 45
VALUES               : 8
VERT                 : 61
WEST                 : 43
WHEN                 : 47 50 51 52
WHILE                : 46
error                : 

Nonterminals, with rules where they appear

alterbody            : 9 29
bodyprogram          : 1 2
casebody             : 18 48
comparator           : 54 55 56 57
condition            : 45 46 47
datatype             : 7
empty                : 4 22 53 64
innercasebody        : 49 50 51 52
instructions         : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 44 45 46 47 48 50 51 52
istrue               : 20 60
operator             : 23
position             : 13
printvalues          : 19 62 63
procedure            : 2 3
program              : 0
repeat_instructions  : 15
untilbody            : 16
value                : 7 8 10 23
whilebody            : 17

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . COMMENT bodyprogram

    COMMENT         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> COMMENT . bodyprogram
    (2) bodyprogram -> . procedure bodyprogram
    (3) bodyprogram -> . procedure
    (4) bodyprogram -> . empty
    (5) procedure -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON
    (6) procedure -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON
    (65) empty -> .

    PRINCIPAL       shift and go to state 6
    PROCEDURE       shift and go to state 7
    $end            reduce using rule 65 (empty -> .)

    bodyprogram                    shift and go to state 3
    procedure                      shift and go to state 4
    empty                          shift and go to state 5

state 3

    (1) program -> COMMENT bodyprogram .

    $end            reduce using rule 1 (program -> COMMENT bodyprogram .)


state 4

    (2) bodyprogram -> procedure . bodyprogram
    (3) bodyprogram -> procedure .
    (2) bodyprogram -> . procedure bodyprogram
    (3) bodyprogram -> . procedure
    (4) bodyprogram -> . empty
    (5) procedure -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON
    (6) procedure -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON
    (65) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 3 (bodyprogram -> procedure .)
    $end            reduce using rule 3 (bodyprogram -> procedure .)
    PRINCIPAL       shift and go to state 6
    PROCEDURE       shift and go to state 7

  ! $end            [ reduce using rule 65 (empty -> .) ]

    procedure                      shift and go to state 4
    bodyprogram                    shift and go to state 8
    empty                          shift and go to state 5

state 5

    (4) bodyprogram -> empty .

    $end            reduce using rule 4 (bodyprogram -> empty .)


state 6

    (5) procedure -> PRINCIPAL . LPARENT instructions RPARENT SEMICOLON

    LPARENT         shift and go to state 9


state 7

    (6) procedure -> PROCEDURE . ID LPARENT instructions RPARENT SEMICOLON

    ID              shift and go to state 10


state 8

    (2) bodyprogram -> procedure bodyprogram .

    $end            reduce using rule 2 (bodyprogram -> procedure bodyprogram .)


state 9

    (5) procedure -> PRINCIPAL LPARENT . instructions RPARENT SEMICOLON
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 11
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 10

    (6) procedure -> PROCEDURE ID . LPARENT instructions RPARENT SEMICOLON

    LPARENT         shift and go to state 33


state 11

    (5) procedure -> PRINCIPAL LPARENT instructions . RPARENT SEMICOLON

    RPARENT         shift and go to state 34


state 12

    (7) instructions -> NEW . ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 35


state 13

    (8) instructions -> VALUES . LPARENT ID COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 36


state 14

    (9) instructions -> alterbody . SEMICOLON instructions

    SEMICOLON       shift and go to state 37


state 15

    (10) instructions -> ALTERB . LPARENT value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 38


state 16

    (11) instructions -> MOVR . SEMICOLON instructions

    SEMICOLON       shift and go to state 39


state 17

    (12) instructions -> MOVL . SEMICOLON instructions

    SEMICOLON       shift and go to state 40


state 18

    (13) instructions -> HAMMER . LPARENT position RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 41


state 19

    (14) instructions -> STOP . SEMICOLON instructions

    SEMICOLON       shift and go to state 42


state 20

    (15) instructions -> REPEAT . LPARENT repeat_instructions RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 43


state 21

    (16) instructions -> untilbody . SEMICOLON instructions

    SEMICOLON       shift and go to state 44


state 22

    (17) instructions -> whilebody . SEMICOLON instructions

    SEMICOLON       shift and go to state 45


state 23

    (18) instructions -> casebody . SEMICOLON instructions
    (48) casebody -> casebody . ELSE LPARENT instructions RPARENT

    SEMICOLON       shift and go to state 46
    ELSE            shift and go to state 47


state 24

    (19) instructions -> PRINT . LPARENT printvalues RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 48


state 25

    (20) instructions -> istrue . SEMICOLON instructions

    SEMICOLON       shift and go to state 49


state 26

    (21) instructions -> CALL . LPARENT ID RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 50


state 27

    (22) instructions -> empty .

    RPARENT         reduce using rule 22 (instructions -> empty .)
    BREAK           reduce using rule 22 (instructions -> empty .)


state 28

    (23) alterbody -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT

    LPARENT         shift and go to state 51


state 29

    (45) untilbody -> UNTIL . LPARENT instructions RPARENT condition

    LPARENT         shift and go to state 52


state 30

    (46) whilebody -> WHILE . condition LPARENT instructions RPARENT
    (54) condition -> . ID comparator ID
    (55) condition -> . ID comparator NUMBER
    (56) condition -> . NUMBER comparator ID
    (57) condition -> . NUMBER comparator NUMBER
    (58) condition -> . TRUE
    (59) condition -> . FALSE
    (60) condition -> . istrue
    (61) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 54
    NUMBER          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    VERT            shift and go to state 32

    condition                      shift and go to state 53
    istrue                         shift and go to state 58

state 31

    (47) casebody -> CASE . WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> CASE . ID innercasebody

    WHEN            shift and go to state 59
    ID              shift and go to state 60


state 32

    (61) istrue -> VERT . LPARENT ID RPARENT

    LPARENT         shift and go to state 61


state 33

    (6) procedure -> PROCEDURE ID LPARENT . instructions RPARENT SEMICOLON
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 62
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 34

    (5) procedure -> PRINCIPAL LPARENT instructions RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 63


state 35

    (7) instructions -> NEW ID . LPARENT datatype COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 64


state 36

    (8) instructions -> VALUES LPARENT . ID COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 65


state 37

    (9) instructions -> alterbody SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    alterbody                      shift and go to state 14
    instructions                   shift and go to state 66
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 38

    (10) instructions -> ALTERB LPARENT . value RPARENT SEMICOLON instructions
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . alterbody
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 68
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    ALTER           shift and go to state 28

    value                          shift and go to state 67
    alterbody                      shift and go to state 71

state 39

    (11) instructions -> MOVR SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 72
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 40

    (12) instructions -> MOVL SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 73
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 41

    (13) instructions -> HAMMER LPARENT . position RPARENT SEMICOLON instructions
    (40) position -> . NORTH
    (41) position -> . SOUTH
    (42) position -> . EAST
    (43) position -> . WEST

    NORTH           shift and go to state 75
    SOUTH           shift and go to state 76
    EAST            shift and go to state 77
    WEST            shift and go to state 78

    position                       shift and go to state 74

state 42

    (14) instructions -> STOP SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 79
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 43

    (15) instructions -> REPEAT LPARENT . repeat_instructions RPARENT SEMICOLON instructions
    (44) repeat_instructions -> . instructions BREAK
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    BREAK           reduce using rule 65 (empty -> .)

    repeat_instructions            shift and go to state 80
    instructions                   shift and go to state 81
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 44

    (16) instructions -> untilbody SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    untilbody                      shift and go to state 21
    instructions                   shift and go to state 82
    alterbody                      shift and go to state 14
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 45

    (17) instructions -> whilebody SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    whilebody                      shift and go to state 22
    instructions                   shift and go to state 83
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 46

    (18) instructions -> casebody SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    casebody                       shift and go to state 23
    instructions                   shift and go to state 84
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 47

    (48) casebody -> casebody ELSE . LPARENT instructions RPARENT

    LPARENT         shift and go to state 85


state 48

    (19) instructions -> PRINT LPARENT . printvalues RPARENT SEMICOLON instructions
    (62) printvalues -> . STRING printvalues
    (63) printvalues -> . COMMA ID printvalues
    (64) printvalues -> . empty
    (65) empty -> .

    STRING          shift and go to state 87
    COMMA           shift and go to state 88
    RPARENT         reduce using rule 65 (empty -> .)

    printvalues                    shift and go to state 86
    empty                          shift and go to state 89

state 49

    (20) instructions -> istrue SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    istrue                         shift and go to state 25
    instructions                   shift and go to state 90
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    empty                          shift and go to state 27

state 50

    (21) instructions -> CALL LPARENT . ID RPARENT SEMICOLON instructions

    ID              shift and go to state 91


state 51

    (23) alterbody -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT

    ID              shift and go to state 92


state 52

    (45) untilbody -> UNTIL LPARENT . instructions RPARENT condition
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 93
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 53

    (46) whilebody -> WHILE condition . LPARENT instructions RPARENT

    LPARENT         shift and go to state 94


state 54

    (54) condition -> ID . comparator ID
    (55) condition -> ID . comparator NUMBER
    (34) comparator -> . GT
    (35) comparator -> . LT
    (36) comparator -> . GET
    (37) comparator -> . LET
    (38) comparator -> . EQ
    (39) comparator -> . DT

    GT              shift and go to state 96
    LT              shift and go to state 97
    GET             shift and go to state 98
    LET             shift and go to state 99
    EQ              shift and go to state 100
    DT              shift and go to state 101

    comparator                     shift and go to state 95

state 55

    (56) condition -> NUMBER . comparator ID
    (57) condition -> NUMBER . comparator NUMBER
    (34) comparator -> . GT
    (35) comparator -> . LT
    (36) comparator -> . GET
    (37) comparator -> . LET
    (38) comparator -> . EQ
    (39) comparator -> . DT

    GT              shift and go to state 96
    LT              shift and go to state 97
    GET             shift and go to state 98
    LET             shift and go to state 99
    EQ              shift and go to state 100
    DT              shift and go to state 101

    comparator                     shift and go to state 102

state 56

    (58) condition -> TRUE .

    LPARENT         reduce using rule 58 (condition -> TRUE .)
    RPARENT         reduce using rule 58 (condition -> TRUE .)
    SEMICOLON       reduce using rule 58 (condition -> TRUE .)


state 57

    (59) condition -> FALSE .

    LPARENT         reduce using rule 59 (condition -> FALSE .)
    RPARENT         reduce using rule 59 (condition -> FALSE .)
    SEMICOLON       reduce using rule 59 (condition -> FALSE .)


state 58

    (60) condition -> istrue .

    LPARENT         reduce using rule 60 (condition -> istrue .)
    RPARENT         reduce using rule 60 (condition -> istrue .)
    SEMICOLON       reduce using rule 60 (condition -> istrue .)


state 59

    (47) casebody -> CASE WHEN . LPARENT condition RPARENT THEN LPARENT instructions RPARENT

    LPARENT         shift and go to state 103


state 60

    (49) casebody -> CASE ID . innercasebody
    (50) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . empty
    (65) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 65 (empty -> .)
    ELSE            reduce using rule 65 (empty -> .)

    innercasebody                  shift and go to state 104
    empty                          shift and go to state 106

state 61

    (61) istrue -> VERT LPARENT . ID RPARENT

    ID              shift and go to state 107


state 62

    (6) procedure -> PROCEDURE ID LPARENT instructions . RPARENT SEMICOLON

    RPARENT         shift and go to state 108


state 63

    (5) procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .

    PRINCIPAL       reduce using rule 5 (procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    PROCEDURE       reduce using rule 5 (procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    $end            reduce using rule 5 (procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)


state 64

    (7) instructions -> NEW ID LPARENT . datatype COMMA value RPARENT SEMICOLON instructions
    (24) datatype -> . NUMVAL
    (25) datatype -> . BOOLVAL

    NUMVAL          shift and go to state 110
    BOOLVAL         shift and go to state 111

    datatype                       shift and go to state 109

state 65

    (8) instructions -> VALUES LPARENT ID . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 112


state 66

    (9) instructions -> alterbody SEMICOLON instructions .

    RPARENT         reduce using rule 9 (instructions -> alterbody SEMICOLON instructions .)
    BREAK           reduce using rule 9 (instructions -> alterbody SEMICOLON instructions .)


state 67

    (10) instructions -> ALTERB LPARENT value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 113


state 68

    (26) value -> NUMBER .

    RPARENT         reduce using rule 26 (value -> NUMBER .)


state 69

    (27) value -> TRUE .

    RPARENT         reduce using rule 27 (value -> TRUE .)


state 70

    (28) value -> FALSE .

    RPARENT         reduce using rule 28 (value -> FALSE .)


state 71

    (29) value -> alterbody .

    RPARENT         reduce using rule 29 (value -> alterbody .)


state 72

    (11) instructions -> MOVR SEMICOLON instructions .

    RPARENT         reduce using rule 11 (instructions -> MOVR SEMICOLON instructions .)
    BREAK           reduce using rule 11 (instructions -> MOVR SEMICOLON instructions .)


state 73

    (12) instructions -> MOVL SEMICOLON instructions .

    RPARENT         reduce using rule 12 (instructions -> MOVL SEMICOLON instructions .)
    BREAK           reduce using rule 12 (instructions -> MOVL SEMICOLON instructions .)


state 74

    (13) instructions -> HAMMER LPARENT position . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 114


state 75

    (40) position -> NORTH .

    RPARENT         reduce using rule 40 (position -> NORTH .)


state 76

    (41) position -> SOUTH .

    RPARENT         reduce using rule 41 (position -> SOUTH .)


state 77

    (42) position -> EAST .

    RPARENT         reduce using rule 42 (position -> EAST .)


state 78

    (43) position -> WEST .

    RPARENT         reduce using rule 43 (position -> WEST .)


state 79

    (14) instructions -> STOP SEMICOLON instructions .

    RPARENT         reduce using rule 14 (instructions -> STOP SEMICOLON instructions .)
    BREAK           reduce using rule 14 (instructions -> STOP SEMICOLON instructions .)


state 80

    (15) instructions -> REPEAT LPARENT repeat_instructions . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 115


state 81

    (44) repeat_instructions -> instructions . BREAK

    BREAK           shift and go to state 116


state 82

    (16) instructions -> untilbody SEMICOLON instructions .

    RPARENT         reduce using rule 16 (instructions -> untilbody SEMICOLON instructions .)
    BREAK           reduce using rule 16 (instructions -> untilbody SEMICOLON instructions .)


state 83

    (17) instructions -> whilebody SEMICOLON instructions .

    RPARENT         reduce using rule 17 (instructions -> whilebody SEMICOLON instructions .)
    BREAK           reduce using rule 17 (instructions -> whilebody SEMICOLON instructions .)


state 84

    (18) instructions -> casebody SEMICOLON instructions .

    RPARENT         reduce using rule 18 (instructions -> casebody SEMICOLON instructions .)
    BREAK           reduce using rule 18 (instructions -> casebody SEMICOLON instructions .)


state 85

    (48) casebody -> casebody ELSE LPARENT . instructions RPARENT
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)

    casebody                       shift and go to state 23
    instructions                   shift and go to state 117
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 86

    (19) instructions -> PRINT LPARENT printvalues . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 118


state 87

    (62) printvalues -> STRING . printvalues
    (62) printvalues -> . STRING printvalues
    (63) printvalues -> . COMMA ID printvalues
    (64) printvalues -> . empty
    (65) empty -> .

    STRING          shift and go to state 87
    COMMA           shift and go to state 88
    RPARENT         reduce using rule 65 (empty -> .)

    printvalues                    shift and go to state 119
    empty                          shift and go to state 89

state 88

    (63) printvalues -> COMMA . ID printvalues

    ID              shift and go to state 120


state 89

    (64) printvalues -> empty .

    RPARENT         reduce using rule 64 (printvalues -> empty .)


state 90

    (20) instructions -> istrue SEMICOLON instructions .

    RPARENT         reduce using rule 20 (instructions -> istrue SEMICOLON instructions .)
    BREAK           reduce using rule 20 (instructions -> istrue SEMICOLON instructions .)


state 91

    (21) instructions -> CALL LPARENT ID . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 121


state 92

    (23) alterbody -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT

    COMMA           shift and go to state 122


state 93

    (45) untilbody -> UNTIL LPARENT instructions . RPARENT condition

    RPARENT         shift and go to state 123


state 94

    (46) whilebody -> WHILE condition LPARENT . instructions RPARENT
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 124
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 95

    (54) condition -> ID comparator . ID
    (55) condition -> ID comparator . NUMBER

    ID              shift and go to state 125
    NUMBER          shift and go to state 126


state 96

    (34) comparator -> GT .

    ID              reduce using rule 34 (comparator -> GT .)
    NUMBER          reduce using rule 34 (comparator -> GT .)


state 97

    (35) comparator -> LT .

    ID              reduce using rule 35 (comparator -> LT .)
    NUMBER          reduce using rule 35 (comparator -> LT .)


state 98

    (36) comparator -> GET .

    ID              reduce using rule 36 (comparator -> GET .)
    NUMBER          reduce using rule 36 (comparator -> GET .)


state 99

    (37) comparator -> LET .

    ID              reduce using rule 37 (comparator -> LET .)
    NUMBER          reduce using rule 37 (comparator -> LET .)


state 100

    (38) comparator -> EQ .

    ID              reduce using rule 38 (comparator -> EQ .)
    NUMBER          reduce using rule 38 (comparator -> EQ .)


state 101

    (39) comparator -> DT .

    ID              reduce using rule 39 (comparator -> DT .)
    NUMBER          reduce using rule 39 (comparator -> DT .)


state 102

    (56) condition -> NUMBER comparator . ID
    (57) condition -> NUMBER comparator . NUMBER

    ID              shift and go to state 128
    NUMBER          shift and go to state 127


state 103

    (47) casebody -> CASE WHEN LPARENT . condition RPARENT THEN LPARENT instructions RPARENT
    (54) condition -> . ID comparator ID
    (55) condition -> . ID comparator NUMBER
    (56) condition -> . NUMBER comparator ID
    (57) condition -> . NUMBER comparator NUMBER
    (58) condition -> . TRUE
    (59) condition -> . FALSE
    (60) condition -> . istrue
    (61) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 54
    NUMBER          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    VERT            shift and go to state 32

    condition                      shift and go to state 129
    istrue                         shift and go to state 58

state 104

    (49) casebody -> CASE ID innercasebody .

    SEMICOLON       reduce using rule 49 (casebody -> CASE ID innercasebody .)
    ELSE            reduce using rule 49 (casebody -> CASE ID innercasebody .)


state 105

    (50) innercasebody -> WHEN . NUMBER THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> WHEN . TRUE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> WHEN . FALSE THEN LPARENT instructions RPARENT innercasebody

    NUMBER          shift and go to state 130
    TRUE            shift and go to state 131
    FALSE           shift and go to state 132


state 106

    (53) innercasebody -> empty .

    SEMICOLON       reduce using rule 53 (innercasebody -> empty .)
    ELSE            reduce using rule 53 (innercasebody -> empty .)


state 107

    (61) istrue -> VERT LPARENT ID . RPARENT

    RPARENT         shift and go to state 133


state 108

    (6) procedure -> PROCEDURE ID LPARENT instructions RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 134


state 109

    (7) instructions -> NEW ID LPARENT datatype . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 135


state 110

    (24) datatype -> NUMVAL .

    COMMA           reduce using rule 24 (datatype -> NUMVAL .)


state 111

    (25) datatype -> BOOLVAL .

    COMMA           reduce using rule 25 (datatype -> BOOLVAL .)


state 112

    (8) instructions -> VALUES LPARENT ID COMMA . value RPARENT SEMICOLON instructions
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . alterbody
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 68
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    ALTER           shift and go to state 28

    value                          shift and go to state 136
    alterbody                      shift and go to state 71

state 113

    (10) instructions -> ALTERB LPARENT value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 137


state 114

    (13) instructions -> HAMMER LPARENT position RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 138


state 115

    (15) instructions -> REPEAT LPARENT repeat_instructions RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 139


state 116

    (44) repeat_instructions -> instructions BREAK .

    RPARENT         reduce using rule 44 (repeat_instructions -> instructions BREAK .)


state 117

    (48) casebody -> casebody ELSE LPARENT instructions . RPARENT

    RPARENT         shift and go to state 140


state 118

    (19) instructions -> PRINT LPARENT printvalues RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 141


state 119

    (62) printvalues -> STRING printvalues .

    RPARENT         reduce using rule 62 (printvalues -> STRING printvalues .)


state 120

    (63) printvalues -> COMMA ID . printvalues
    (62) printvalues -> . STRING printvalues
    (63) printvalues -> . COMMA ID printvalues
    (64) printvalues -> . empty
    (65) empty -> .

    STRING          shift and go to state 87
    COMMA           shift and go to state 88
    RPARENT         reduce using rule 65 (empty -> .)

    printvalues                    shift and go to state 142
    empty                          shift and go to state 89

state 121

    (21) instructions -> CALL LPARENT ID RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 143


state 122

    (23) alterbody -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT
    (30) operator -> . ADD
    (31) operator -> . SUB
    (32) operator -> . MUL
    (33) operator -> . DIV

    ADD             shift and go to state 145
    SUB             shift and go to state 146
    MUL             shift and go to state 147
    DIV             shift and go to state 148

    operator                       shift and go to state 144

state 123

    (45) untilbody -> UNTIL LPARENT instructions RPARENT . condition
    (54) condition -> . ID comparator ID
    (55) condition -> . ID comparator NUMBER
    (56) condition -> . NUMBER comparator ID
    (57) condition -> . NUMBER comparator NUMBER
    (58) condition -> . TRUE
    (59) condition -> . FALSE
    (60) condition -> . istrue
    (61) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 54
    NUMBER          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    VERT            shift and go to state 32

    condition                      shift and go to state 149
    istrue                         shift and go to state 58

state 124

    (46) whilebody -> WHILE condition LPARENT instructions . RPARENT

    RPARENT         shift and go to state 150


state 125

    (54) condition -> ID comparator ID .

    LPARENT         reduce using rule 54 (condition -> ID comparator ID .)
    RPARENT         reduce using rule 54 (condition -> ID comparator ID .)
    SEMICOLON       reduce using rule 54 (condition -> ID comparator ID .)


state 126

    (55) condition -> ID comparator NUMBER .

    LPARENT         reduce using rule 55 (condition -> ID comparator NUMBER .)
    RPARENT         reduce using rule 55 (condition -> ID comparator NUMBER .)
    SEMICOLON       reduce using rule 55 (condition -> ID comparator NUMBER .)


state 127

    (57) condition -> NUMBER comparator NUMBER .

    LPARENT         reduce using rule 57 (condition -> NUMBER comparator NUMBER .)
    RPARENT         reduce using rule 57 (condition -> NUMBER comparator NUMBER .)
    SEMICOLON       reduce using rule 57 (condition -> NUMBER comparator NUMBER .)


state 128

    (56) condition -> NUMBER comparator ID .

    LPARENT         reduce using rule 56 (condition -> NUMBER comparator ID .)
    RPARENT         reduce using rule 56 (condition -> NUMBER comparator ID .)
    SEMICOLON       reduce using rule 56 (condition -> NUMBER comparator ID .)


state 129

    (47) casebody -> CASE WHEN LPARENT condition . RPARENT THEN LPARENT instructions RPARENT

    RPARENT         shift and go to state 151


state 130

    (50) innercasebody -> WHEN NUMBER . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 152


state 131

    (51) innercasebody -> WHEN TRUE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 153


state 132

    (52) innercasebody -> WHEN FALSE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 154


state 133

    (61) istrue -> VERT LPARENT ID RPARENT .

    SEMICOLON       reduce using rule 61 (istrue -> VERT LPARENT ID RPARENT .)
    LPARENT         reduce using rule 61 (istrue -> VERT LPARENT ID RPARENT .)
    RPARENT         reduce using rule 61 (istrue -> VERT LPARENT ID RPARENT .)


state 134

    (6) procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .

    PRINCIPAL       reduce using rule 6 (procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .)
    PROCEDURE       reduce using rule 6 (procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .)
    $end            reduce using rule 6 (procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .)


state 135

    (7) instructions -> NEW ID LPARENT datatype COMMA . value RPARENT SEMICOLON instructions
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . alterbody
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 68
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    ALTER           shift and go to state 28

    value                          shift and go to state 155
    alterbody                      shift and go to state 71

state 136

    (8) instructions -> VALUES LPARENT ID COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 156


state 137

    (10) instructions -> ALTERB LPARENT value RPARENT SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 157
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 138

    (13) instructions -> HAMMER LPARENT position RPARENT SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 158
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 139

    (15) instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 159
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 140

    (48) casebody -> casebody ELSE LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 48 (casebody -> casebody ELSE LPARENT instructions RPARENT .)
    ELSE            reduce using rule 48 (casebody -> casebody ELSE LPARENT instructions RPARENT .)


state 141

    (19) instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 160
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 142

    (63) printvalues -> COMMA ID printvalues .

    RPARENT         reduce using rule 63 (printvalues -> COMMA ID printvalues .)


state 143

    (21) instructions -> CALL LPARENT ID RPARENT SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 161
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 144

    (23) alterbody -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT

    COMMA           shift and go to state 162


state 145

    (30) operator -> ADD .

    COMMA           reduce using rule 30 (operator -> ADD .)


state 146

    (31) operator -> SUB .

    COMMA           reduce using rule 31 (operator -> SUB .)


state 147

    (32) operator -> MUL .

    COMMA           reduce using rule 32 (operator -> MUL .)


state 148

    (33) operator -> DIV .

    COMMA           reduce using rule 33 (operator -> DIV .)


state 149

    (45) untilbody -> UNTIL LPARENT instructions RPARENT condition .

    SEMICOLON       reduce using rule 45 (untilbody -> UNTIL LPARENT instructions RPARENT condition .)


state 150

    (46) whilebody -> WHILE condition LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 46 (whilebody -> WHILE condition LPARENT instructions RPARENT .)


state 151

    (47) casebody -> CASE WHEN LPARENT condition RPARENT . THEN LPARENT instructions RPARENT

    THEN            shift and go to state 163


state 152

    (50) innercasebody -> WHEN NUMBER THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 164


state 153

    (51) innercasebody -> WHEN TRUE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 165


state 154

    (52) innercasebody -> WHEN FALSE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 166


state 155

    (7) instructions -> NEW ID LPARENT datatype COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 167


state 156

    (8) instructions -> VALUES LPARENT ID COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 168


state 157

    (10) instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 10 (instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 10 (instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .)


state 158

    (13) instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 13 (instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 13 (instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .)


state 159

    (15) instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 15 (instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 15 (instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .)


state 160

    (19) instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 19 (instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 19 (instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .)


state 161

    (21) instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 21 (instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 21 (instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .)


state 162

    (23) alterbody -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . alterbody
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 68
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    ALTER           shift and go to state 28

    value                          shift and go to state 169
    alterbody                      shift and go to state 71

state 163

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN . LPARENT instructions RPARENT

    LPARENT         shift and go to state 170


state 164

    (50) innercasebody -> WHEN NUMBER THEN LPARENT . instructions RPARENT innercasebody
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 171
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 165

    (51) innercasebody -> WHEN TRUE THEN LPARENT . instructions RPARENT innercasebody
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 172
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 166

    (52) innercasebody -> WHEN FALSE THEN LPARENT . instructions RPARENT innercasebody
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 173
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 167

    (7) instructions -> NEW ID LPARENT datatype COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 174


state 168

    (8) instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 175
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 169

    (23) alterbody -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT

    RPARENT         shift and go to state 176


state 170

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT . instructions RPARENT
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 177
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 171

    (50) innercasebody -> WHEN NUMBER THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 178


state 172

    (51) innercasebody -> WHEN TRUE THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 179


state 173

    (52) innercasebody -> WHEN FALSE THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 180


state 174

    (7) instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON . instructions
    (7) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . alterbody SEMICOLON instructions
    (10) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (11) instructions -> . MOVR SEMICOLON instructions
    (12) instructions -> . MOVL SEMICOLON instructions
    (13) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (14) instructions -> . STOP SEMICOLON instructions
    (15) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (16) instructions -> . untilbody SEMICOLON instructions
    (17) instructions -> . whilebody SEMICOLON instructions
    (18) instructions -> . casebody SEMICOLON instructions
    (19) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (20) instructions -> . istrue SEMICOLON instructions
    (21) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (22) instructions -> . empty
    (23) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (48) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (49) casebody -> . CASE ID innercasebody
    (61) istrue -> . VERT LPARENT ID RPARENT
    (65) empty -> .

    NEW             shift and go to state 12
    VALUES          shift and go to state 13
    ALTERB          shift and go to state 15
    MOVR            shift and go to state 16
    MOVL            shift and go to state 17
    HAMMER          shift and go to state 18
    STOP            shift and go to state 19
    REPEAT          shift and go to state 20
    PRINT           shift and go to state 24
    CALL            shift and go to state 26
    ALTER           shift and go to state 28
    UNTIL           shift and go to state 29
    WHILE           shift and go to state 30
    CASE            shift and go to state 31
    VERT            shift and go to state 32
    RPARENT         reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    instructions                   shift and go to state 181
    alterbody                      shift and go to state 14
    untilbody                      shift and go to state 21
    whilebody                      shift and go to state 22
    casebody                       shift and go to state 23
    istrue                         shift and go to state 25
    empty                          shift and go to state 27

state 175

    (8) instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 8 (instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 8 (instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .)


state 176

    (23) alterbody -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .

    SEMICOLON       reduce using rule 23 (alterbody -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .)
    RPARENT         reduce using rule 23 (alterbody -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .)


state 177

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions . RPARENT

    RPARENT         shift and go to state 182


state 178

    (50) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT . innercasebody
    (50) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . empty
    (65) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 65 (empty -> .)
    ELSE            reduce using rule 65 (empty -> .)

    innercasebody                  shift and go to state 183
    empty                          shift and go to state 106

state 179

    (51) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT . innercasebody
    (50) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . empty
    (65) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 65 (empty -> .)
    ELSE            reduce using rule 65 (empty -> .)

    innercasebody                  shift and go to state 184
    empty                          shift and go to state 106

state 180

    (52) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT . innercasebody
    (50) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . empty
    (65) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 65 (empty -> .)
    ELSE            reduce using rule 65 (empty -> .)

    innercasebody                  shift and go to state 185
    empty                          shift and go to state 106

state 181

    (7) instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 7 (instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 7 (instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .)


state 182

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 47 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)
    ELSE            reduce using rule 47 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)


state 183

    (50) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 50 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 50 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)


state 184

    (51) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 51 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 51 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)


state 185

    (52) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 52 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 52 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 4 resolved using rule (bodyprogram -> procedure)
WARNING: rejected rule (empty -> <empty>) in state 4
