Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> COMMENT procedures principal procedures end
Rule 2     principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON
Rule 3     principal -> empty
Rule 4     procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
Rule 5     procedures -> empty
Rule 6     instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
Rule 7     instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
Rule 8     instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
Rule 9     instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
Rule 10    instructions -> instructions MOVR SEMICOLON commentary
Rule 11    instructions -> instructions MOVL SEMICOLON commentary
Rule 12    instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
Rule 13    instructions -> instructions STOP SEMICOLON commentary
Rule 14    instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
Rule 15    instructions -> instructions untilbody SEMICOLON commentary
Rule 16    instructions -> instructions whilebody SEMICOLON commentary
Rule 17    instructions -> instructions casebody SEMICOLON commentary
Rule 18    instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
Rule 19    instructions -> instructions istrue SEMICOLON commentary
Rule 20    instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary
Rule 21    instructions -> empty
Rule 22    commentary -> COMMENT
Rule 23    commentary -> empty
Rule 24    datatype -> NUMVAL
Rule 25    datatype -> BOOLVAL
Rule 26    value -> NUMBER
Rule 27    value -> TRUE
Rule 28    value -> FALSE
Rule 29    value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT
Rule 30    operator -> ADD
Rule 31    operator -> SUB
Rule 32    operator -> MUL
Rule 33    operator -> DIV
Rule 34    comparator -> GT
Rule 35    comparator -> LT
Rule 36    comparator -> GET
Rule 37    comparator -> LET
Rule 38    comparator -> EQ
Rule 39    comparator -> DT
Rule 40    position -> NORTH
Rule 41    position -> SOUTH
Rule 42    position -> EAST
Rule 43    position -> WEST
Rule 44    repeat_instructions -> instructions BREAK SEMICOLON commentary
Rule 45    untilbody -> UNTIL LPARENT instructions RPARENT condition
Rule 46    whilebody -> WHILE condition LPARENT instructions RPARENT
Rule 47    casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
Rule 48    casebody -> case_else
Rule 49    case_else -> ELSE LPARENT instructions RPARENT
Rule 50    case_else -> empty
Rule 51    casebody -> CASE ID innercasebody
Rule 52    innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
Rule 53    innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
Rule 54    innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
Rule 55    innercasebody -> empty
Rule 56    condition -> ID comparator ID
Rule 57    condition -> ID comparator NUMBER
Rule 58    condition -> NUMBER comparator ID
Rule 59    condition -> NUMBER comparator NUMBER
Rule 60    condition -> TRUE
Rule 61    condition -> FALSE
Rule 62    condition -> istrue
Rule 63    istrue -> VERT LPARENT ID RPARENT
Rule 64    startvalue -> STRING
Rule 65    startvalue -> ID
Rule 66    end -> empty
Rule 67    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 30
ALTER                : 8 29
ALTERB               : 9
BOOLVAL              : 25
BREAK                : 44
CALL                 : 20
CASE                 : 47 51
COMMA                : 6 7 8 8 29 29
COMMENT              : 1 22
DIV                  : 33
DT                   : 39
EAST                 : 42
ELSE                 : 49
EQ                   : 38
FALSE                : 28 54 61
GET                  : 36
GT                   : 34
HAMMER               : 12
ID                   : 4 6 7 8 9 20 29 51 56 56 57 58 63 65
LET                  : 37
LPARENT              : 2 4 6 7 8 9 12 14 18 20 29 45 46 47 47 49 52 53 54 63
LT                   : 35
MOVL                 : 11
MOVR                 : 10
MUL                  : 32
NEW                  : 6
NORTH                : 40
NUMBER               : 26 52 57 58 59 59
NUMVAL               : 24
PRINCIPAL            : 2
PRINT                : 18
PROCEDURE            : 4
REPEAT               : 14
RPARENT              : 2 4 6 7 8 9 12 14 18 20 29 45 46 47 47 49 52 53 54 63
SEMICOLON            : 2 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 44
SOUTH                : 41
STOP                 : 13
STRING               : 64
SUB                  : 31
THEN                 : 47 52 53 54
TRUE                 : 27 53 60
UNTIL                : 45
VALUES               : 7
VERT                 : 63
WEST                 : 43
WHEN                 : 47 52 53 54
WHILE                : 46
error                : 

Nonterminals, with rules where they appear

case_else            : 48
casebody             : 17 47
commentary           : 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 44
comparator           : 56 57 58 59
condition            : 45 46 47
datatype             : 6
empty                : 3 5 21 23 50 55 66
end                  : 1
innercasebody        : 51 52 53 54
instructions         : 2 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 44 45 46 47 49 52 53 54
istrue               : 19 62
operator             : 8 29
position             : 12
principal            : 1
procedures           : 1 1 4
program              : 0
repeat_instructions  : 14
startvalue           : 18
untilbody            : 15
value                : 6 7 8 29
whilebody            : 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . COMMENT procedures principal procedures end

    COMMENT         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> COMMENT . procedures principal procedures end
    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
    (5) procedures -> . empty
    (67) empty -> .

  ! shift/reduce conflict for PROCEDURE resolved as shift
    PROCEDURE       shift and go to state 4
    PRINCIPAL       reduce using rule 67 (empty -> .)
    $end            reduce using rule 67 (empty -> .)

  ! PROCEDURE       [ reduce using rule 67 (empty -> .) ]

    procedures                     shift and go to state 3
    empty                          shift and go to state 5

state 3

    (1) program -> COMMENT procedures . principal procedures end
    (2) principal -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON
    (3) principal -> . empty
    (67) empty -> .

    PRINCIPAL       shift and go to state 7
    PROCEDURE       reduce using rule 67 (empty -> .)
    $end            reduce using rule 67 (empty -> .)

    principal                      shift and go to state 6
    empty                          shift and go to state 8

state 4

    (4) procedures -> PROCEDURE . ID LPARENT instructions RPARENT SEMICOLON procedures

    ID              shift and go to state 9


state 5

    (5) procedures -> empty .

    PRINCIPAL       reduce using rule 5 (procedures -> empty .)
    PROCEDURE       reduce using rule 5 (procedures -> empty .)
    $end            reduce using rule 5 (procedures -> empty .)


state 6

    (1) program -> COMMENT procedures principal . procedures end
    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
    (5) procedures -> . empty
    (67) empty -> .

    PROCEDURE       shift and go to state 4
    $end            reduce using rule 67 (empty -> .)

    procedures                     shift and go to state 10
    empty                          shift and go to state 5

state 7

    (2) principal -> PRINCIPAL . LPARENT instructions RPARENT SEMICOLON

    LPARENT         shift and go to state 11


state 8

    (3) principal -> empty .

    PROCEDURE       reduce using rule 3 (principal -> empty .)
    $end            reduce using rule 3 (principal -> empty .)


state 9

    (4) procedures -> PROCEDURE ID . LPARENT instructions RPARENT SEMICOLON procedures

    LPARENT         shift and go to state 12


state 10

    (1) program -> COMMENT procedures principal procedures . end
    (66) end -> . empty
    (67) empty -> .

    $end            reduce using rule 67 (empty -> .)

    end                            shift and go to state 13
    empty                          shift and go to state 14

state 11

    (2) principal -> PRINCIPAL LPARENT . instructions RPARENT SEMICOLON
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (67) empty -> .

    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 15
    empty                          shift and go to state 16

state 12

    (4) procedures -> PROCEDURE ID LPARENT . instructions RPARENT SEMICOLON procedures
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (67) empty -> .

    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 17
    empty                          shift and go to state 16

state 13

    (1) program -> COMMENT procedures principal procedures end .

    $end            reduce using rule 1 (program -> COMMENT procedures principal procedures end .)


state 14

    (66) end -> empty .

    $end            reduce using rule 66 (end -> empty .)


state 15

    (2) principal -> PRINCIPAL LPARENT instructions . RPARENT SEMICOLON
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (48) casebody -> . case_else
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (49) case_else -> . ELSE LPARENT instructions RPARENT
    (50) case_else -> . empty
    (67) empty -> .

    RPARENT         shift and go to state 18
    NEW             shift and go to state 19
    VALUES          shift and go to state 20
    ALTER           shift and go to state 21
    ALTERB          shift and go to state 22
    MOVR            shift and go to state 23
    MOVL            shift and go to state 24
    HAMMER          shift and go to state 25
    STOP            shift and go to state 26
    REPEAT          shift and go to state 27
    PRINT           shift and go to state 31
    CALL            shift and go to state 33
    UNTIL           shift and go to state 34
    WHILE           shift and go to state 35
    CASE            shift and go to state 36
    VERT            shift and go to state 38
    ELSE            shift and go to state 39
    SEMICOLON       reduce using rule 67 (empty -> .)

    untilbody                      shift and go to state 28
    whilebody                      shift and go to state 29
    casebody                       shift and go to state 30
    istrue                         shift and go to state 32
    case_else                      shift and go to state 37
    empty                          shift and go to state 40

state 16

    (21) instructions -> empty .

    RPARENT         reduce using rule 21 (instructions -> empty .)
    NEW             reduce using rule 21 (instructions -> empty .)
    VALUES          reduce using rule 21 (instructions -> empty .)
    ALTER           reduce using rule 21 (instructions -> empty .)
    ALTERB          reduce using rule 21 (instructions -> empty .)
    MOVR            reduce using rule 21 (instructions -> empty .)
    MOVL            reduce using rule 21 (instructions -> empty .)
    HAMMER          reduce using rule 21 (instructions -> empty .)
    STOP            reduce using rule 21 (instructions -> empty .)
    REPEAT          reduce using rule 21 (instructions -> empty .)
    PRINT           reduce using rule 21 (instructions -> empty .)
    CALL            reduce using rule 21 (instructions -> empty .)
    UNTIL           reduce using rule 21 (instructions -> empty .)
    WHILE           reduce using rule 21 (instructions -> empty .)
    CASE            reduce using rule 21 (instructions -> empty .)
    VERT            reduce using rule 21 (instructions -> empty .)
    ELSE            reduce using rule 21 (instructions -> empty .)
    SEMICOLON       reduce using rule 21 (instructions -> empty .)
    BREAK           reduce using rule 21 (instructions -> empty .)


state 17

    (4) procedures -> PROCEDURE ID LPARENT instructions . RPARENT SEMICOLON procedures
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (48) casebody -> . case_else
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (49) case_else -> . ELSE LPARENT instructions RPARENT
    (50) case_else -> . empty
    (67) empty -> .

    RPARENT         shift and go to state 41
    NEW             shift and go to state 19
    VALUES          shift and go to state 20
    ALTER           shift and go to state 21
    ALTERB          shift and go to state 22
    MOVR            shift and go to state 23
    MOVL            shift and go to state 24
    HAMMER          shift and go to state 25
    STOP            shift and go to state 26
    REPEAT          shift and go to state 27
    PRINT           shift and go to state 31
    CALL            shift and go to state 33
    UNTIL           shift and go to state 34
    WHILE           shift and go to state 35
    CASE            shift and go to state 36
    VERT            shift and go to state 38
    ELSE            shift and go to state 39
    SEMICOLON       reduce using rule 67 (empty -> .)

    untilbody                      shift and go to state 28
    whilebody                      shift and go to state 29
    casebody                       shift and go to state 30
    istrue                         shift and go to state 32
    case_else                      shift and go to state 37
    empty                          shift and go to state 40

state 18

    (2) principal -> PRINCIPAL LPARENT instructions RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 42


state 19

    (6) instructions -> instructions NEW . ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary

    ID              shift and go to state 43


state 20

    (7) instructions -> instructions VALUES . LPARENT ID COMMA value RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 44


state 21

    (8) instructions -> instructions ALTER . LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 45


state 22

    (9) instructions -> instructions ALTERB . LPARENT ID RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 46


state 23

    (10) instructions -> instructions MOVR . SEMICOLON commentary

    SEMICOLON       shift and go to state 47


state 24

    (11) instructions -> instructions MOVL . SEMICOLON commentary

    SEMICOLON       shift and go to state 48


state 25

    (12) instructions -> instructions HAMMER . LPARENT position RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 49


state 26

    (13) instructions -> instructions STOP . SEMICOLON commentary

    SEMICOLON       shift and go to state 50


state 27

    (14) instructions -> instructions REPEAT . LPARENT repeat_instructions RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 51


state 28

    (15) instructions -> instructions untilbody . SEMICOLON commentary

    SEMICOLON       shift and go to state 52


state 29

    (16) instructions -> instructions whilebody . SEMICOLON commentary

    SEMICOLON       shift and go to state 53


state 30

    (17) instructions -> instructions casebody . SEMICOLON commentary

    SEMICOLON       shift and go to state 54


state 31

    (18) instructions -> instructions PRINT . LPARENT startvalue RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 55


state 32

    (19) instructions -> instructions istrue . SEMICOLON commentary

    SEMICOLON       shift and go to state 56


state 33

    (20) instructions -> instructions CALL . LPARENT ID RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 57


state 34

    (45) untilbody -> UNTIL . LPARENT instructions RPARENT condition

    LPARENT         shift and go to state 58


state 35

    (46) whilebody -> WHILE . condition LPARENT instructions RPARENT
    (56) condition -> . ID comparator ID
    (57) condition -> . ID comparator NUMBER
    (58) condition -> . NUMBER comparator ID
    (59) condition -> . NUMBER comparator NUMBER
    (60) condition -> . TRUE
    (61) condition -> . FALSE
    (62) condition -> . istrue
    (63) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 60
    NUMBER          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    VERT            shift and go to state 38

    condition                      shift and go to state 59
    istrue                         shift and go to state 64

state 36

    (47) casebody -> CASE . WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (51) casebody -> CASE . ID innercasebody

    WHEN            shift and go to state 65
    ID              shift and go to state 66


state 37

    (48) casebody -> case_else .

    SEMICOLON       reduce using rule 48 (casebody -> case_else .)


state 38

    (63) istrue -> VERT . LPARENT ID RPARENT

    LPARENT         shift and go to state 67


state 39

    (49) case_else -> ELSE . LPARENT instructions RPARENT

    LPARENT         shift and go to state 68


state 40

    (50) case_else -> empty .

    SEMICOLON       reduce using rule 50 (case_else -> empty .)


state 41

    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT . SEMICOLON procedures

    SEMICOLON       shift and go to state 69


state 42

    (2) principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .

    PROCEDURE       reduce using rule 2 (principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    $end            reduce using rule 2 (principal -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)


state 43

    (6) instructions -> instructions NEW ID . LPARENT datatype COMMA value RPARENT SEMICOLON commentary

    LPARENT         shift and go to state 70


state 44

    (7) instructions -> instructions VALUES LPARENT . ID COMMA value RPARENT SEMICOLON commentary

    ID              shift and go to state 71


state 45

    (8) instructions -> instructions ALTER LPARENT . ID COMMA operator COMMA value RPARENT SEMICOLON commentary

    ID              shift and go to state 72


state 46

    (9) instructions -> instructions ALTERB LPARENT . ID RPARENT SEMICOLON commentary

    ID              shift and go to state 73


state 47

    (10) instructions -> instructions MOVR SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 74
    empty                          shift and go to state 76

state 48

    (11) instructions -> instructions MOVL SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 77
    empty                          shift and go to state 76

state 49

    (12) instructions -> instructions HAMMER LPARENT . position RPARENT SEMICOLON commentary
    (40) position -> . NORTH
    (41) position -> . SOUTH
    (42) position -> . EAST
    (43) position -> . WEST

    NORTH           shift and go to state 79
    SOUTH           shift and go to state 80
    EAST            shift and go to state 81
    WEST            shift and go to state 82

    position                       shift and go to state 78

state 50

    (13) instructions -> instructions STOP SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 83
    empty                          shift and go to state 76

state 51

    (14) instructions -> instructions REPEAT LPARENT . repeat_instructions RPARENT SEMICOLON commentary
    (44) repeat_instructions -> . instructions BREAK SEMICOLON commentary
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (67) empty -> .

    BREAK           reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 84
    repeat_instructions            shift and go to state 85
    empty                          shift and go to state 16

state 52

    (15) instructions -> instructions untilbody SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 86
    empty                          shift and go to state 76

state 53

    (16) instructions -> instructions whilebody SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 87
    empty                          shift and go to state 76

state 54

    (17) instructions -> instructions casebody SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 88
    empty                          shift and go to state 76

state 55

    (18) instructions -> instructions PRINT LPARENT . startvalue RPARENT SEMICOLON commentary
    (64) startvalue -> . STRING
    (65) startvalue -> . ID

    STRING          shift and go to state 90
    ID              shift and go to state 91

    startvalue                     shift and go to state 89

state 56

    (19) instructions -> instructions istrue SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 92
    empty                          shift and go to state 76

state 57

    (20) instructions -> instructions CALL LPARENT . ID RPARENT SEMICOLON commentary

    ID              shift and go to state 93


state 58

    (45) untilbody -> UNTIL LPARENT . instructions RPARENT condition
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (67) empty -> .

    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 94
    empty                          shift and go to state 16

state 59

    (46) whilebody -> WHILE condition . LPARENT instructions RPARENT

    LPARENT         shift and go to state 95


state 60

    (56) condition -> ID . comparator ID
    (57) condition -> ID . comparator NUMBER
    (34) comparator -> . GT
    (35) comparator -> . LT
    (36) comparator -> . GET
    (37) comparator -> . LET
    (38) comparator -> . EQ
    (39) comparator -> . DT

    GT              shift and go to state 97
    LT              shift and go to state 98
    GET             shift and go to state 99
    LET             shift and go to state 100
    EQ              shift and go to state 101
    DT              shift and go to state 102

    comparator                     shift and go to state 96

state 61

    (58) condition -> NUMBER . comparator ID
    (59) condition -> NUMBER . comparator NUMBER
    (34) comparator -> . GT
    (35) comparator -> . LT
    (36) comparator -> . GET
    (37) comparator -> . LET
    (38) comparator -> . EQ
    (39) comparator -> . DT

    GT              shift and go to state 97
    LT              shift and go to state 98
    GET             shift and go to state 99
    LET             shift and go to state 100
    EQ              shift and go to state 101
    DT              shift and go to state 102

    comparator                     shift and go to state 103

state 62

    (60) condition -> TRUE .

    LPARENT         reduce using rule 60 (condition -> TRUE .)
    RPARENT         reduce using rule 60 (condition -> TRUE .)
    SEMICOLON       reduce using rule 60 (condition -> TRUE .)


state 63

    (61) condition -> FALSE .

    LPARENT         reduce using rule 61 (condition -> FALSE .)
    RPARENT         reduce using rule 61 (condition -> FALSE .)
    SEMICOLON       reduce using rule 61 (condition -> FALSE .)


state 64

    (62) condition -> istrue .

    LPARENT         reduce using rule 62 (condition -> istrue .)
    RPARENT         reduce using rule 62 (condition -> istrue .)
    SEMICOLON       reduce using rule 62 (condition -> istrue .)


state 65

    (47) casebody -> CASE WHEN . LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody

    LPARENT         shift and go to state 104


state 66

    (51) casebody -> CASE ID . innercasebody
    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (55) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 106
    SEMICOLON       reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 105
    empty                          shift and go to state 107

state 67

    (63) istrue -> VERT LPARENT . ID RPARENT

    ID              shift and go to state 108


state 68

    (49) case_else -> ELSE LPARENT . instructions RPARENT
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (67) empty -> .

    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 109
    empty                          shift and go to state 16

state 69

    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON . procedures
    (4) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
    (5) procedures -> . empty
    (67) empty -> .

  ! shift/reduce conflict for PROCEDURE resolved as shift
    PROCEDURE       shift and go to state 4
    PRINCIPAL       reduce using rule 67 (empty -> .)
    $end            reduce using rule 67 (empty -> .)

  ! PROCEDURE       [ reduce using rule 67 (empty -> .) ]

    procedures                     shift and go to state 110
    empty                          shift and go to state 5

state 70

    (6) instructions -> instructions NEW ID LPARENT . datatype COMMA value RPARENT SEMICOLON commentary
    (24) datatype -> . NUMVAL
    (25) datatype -> . BOOLVAL

    NUMVAL          shift and go to state 112
    BOOLVAL         shift and go to state 113

    datatype                       shift and go to state 111

state 71

    (7) instructions -> instructions VALUES LPARENT ID . COMMA value RPARENT SEMICOLON commentary

    COMMA           shift and go to state 114


state 72

    (8) instructions -> instructions ALTER LPARENT ID . COMMA operator COMMA value RPARENT SEMICOLON commentary

    COMMA           shift and go to state 115


state 73

    (9) instructions -> instructions ALTERB LPARENT ID . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 116


state 74

    (10) instructions -> instructions MOVR SEMICOLON commentary .

    RPARENT         reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    NEW             reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    VALUES          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    ALTER           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    ALTERB          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    MOVR            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    MOVL            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    HAMMER          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    STOP            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    REPEAT          reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    PRINT           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    CALL            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    UNTIL           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    WHILE           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    CASE            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    VERT            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    ELSE            reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    SEMICOLON       reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)
    BREAK           reduce using rule 10 (instructions -> instructions MOVR SEMICOLON commentary .)


state 75

    (22) commentary -> COMMENT .

    RPARENT         reduce using rule 22 (commentary -> COMMENT .)
    NEW             reduce using rule 22 (commentary -> COMMENT .)
    VALUES          reduce using rule 22 (commentary -> COMMENT .)
    ALTER           reduce using rule 22 (commentary -> COMMENT .)
    ALTERB          reduce using rule 22 (commentary -> COMMENT .)
    MOVR            reduce using rule 22 (commentary -> COMMENT .)
    MOVL            reduce using rule 22 (commentary -> COMMENT .)
    HAMMER          reduce using rule 22 (commentary -> COMMENT .)
    STOP            reduce using rule 22 (commentary -> COMMENT .)
    REPEAT          reduce using rule 22 (commentary -> COMMENT .)
    PRINT           reduce using rule 22 (commentary -> COMMENT .)
    CALL            reduce using rule 22 (commentary -> COMMENT .)
    UNTIL           reduce using rule 22 (commentary -> COMMENT .)
    WHILE           reduce using rule 22 (commentary -> COMMENT .)
    CASE            reduce using rule 22 (commentary -> COMMENT .)
    VERT            reduce using rule 22 (commentary -> COMMENT .)
    ELSE            reduce using rule 22 (commentary -> COMMENT .)
    SEMICOLON       reduce using rule 22 (commentary -> COMMENT .)
    BREAK           reduce using rule 22 (commentary -> COMMENT .)


state 76

    (23) commentary -> empty .

    RPARENT         reduce using rule 23 (commentary -> empty .)
    NEW             reduce using rule 23 (commentary -> empty .)
    VALUES          reduce using rule 23 (commentary -> empty .)
    ALTER           reduce using rule 23 (commentary -> empty .)
    ALTERB          reduce using rule 23 (commentary -> empty .)
    MOVR            reduce using rule 23 (commentary -> empty .)
    MOVL            reduce using rule 23 (commentary -> empty .)
    HAMMER          reduce using rule 23 (commentary -> empty .)
    STOP            reduce using rule 23 (commentary -> empty .)
    REPEAT          reduce using rule 23 (commentary -> empty .)
    PRINT           reduce using rule 23 (commentary -> empty .)
    CALL            reduce using rule 23 (commentary -> empty .)
    UNTIL           reduce using rule 23 (commentary -> empty .)
    WHILE           reduce using rule 23 (commentary -> empty .)
    CASE            reduce using rule 23 (commentary -> empty .)
    VERT            reduce using rule 23 (commentary -> empty .)
    ELSE            reduce using rule 23 (commentary -> empty .)
    SEMICOLON       reduce using rule 23 (commentary -> empty .)
    BREAK           reduce using rule 23 (commentary -> empty .)


state 77

    (11) instructions -> instructions MOVL SEMICOLON commentary .

    RPARENT         reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    NEW             reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    VALUES          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    ALTER           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    ALTERB          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    MOVR            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    MOVL            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    HAMMER          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    STOP            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    REPEAT          reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    PRINT           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    CALL            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    UNTIL           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    WHILE           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    CASE            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    VERT            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    ELSE            reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    SEMICOLON       reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)
    BREAK           reduce using rule 11 (instructions -> instructions MOVL SEMICOLON commentary .)


state 78

    (12) instructions -> instructions HAMMER LPARENT position . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 117


state 79

    (40) position -> NORTH .

    RPARENT         reduce using rule 40 (position -> NORTH .)


state 80

    (41) position -> SOUTH .

    RPARENT         reduce using rule 41 (position -> SOUTH .)


state 81

    (42) position -> EAST .

    RPARENT         reduce using rule 42 (position -> EAST .)


state 82

    (43) position -> WEST .

    RPARENT         reduce using rule 43 (position -> WEST .)


state 83

    (13) instructions -> instructions STOP SEMICOLON commentary .

    RPARENT         reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    NEW             reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    VALUES          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    ALTER           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    ALTERB          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    MOVR            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    MOVL            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    HAMMER          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    STOP            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    REPEAT          reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    PRINT           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    CALL            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    UNTIL           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    WHILE           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    CASE            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    VERT            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    ELSE            reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    SEMICOLON       reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)
    BREAK           reduce using rule 13 (instructions -> instructions STOP SEMICOLON commentary .)


state 84

    (44) repeat_instructions -> instructions . BREAK SEMICOLON commentary
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (48) casebody -> . case_else
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (49) case_else -> . ELSE LPARENT instructions RPARENT
    (50) case_else -> . empty
    (67) empty -> .

    BREAK           shift and go to state 118
    NEW             shift and go to state 19
    VALUES          shift and go to state 20
    ALTER           shift and go to state 21
    ALTERB          shift and go to state 22
    MOVR            shift and go to state 23
    MOVL            shift and go to state 24
    HAMMER          shift and go to state 25
    STOP            shift and go to state 26
    REPEAT          shift and go to state 27
    PRINT           shift and go to state 31
    CALL            shift and go to state 33
    UNTIL           shift and go to state 34
    WHILE           shift and go to state 35
    CASE            shift and go to state 36
    VERT            shift and go to state 38
    ELSE            shift and go to state 39
    SEMICOLON       reduce using rule 67 (empty -> .)

    untilbody                      shift and go to state 28
    whilebody                      shift and go to state 29
    casebody                       shift and go to state 30
    istrue                         shift and go to state 32
    case_else                      shift and go to state 37
    empty                          shift and go to state 40

state 85

    (14) instructions -> instructions REPEAT LPARENT repeat_instructions . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 119


state 86

    (15) instructions -> instructions untilbody SEMICOLON commentary .

    RPARENT         reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    NEW             reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    VALUES          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    ALTER           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    ALTERB          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    MOVR            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    MOVL            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    HAMMER          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    STOP            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    REPEAT          reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    PRINT           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    CALL            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    UNTIL           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    WHILE           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    CASE            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    VERT            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    ELSE            reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    SEMICOLON       reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)
    BREAK           reduce using rule 15 (instructions -> instructions untilbody SEMICOLON commentary .)


state 87

    (16) instructions -> instructions whilebody SEMICOLON commentary .

    RPARENT         reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    NEW             reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    VALUES          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    ALTER           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    ALTERB          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    MOVR            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    MOVL            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    HAMMER          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    STOP            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    REPEAT          reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    PRINT           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    CALL            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    UNTIL           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    WHILE           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    CASE            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    VERT            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    ELSE            reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    SEMICOLON       reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)
    BREAK           reduce using rule 16 (instructions -> instructions whilebody SEMICOLON commentary .)


state 88

    (17) instructions -> instructions casebody SEMICOLON commentary .

    RPARENT         reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    NEW             reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    VALUES          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    ALTER           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    ALTERB          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    MOVR            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    MOVL            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    HAMMER          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    STOP            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    REPEAT          reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    PRINT           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    CALL            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    UNTIL           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    WHILE           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    CASE            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    VERT            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    ELSE            reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    SEMICOLON       reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)
    BREAK           reduce using rule 17 (instructions -> instructions casebody SEMICOLON commentary .)


state 89

    (18) instructions -> instructions PRINT LPARENT startvalue . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 120


state 90

    (64) startvalue -> STRING .

    RPARENT         reduce using rule 64 (startvalue -> STRING .)


state 91

    (65) startvalue -> ID .

    RPARENT         reduce using rule 65 (startvalue -> ID .)


state 92

    (19) instructions -> instructions istrue SEMICOLON commentary .

    RPARENT         reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    NEW             reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    VALUES          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    ALTER           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    ALTERB          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    MOVR            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    MOVL            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    HAMMER          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    STOP            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    REPEAT          reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    PRINT           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    CALL            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    UNTIL           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    WHILE           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    CASE            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    VERT            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    ELSE            reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    SEMICOLON       reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)
    BREAK           reduce using rule 19 (instructions -> instructions istrue SEMICOLON commentary .)


state 93

    (20) instructions -> instructions CALL LPARENT ID . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 121


state 94

    (45) untilbody -> UNTIL LPARENT instructions . RPARENT condition
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (48) casebody -> . case_else
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (49) case_else -> . ELSE LPARENT instructions RPARENT
    (50) case_else -> . empty
    (67) empty -> .

    RPARENT         shift and go to state 122
    NEW             shift and go to state 19
    VALUES          shift and go to state 20
    ALTER           shift and go to state 21
    ALTERB          shift and go to state 22
    MOVR            shift and go to state 23
    MOVL            shift and go to state 24
    HAMMER          shift and go to state 25
    STOP            shift and go to state 26
    REPEAT          shift and go to state 27
    PRINT           shift and go to state 31
    CALL            shift and go to state 33
    UNTIL           shift and go to state 34
    WHILE           shift and go to state 35
    CASE            shift and go to state 36
    VERT            shift and go to state 38
    ELSE            shift and go to state 39
    SEMICOLON       reduce using rule 67 (empty -> .)

    untilbody                      shift and go to state 28
    whilebody                      shift and go to state 29
    casebody                       shift and go to state 30
    istrue                         shift and go to state 32
    case_else                      shift and go to state 37
    empty                          shift and go to state 40

state 95

    (46) whilebody -> WHILE condition LPARENT . instructions RPARENT
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (67) empty -> .

    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 123
    empty                          shift and go to state 16

state 96

    (56) condition -> ID comparator . ID
    (57) condition -> ID comparator . NUMBER

    ID              shift and go to state 124
    NUMBER          shift and go to state 125


state 97

    (34) comparator -> GT .

    ID              reduce using rule 34 (comparator -> GT .)
    NUMBER          reduce using rule 34 (comparator -> GT .)


state 98

    (35) comparator -> LT .

    ID              reduce using rule 35 (comparator -> LT .)
    NUMBER          reduce using rule 35 (comparator -> LT .)


state 99

    (36) comparator -> GET .

    ID              reduce using rule 36 (comparator -> GET .)
    NUMBER          reduce using rule 36 (comparator -> GET .)


state 100

    (37) comparator -> LET .

    ID              reduce using rule 37 (comparator -> LET .)
    NUMBER          reduce using rule 37 (comparator -> LET .)


state 101

    (38) comparator -> EQ .

    ID              reduce using rule 38 (comparator -> EQ .)
    NUMBER          reduce using rule 38 (comparator -> EQ .)


state 102

    (39) comparator -> DT .

    ID              reduce using rule 39 (comparator -> DT .)
    NUMBER          reduce using rule 39 (comparator -> DT .)


state 103

    (58) condition -> NUMBER comparator . ID
    (59) condition -> NUMBER comparator . NUMBER

    ID              shift and go to state 127
    NUMBER          shift and go to state 126


state 104

    (47) casebody -> CASE WHEN LPARENT . condition RPARENT THEN LPARENT instructions RPARENT casebody
    (56) condition -> . ID comparator ID
    (57) condition -> . ID comparator NUMBER
    (58) condition -> . NUMBER comparator ID
    (59) condition -> . NUMBER comparator NUMBER
    (60) condition -> . TRUE
    (61) condition -> . FALSE
    (62) condition -> . istrue
    (63) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 60
    NUMBER          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    VERT            shift and go to state 38

    condition                      shift and go to state 128
    istrue                         shift and go to state 64

state 105

    (51) casebody -> CASE ID innercasebody .

    SEMICOLON       reduce using rule 51 (casebody -> CASE ID innercasebody .)


state 106

    (52) innercasebody -> WHEN . NUMBER THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> WHEN . TRUE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> WHEN . FALSE THEN LPARENT instructions RPARENT innercasebody

    NUMBER          shift and go to state 129
    TRUE            shift and go to state 130
    FALSE           shift and go to state 131


state 107

    (55) innercasebody -> empty .

    SEMICOLON       reduce using rule 55 (innercasebody -> empty .)


state 108

    (63) istrue -> VERT LPARENT ID . RPARENT

    RPARENT         shift and go to state 132


state 109

    (49) case_else -> ELSE LPARENT instructions . RPARENT
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (48) casebody -> . case_else
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (49) case_else -> . ELSE LPARENT instructions RPARENT
    (50) case_else -> . empty
    (67) empty -> .

    RPARENT         shift and go to state 133
    NEW             shift and go to state 19
    VALUES          shift and go to state 20
    ALTER           shift and go to state 21
    ALTERB          shift and go to state 22
    MOVR            shift and go to state 23
    MOVL            shift and go to state 24
    HAMMER          shift and go to state 25
    STOP            shift and go to state 26
    REPEAT          shift and go to state 27
    PRINT           shift and go to state 31
    CALL            shift and go to state 33
    UNTIL           shift and go to state 34
    WHILE           shift and go to state 35
    CASE            shift and go to state 36
    VERT            shift and go to state 38
    ELSE            shift and go to state 39
    SEMICOLON       reduce using rule 67 (empty -> .)

    untilbody                      shift and go to state 28
    whilebody                      shift and go to state 29
    casebody                       shift and go to state 30
    istrue                         shift and go to state 32
    case_else                      shift and go to state 37
    empty                          shift and go to state 40

state 110

    (4) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .

    PRINCIPAL       reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)
    PROCEDURE       reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)
    $end            reduce using rule 4 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)


state 111

    (6) instructions -> instructions NEW ID LPARENT datatype . COMMA value RPARENT SEMICOLON commentary

    COMMA           shift and go to state 134


state 112

    (24) datatype -> NUMVAL .

    COMMA           reduce using rule 24 (datatype -> NUMVAL .)


state 113

    (25) datatype -> BOOLVAL .

    COMMA           reduce using rule 25 (datatype -> BOOLVAL .)


state 114

    (7) instructions -> instructions VALUES LPARENT ID COMMA . value RPARENT SEMICOLON commentary
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 136
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138
    ALTER           shift and go to state 139

    value                          shift and go to state 135

state 115

    (8) instructions -> instructions ALTER LPARENT ID COMMA . operator COMMA value RPARENT SEMICOLON commentary
    (30) operator -> . ADD
    (31) operator -> . SUB
    (32) operator -> . MUL
    (33) operator -> . DIV

    ADD             shift and go to state 141
    SUB             shift and go to state 142
    MUL             shift and go to state 143
    DIV             shift and go to state 144

    operator                       shift and go to state 140

state 116

    (9) instructions -> instructions ALTERB LPARENT ID RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 145


state 117

    (12) instructions -> instructions HAMMER LPARENT position RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 146


state 118

    (44) repeat_instructions -> instructions BREAK . SEMICOLON commentary

    SEMICOLON       shift and go to state 147


state 119

    (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 148


state 120

    (18) instructions -> instructions PRINT LPARENT startvalue RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 149


state 121

    (20) instructions -> instructions CALL LPARENT ID RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 150


state 122

    (45) untilbody -> UNTIL LPARENT instructions RPARENT . condition
    (56) condition -> . ID comparator ID
    (57) condition -> . ID comparator NUMBER
    (58) condition -> . NUMBER comparator ID
    (59) condition -> . NUMBER comparator NUMBER
    (60) condition -> . TRUE
    (61) condition -> . FALSE
    (62) condition -> . istrue
    (63) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 60
    NUMBER          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    VERT            shift and go to state 38

    condition                      shift and go to state 151
    istrue                         shift and go to state 64

state 123

    (46) whilebody -> WHILE condition LPARENT instructions . RPARENT
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (48) casebody -> . case_else
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (49) case_else -> . ELSE LPARENT instructions RPARENT
    (50) case_else -> . empty
    (67) empty -> .

    RPARENT         shift and go to state 152
    NEW             shift and go to state 19
    VALUES          shift and go to state 20
    ALTER           shift and go to state 21
    ALTERB          shift and go to state 22
    MOVR            shift and go to state 23
    MOVL            shift and go to state 24
    HAMMER          shift and go to state 25
    STOP            shift and go to state 26
    REPEAT          shift and go to state 27
    PRINT           shift and go to state 31
    CALL            shift and go to state 33
    UNTIL           shift and go to state 34
    WHILE           shift and go to state 35
    CASE            shift and go to state 36
    VERT            shift and go to state 38
    ELSE            shift and go to state 39
    SEMICOLON       reduce using rule 67 (empty -> .)

    untilbody                      shift and go to state 28
    whilebody                      shift and go to state 29
    casebody                       shift and go to state 30
    istrue                         shift and go to state 32
    case_else                      shift and go to state 37
    empty                          shift and go to state 40

state 124

    (56) condition -> ID comparator ID .

    LPARENT         reduce using rule 56 (condition -> ID comparator ID .)
    RPARENT         reduce using rule 56 (condition -> ID comparator ID .)
    SEMICOLON       reduce using rule 56 (condition -> ID comparator ID .)


state 125

    (57) condition -> ID comparator NUMBER .

    LPARENT         reduce using rule 57 (condition -> ID comparator NUMBER .)
    RPARENT         reduce using rule 57 (condition -> ID comparator NUMBER .)
    SEMICOLON       reduce using rule 57 (condition -> ID comparator NUMBER .)


state 126

    (59) condition -> NUMBER comparator NUMBER .

    LPARENT         reduce using rule 59 (condition -> NUMBER comparator NUMBER .)
    RPARENT         reduce using rule 59 (condition -> NUMBER comparator NUMBER .)
    SEMICOLON       reduce using rule 59 (condition -> NUMBER comparator NUMBER .)


state 127

    (58) condition -> NUMBER comparator ID .

    LPARENT         reduce using rule 58 (condition -> NUMBER comparator ID .)
    RPARENT         reduce using rule 58 (condition -> NUMBER comparator ID .)
    SEMICOLON       reduce using rule 58 (condition -> NUMBER comparator ID .)


state 128

    (47) casebody -> CASE WHEN LPARENT condition . RPARENT THEN LPARENT instructions RPARENT casebody

    RPARENT         shift and go to state 153


state 129

    (52) innercasebody -> WHEN NUMBER . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 154


state 130

    (53) innercasebody -> WHEN TRUE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 155


state 131

    (54) innercasebody -> WHEN FALSE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 156


state 132

    (63) istrue -> VERT LPARENT ID RPARENT .

    SEMICOLON       reduce using rule 63 (istrue -> VERT LPARENT ID RPARENT .)
    LPARENT         reduce using rule 63 (istrue -> VERT LPARENT ID RPARENT .)
    RPARENT         reduce using rule 63 (istrue -> VERT LPARENT ID RPARENT .)


state 133

    (49) case_else -> ELSE LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 49 (case_else -> ELSE LPARENT instructions RPARENT .)


state 134

    (6) instructions -> instructions NEW ID LPARENT datatype COMMA . value RPARENT SEMICOLON commentary
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 136
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138
    ALTER           shift and go to state 139

    value                          shift and go to state 157

state 135

    (7) instructions -> instructions VALUES LPARENT ID COMMA value . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 158


state 136

    (26) value -> NUMBER .

    RPARENT         reduce using rule 26 (value -> NUMBER .)


state 137

    (27) value -> TRUE .

    RPARENT         reduce using rule 27 (value -> TRUE .)


state 138

    (28) value -> FALSE .

    RPARENT         reduce using rule 28 (value -> FALSE .)


state 139

    (29) value -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT

    LPARENT         shift and go to state 159


state 140

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator . COMMA value RPARENT SEMICOLON commentary

    COMMA           shift and go to state 160


state 141

    (30) operator -> ADD .

    COMMA           reduce using rule 30 (operator -> ADD .)


state 142

    (31) operator -> SUB .

    COMMA           reduce using rule 31 (operator -> SUB .)


state 143

    (32) operator -> MUL .

    COMMA           reduce using rule 32 (operator -> MUL .)


state 144

    (33) operator -> DIV .

    COMMA           reduce using rule 33 (operator -> DIV .)


state 145

    (9) instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 161
    empty                          shift and go to state 76

state 146

    (12) instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 162
    empty                          shift and go to state 76

state 147

    (44) repeat_instructions -> instructions BREAK SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 163
    empty                          shift and go to state 76

state 148

    (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 164
    empty                          shift and go to state 76

state 149

    (18) instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 165
    empty                          shift and go to state 76

state 150

    (20) instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 166
    empty                          shift and go to state 76

state 151

    (45) untilbody -> UNTIL LPARENT instructions RPARENT condition .

    SEMICOLON       reduce using rule 45 (untilbody -> UNTIL LPARENT instructions RPARENT condition .)


state 152

    (46) whilebody -> WHILE condition LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 46 (whilebody -> WHILE condition LPARENT instructions RPARENT .)


state 153

    (47) casebody -> CASE WHEN LPARENT condition RPARENT . THEN LPARENT instructions RPARENT casebody

    THEN            shift and go to state 167


state 154

    (52) innercasebody -> WHEN NUMBER THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 168


state 155

    (53) innercasebody -> WHEN TRUE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 169


state 156

    (54) innercasebody -> WHEN FALSE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 170


state 157

    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 171


state 158

    (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 172


state 159

    (29) value -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT

    ID              shift and go to state 173


state 160

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA . value RPARENT SEMICOLON commentary
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 136
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138
    ALTER           shift and go to state 139

    value                          shift and go to state 174

state 161

    (9) instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    ELSE            reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    SEMICOLON       reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 9 (instructions -> instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary .)


state 162

    (12) instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    ELSE            reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    SEMICOLON       reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 12 (instructions -> instructions HAMMER LPARENT position RPARENT SEMICOLON commentary .)


state 163

    (44) repeat_instructions -> instructions BREAK SEMICOLON commentary .

    RPARENT         reduce using rule 44 (repeat_instructions -> instructions BREAK SEMICOLON commentary .)


state 164

    (14) instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    ELSE            reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    SEMICOLON       reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 14 (instructions -> instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary .)


state 165

    (18) instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    ELSE            reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    SEMICOLON       reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 18 (instructions -> instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary .)


state 166

    (20) instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    ELSE            reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    SEMICOLON       reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 20 (instructions -> instructions CALL LPARENT ID RPARENT SEMICOLON commentary .)


state 167

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN . LPARENT instructions RPARENT casebody

    LPARENT         shift and go to state 175


state 168

    (52) innercasebody -> WHEN NUMBER THEN LPARENT . instructions RPARENT innercasebody
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (67) empty -> .

    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 176
    empty                          shift and go to state 16

state 169

    (53) innercasebody -> WHEN TRUE THEN LPARENT . instructions RPARENT innercasebody
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (67) empty -> .

    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 177
    empty                          shift and go to state 16

state 170

    (54) innercasebody -> WHEN FALSE THEN LPARENT . instructions RPARENT innercasebody
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (67) empty -> .

    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 178
    empty                          shift and go to state 16

state 171

    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 179


state 172

    (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 180
    empty                          shift and go to state 76

state 173

    (29) value -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT

    COMMA           shift and go to state 181


state 174

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value . RPARENT SEMICOLON commentary

    RPARENT         shift and go to state 182


state 175

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT . instructions RPARENT casebody
    (6) instructions -> . instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> . instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> . instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> . instructions ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> . instructions MOVR SEMICOLON commentary
    (11) instructions -> . instructions MOVL SEMICOLON commentary
    (12) instructions -> . instructions HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> . instructions STOP SEMICOLON commentary
    (14) instructions -> . instructions REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> . instructions untilbody SEMICOLON commentary
    (16) instructions -> . instructions whilebody SEMICOLON commentary
    (17) instructions -> . instructions casebody SEMICOLON commentary
    (18) instructions -> . instructions PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> . instructions istrue SEMICOLON commentary
    (20) instructions -> . instructions CALL LPARENT ID RPARENT SEMICOLON commentary
    (21) instructions -> . empty
    (67) empty -> .

    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 183
    empty                          shift and go to state 16

state 176

    (52) innercasebody -> WHEN NUMBER THEN LPARENT instructions . RPARENT innercasebody
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (48) casebody -> . case_else
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (49) case_else -> . ELSE LPARENT instructions RPARENT
    (50) case_else -> . empty
    (67) empty -> .

    RPARENT         shift and go to state 184
    NEW             shift and go to state 19
    VALUES          shift and go to state 20
    ALTER           shift and go to state 21
    ALTERB          shift and go to state 22
    MOVR            shift and go to state 23
    MOVL            shift and go to state 24
    HAMMER          shift and go to state 25
    STOP            shift and go to state 26
    REPEAT          shift and go to state 27
    PRINT           shift and go to state 31
    CALL            shift and go to state 33
    UNTIL           shift and go to state 34
    WHILE           shift and go to state 35
    CASE            shift and go to state 36
    VERT            shift and go to state 38
    ELSE            shift and go to state 39
    SEMICOLON       reduce using rule 67 (empty -> .)

    untilbody                      shift and go to state 28
    whilebody                      shift and go to state 29
    casebody                       shift and go to state 30
    istrue                         shift and go to state 32
    case_else                      shift and go to state 37
    empty                          shift and go to state 40

state 177

    (53) innercasebody -> WHEN TRUE THEN LPARENT instructions . RPARENT innercasebody
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (48) casebody -> . case_else
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (49) case_else -> . ELSE LPARENT instructions RPARENT
    (50) case_else -> . empty
    (67) empty -> .

    RPARENT         shift and go to state 185
    NEW             shift and go to state 19
    VALUES          shift and go to state 20
    ALTER           shift and go to state 21
    ALTERB          shift and go to state 22
    MOVR            shift and go to state 23
    MOVL            shift and go to state 24
    HAMMER          shift and go to state 25
    STOP            shift and go to state 26
    REPEAT          shift and go to state 27
    PRINT           shift and go to state 31
    CALL            shift and go to state 33
    UNTIL           shift and go to state 34
    WHILE           shift and go to state 35
    CASE            shift and go to state 36
    VERT            shift and go to state 38
    ELSE            shift and go to state 39
    SEMICOLON       reduce using rule 67 (empty -> .)

    untilbody                      shift and go to state 28
    whilebody                      shift and go to state 29
    casebody                       shift and go to state 30
    istrue                         shift and go to state 32
    case_else                      shift and go to state 37
    empty                          shift and go to state 40

state 178

    (54) innercasebody -> WHEN FALSE THEN LPARENT instructions . RPARENT innercasebody
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (48) casebody -> . case_else
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (49) case_else -> . ELSE LPARENT instructions RPARENT
    (50) case_else -> . empty
    (67) empty -> .

    RPARENT         shift and go to state 186
    NEW             shift and go to state 19
    VALUES          shift and go to state 20
    ALTER           shift and go to state 21
    ALTERB          shift and go to state 22
    MOVR            shift and go to state 23
    MOVL            shift and go to state 24
    HAMMER          shift and go to state 25
    STOP            shift and go to state 26
    REPEAT          shift and go to state 27
    PRINT           shift and go to state 31
    CALL            shift and go to state 33
    UNTIL           shift and go to state 34
    WHILE           shift and go to state 35
    CASE            shift and go to state 36
    VERT            shift and go to state 38
    ELSE            shift and go to state 39
    SEMICOLON       reduce using rule 67 (empty -> .)

    untilbody                      shift and go to state 28
    whilebody                      shift and go to state 29
    casebody                       shift and go to state 30
    istrue                         shift and go to state 32
    case_else                      shift and go to state 37
    empty                          shift and go to state 40

state 179

    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 187
    empty                          shift and go to state 76

state 180

    (7) instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    ELSE            reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    SEMICOLON       reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 7 (instructions -> instructions VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary .)


state 181

    (29) value -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT
    (30) operator -> . ADD
    (31) operator -> . SUB
    (32) operator -> . MUL
    (33) operator -> . DIV

    ADD             shift and go to state 141
    SUB             shift and go to state 142
    MUL             shift and go to state 143
    DIV             shift and go to state 144

    operator                       shift and go to state 188

state 182

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT . SEMICOLON commentary

    SEMICOLON       shift and go to state 189


state 183

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions . RPARENT casebody
    (6) instructions -> instructions . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary
    (7) instructions -> instructions . VALUES LPARENT ID COMMA value RPARENT SEMICOLON commentary
    (8) instructions -> instructions . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary
    (9) instructions -> instructions . ALTERB LPARENT ID RPARENT SEMICOLON commentary
    (10) instructions -> instructions . MOVR SEMICOLON commentary
    (11) instructions -> instructions . MOVL SEMICOLON commentary
    (12) instructions -> instructions . HAMMER LPARENT position RPARENT SEMICOLON commentary
    (13) instructions -> instructions . STOP SEMICOLON commentary
    (14) instructions -> instructions . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON commentary
    (15) instructions -> instructions . untilbody SEMICOLON commentary
    (16) instructions -> instructions . whilebody SEMICOLON commentary
    (17) instructions -> instructions . casebody SEMICOLON commentary
    (18) instructions -> instructions . PRINT LPARENT startvalue RPARENT SEMICOLON commentary
    (19) instructions -> instructions . istrue SEMICOLON commentary
    (20) instructions -> instructions . CALL LPARENT ID RPARENT SEMICOLON commentary
    (45) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (46) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (48) casebody -> . case_else
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (49) case_else -> . ELSE LPARENT instructions RPARENT
    (50) case_else -> . empty
    (67) empty -> .

    RPARENT         shift and go to state 190
    NEW             shift and go to state 19
    VALUES          shift and go to state 20
    ALTER           shift and go to state 21
    ALTERB          shift and go to state 22
    MOVR            shift and go to state 23
    MOVL            shift and go to state 24
    HAMMER          shift and go to state 25
    STOP            shift and go to state 26
    REPEAT          shift and go to state 27
    PRINT           shift and go to state 31
    CALL            shift and go to state 33
    UNTIL           shift and go to state 34
    WHILE           shift and go to state 35
    CASE            shift and go to state 36
    VERT            shift and go to state 38
    ELSE            shift and go to state 39
    SEMICOLON       reduce using rule 67 (empty -> .)

    casebody                       shift and go to state 30
    untilbody                      shift and go to state 28
    whilebody                      shift and go to state 29
    istrue                         shift and go to state 32
    case_else                      shift and go to state 37
    empty                          shift and go to state 40

state 184

    (52) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT . innercasebody
    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (55) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 106
    SEMICOLON       reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 191
    empty                          shift and go to state 107

state 185

    (53) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT . innercasebody
    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (55) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 106
    SEMICOLON       reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 192
    empty                          shift and go to state 107

state 186

    (54) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT . innercasebody
    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (55) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 106
    SEMICOLON       reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 193
    empty                          shift and go to state 107

state 187

    (6) instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    ELSE            reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    SEMICOLON       reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 6 (instructions -> instructions NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON commentary .)


state 188

    (29) value -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT

    COMMA           shift and go to state 194


state 189

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON . commentary
    (22) commentary -> . COMMENT
    (23) commentary -> . empty
    (67) empty -> .

    COMMENT         shift and go to state 75
    RPARENT         reduce using rule 67 (empty -> .)
    NEW             reduce using rule 67 (empty -> .)
    VALUES          reduce using rule 67 (empty -> .)
    ALTER           reduce using rule 67 (empty -> .)
    ALTERB          reduce using rule 67 (empty -> .)
    MOVR            reduce using rule 67 (empty -> .)
    MOVL            reduce using rule 67 (empty -> .)
    HAMMER          reduce using rule 67 (empty -> .)
    STOP            reduce using rule 67 (empty -> .)
    REPEAT          reduce using rule 67 (empty -> .)
    PRINT           reduce using rule 67 (empty -> .)
    CALL            reduce using rule 67 (empty -> .)
    UNTIL           reduce using rule 67 (empty -> .)
    WHILE           reduce using rule 67 (empty -> .)
    CASE            reduce using rule 67 (empty -> .)
    VERT            reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)
    SEMICOLON       reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    commentary                     shift and go to state 195
    empty                          shift and go to state 76

state 190

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT . casebody
    (47) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody
    (48) casebody -> . case_else
    (51) casebody -> . CASE ID innercasebody
    (49) case_else -> . ELSE LPARENT instructions RPARENT
    (50) case_else -> . empty
    (67) empty -> .

    CASE            shift and go to state 36
    ELSE            shift and go to state 39
    SEMICOLON       reduce using rule 67 (empty -> .)

    casebody                       shift and go to state 196
    case_else                      shift and go to state 37
    empty                          shift and go to state 40

state 191

    (52) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 52 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)


state 192

    (53) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 53 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)


state 193

    (54) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 54 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)


state 194

    (29) value -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT
    (26) value -> . NUMBER
    (27) value -> . TRUE
    (28) value -> . FALSE
    (29) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 136
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138
    ALTER           shift and go to state 139

    value                          shift and go to state 197

state 195

    (8) instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .

    RPARENT         reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    NEW             reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    VALUES          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    ALTER           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    ALTERB          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    MOVR            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    MOVL            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    HAMMER          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    STOP            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    REPEAT          reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    PRINT           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    CALL            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    UNTIL           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    WHILE           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    CASE            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    VERT            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    ELSE            reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    SEMICOLON       reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)
    BREAK           reduce using rule 8 (instructions -> instructions ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON commentary .)


state 196

    (47) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody .

    SEMICOLON       reduce using rule 47 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT casebody .)


state 197

    (29) value -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT

    RPARENT         shift and go to state 198


state 198

    (29) value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .

    RPARENT         reduce using rule 29 (value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PROCEDURE in state 2 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 69 resolved as shift
