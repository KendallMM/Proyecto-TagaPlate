Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> COMMENT principalproc procedures
Rule 2     principalproc -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON
Rule 3     procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
Rule 4     procedures -> empty
Rule 5     instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
Rule 6     instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
Rule 7     instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
Rule 8     instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions
Rule 9     instructions -> MOVR SEMICOLON instructions
Rule 10    instructions -> MOVL SEMICOLON instructions
Rule 11    instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions
Rule 12    instructions -> STOP SEMICOLON instructions
Rule 13    instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
Rule 14    instructions -> untilbody SEMICOLON instructions
Rule 15    instructions -> whilebody SEMICOLON instructions
Rule 16    instructions -> casebody SEMICOLON instructions
Rule 17    instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions
Rule 18    instructions -> istrue SEMICOLON instructions
Rule 19    instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions
Rule 20    instructions -> instructions COMMENT
Rule 21    instructions -> empty
Rule 22    datatype -> NUMVAL
Rule 23    datatype -> BOOLVAL
Rule 24    value -> NUMBER
Rule 25    value -> TRUE
Rule 26    value -> FALSE
Rule 27    value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT
Rule 28    operator -> ADD
Rule 29    operator -> SUB
Rule 30    operator -> MUL
Rule 31    operator -> DIV
Rule 32    comparator -> GT
Rule 33    comparator -> LT
Rule 34    comparator -> GET
Rule 35    comparator -> LET
Rule 36    comparator -> EQ
Rule 37    comparator -> DT
Rule 38    position -> NORTH
Rule 39    position -> SOUTH
Rule 40    position -> EAST
Rule 41    position -> WEST
Rule 42    repeat_instructions -> instructions BREAK
Rule 43    untilbody -> UNTIL LPARENT instructions RPARENT condition
Rule 44    whilebody -> WHILE condition LPARENT instructions RPARENT
Rule 45    casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
Rule 46    casebody -> casebody ELSE LPARENT instructions RPARENT
Rule 47    casebody -> CASE ID innercasebody
Rule 48    innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
Rule 49    innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
Rule 50    innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
Rule 51    innercasebody -> empty
Rule 52    condition -> ID comparator ID
Rule 53    condition -> ID comparator NUMBER
Rule 54    condition -> NUMBER comparator ID
Rule 55    condition -> NUMBER comparator NUMBER
Rule 56    condition -> TRUE
Rule 57    condition -> FALSE
Rule 58    condition -> istrue
Rule 59    istrue -> VERT LPARENT ID RPARENT
Rule 60    printvalues -> startvalue printvalues
Rule 61    printvalues -> COMMA STRING printvalues
Rule 62    printvalues -> COMMA ID printvalues
Rule 63    printvalues -> empty
Rule 64    startvalue -> STRING
Rule 65    startvalue -> ID
Rule 66    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 28
ALTER                : 7 27
ALTERB               : 8
BOOLVAL              : 23
BREAK                : 42
CALL                 : 19
CASE                 : 45 47
COMMA                : 5 6 7 7 27 27 61 62
COMMENT              : 1 20
DIV                  : 31
DT                   : 37
EAST                 : 40
ELSE                 : 46
EQ                   : 36
FALSE                : 26 50 57
GET                  : 34
GT                   : 32
HAMMER               : 11
ID                   : 3 5 6 7 19 27 47 52 52 53 54 59 62 65
LET                  : 35
LPARENT              : 2 3 5 6 7 8 11 13 17 19 27 43 44 45 45 46 48 49 50 59
LT                   : 33
MOVL                 : 10
MOVR                 : 9
MUL                  : 30
NEW                  : 5
NORTH                : 38
NUMBER               : 24 48 53 54 55 55
NUMVAL               : 22
PRINCIPAL            : 2
PRINT                : 17
PROCEDURE            : 3
REPEAT               : 13
RPARENT              : 2 3 5 6 7 8 11 13 17 19 27 43 44 45 45 46 48 49 50 59
SEMICOLON            : 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
SOUTH                : 39
STOP                 : 12
STRING               : 61 64
SUB                  : 29
THEN                 : 45 48 49 50
TRUE                 : 25 49 56
UNTIL                : 43
VALUES               : 6
VERT                 : 59
WEST                 : 41
WHEN                 : 45 48 49 50
WHILE                : 44
error                : 

Nonterminals, with rules where they appear

casebody             : 16 46
comparator           : 52 53 54 55
condition            : 43 44 45
datatype             : 5
empty                : 4 21 51 63
innercasebody        : 47 48 49 50
instructions         : 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 42 43 44 45 46 48 49 50
istrue               : 18 58
operator             : 7 27
position             : 11
principalproc        : 1
printvalues          : 17 60 61 62
procedures           : 1 3
program              : 0
repeat_instructions  : 13
startvalue           : 60
untilbody            : 14
value                : 5 6 7 8 27
whilebody            : 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . COMMENT principalproc procedures

    COMMENT         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> COMMENT . principalproc procedures
    (2) principalproc -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON

    PRINCIPAL       shift and go to state 4

    principalproc                  shift and go to state 3

state 3

    (1) program -> COMMENT principalproc . procedures
    (3) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
    (4) procedures -> . empty
    (66) empty -> .

    PROCEDURE       shift and go to state 6
    $end            reduce using rule 66 (empty -> .)

    procedures                     shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) principalproc -> PRINCIPAL . LPARENT instructions RPARENT SEMICOLON

    LPARENT         shift and go to state 8


state 5

    (1) program -> COMMENT principalproc procedures .

    $end            reduce using rule 1 (program -> COMMENT principalproc procedures .)


state 6

    (3) procedures -> PROCEDURE . ID LPARENT instructions RPARENT SEMICOLON procedures

    ID              shift and go to state 9


state 7

    (4) procedures -> empty .

    $end            reduce using rule 4 (procedures -> empty .)


state 8

    (2) principalproc -> PRINCIPAL LPARENT . instructions RPARENT SEMICOLON
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    RPARENT         reduce using rule 66 (empty -> .)
    COMMENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 10
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 9

    (3) procedures -> PROCEDURE ID . LPARENT instructions RPARENT SEMICOLON procedures

    LPARENT         shift and go to state 31


state 10

    (2) principalproc -> PRINCIPAL LPARENT instructions . RPARENT SEMICOLON
    (20) instructions -> instructions . COMMENT

    RPARENT         shift and go to state 32
    COMMENT         shift and go to state 33


state 11

    (5) instructions -> NEW . ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 34


state 12

    (6) instructions -> VALUES . LPARENT ID COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 35


state 13

    (7) instructions -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 36


state 14

    (8) instructions -> ALTERB . LPARENT value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 37


state 15

    (9) instructions -> MOVR . SEMICOLON instructions

    SEMICOLON       shift and go to state 38


state 16

    (10) instructions -> MOVL . SEMICOLON instructions

    SEMICOLON       shift and go to state 39


state 17

    (11) instructions -> HAMMER . LPARENT position RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 40


state 18

    (12) instructions -> STOP . SEMICOLON instructions

    SEMICOLON       shift and go to state 41


state 19

    (13) instructions -> REPEAT . LPARENT repeat_instructions RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 42


state 20

    (14) instructions -> untilbody . SEMICOLON instructions

    SEMICOLON       shift and go to state 43


state 21

    (15) instructions -> whilebody . SEMICOLON instructions

    SEMICOLON       shift and go to state 44


state 22

    (16) instructions -> casebody . SEMICOLON instructions
    (46) casebody -> casebody . ELSE LPARENT instructions RPARENT

    SEMICOLON       shift and go to state 45
    ELSE            shift and go to state 46


state 23

    (17) instructions -> PRINT . LPARENT printvalues RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 47


state 24

    (18) instructions -> istrue . SEMICOLON instructions

    SEMICOLON       shift and go to state 48


state 25

    (19) instructions -> CALL . LPARENT ID RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 49


state 26

    (21) instructions -> empty .

    RPARENT         reduce using rule 21 (instructions -> empty .)
    COMMENT         reduce using rule 21 (instructions -> empty .)
    BREAK           reduce using rule 21 (instructions -> empty .)


state 27

    (43) untilbody -> UNTIL . LPARENT instructions RPARENT condition

    LPARENT         shift and go to state 50


state 28

    (44) whilebody -> WHILE . condition LPARENT instructions RPARENT
    (52) condition -> . ID comparator ID
    (53) condition -> . ID comparator NUMBER
    (54) condition -> . NUMBER comparator ID
    (55) condition -> . NUMBER comparator NUMBER
    (56) condition -> . TRUE
    (57) condition -> . FALSE
    (58) condition -> . istrue
    (59) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 52
    NUMBER          shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    VERT            shift and go to state 30

    condition                      shift and go to state 51
    istrue                         shift and go to state 56

state 29

    (45) casebody -> CASE . WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (47) casebody -> CASE . ID innercasebody

    WHEN            shift and go to state 57
    ID              shift and go to state 58


state 30

    (59) istrue -> VERT . LPARENT ID RPARENT

    LPARENT         shift and go to state 59


state 31

    (3) procedures -> PROCEDURE ID LPARENT . instructions RPARENT SEMICOLON procedures
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    RPARENT         reduce using rule 66 (empty -> .)
    COMMENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 60
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 32

    (2) principalproc -> PRINCIPAL LPARENT instructions RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 61


state 33

    (20) instructions -> instructions COMMENT .

    RPARENT         reduce using rule 20 (instructions -> instructions COMMENT .)
    COMMENT         reduce using rule 20 (instructions -> instructions COMMENT .)
    BREAK           reduce using rule 20 (instructions -> instructions COMMENT .)


state 34

    (5) instructions -> NEW ID . LPARENT datatype COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 62


state 35

    (6) instructions -> VALUES LPARENT . ID COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 63


state 36

    (7) instructions -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 64


state 37

    (8) instructions -> ALTERB LPARENT . value RPARENT SEMICOLON instructions
    (24) value -> . NUMBER
    (25) value -> . TRUE
    (26) value -> . FALSE
    (27) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    ALTER           shift and go to state 69

    value                          shift and go to state 65

state 38

    (9) instructions -> MOVR SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 70
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 39

    (10) instructions -> MOVL SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 71
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 40

    (11) instructions -> HAMMER LPARENT . position RPARENT SEMICOLON instructions
    (38) position -> . NORTH
    (39) position -> . SOUTH
    (40) position -> . EAST
    (41) position -> . WEST

    NORTH           shift and go to state 73
    SOUTH           shift and go to state 74
    EAST            shift and go to state 75
    WEST            shift and go to state 76

    position                       shift and go to state 72

state 41

    (12) instructions -> STOP SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 77
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 42

    (13) instructions -> REPEAT LPARENT . repeat_instructions RPARENT SEMICOLON instructions
    (42) repeat_instructions -> . instructions BREAK
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    BREAK           reduce using rule 66 (empty -> .)
    COMMENT         reduce using rule 66 (empty -> .)

    repeat_instructions            shift and go to state 78
    instructions                   shift and go to state 79
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 43

    (14) instructions -> untilbody SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    untilbody                      shift and go to state 20
    instructions                   shift and go to state 80
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 44

    (15) instructions -> whilebody SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    whilebody                      shift and go to state 21
    instructions                   shift and go to state 81
    untilbody                      shift and go to state 20
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 45

    (16) instructions -> casebody SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    casebody                       shift and go to state 22
    instructions                   shift and go to state 82
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 46

    (46) casebody -> casebody ELSE . LPARENT instructions RPARENT

    LPARENT         shift and go to state 83


state 47

    (17) instructions -> PRINT LPARENT . printvalues RPARENT SEMICOLON instructions
    (60) printvalues -> . startvalue printvalues
    (61) printvalues -> . COMMA STRING printvalues
    (62) printvalues -> . COMMA ID printvalues
    (63) printvalues -> . empty
    (64) startvalue -> . STRING
    (65) startvalue -> . ID
    (66) empty -> .

    COMMA           shift and go to state 86
    STRING          shift and go to state 87
    ID              shift and go to state 88
    RPARENT         reduce using rule 66 (empty -> .)

    printvalues                    shift and go to state 84
    startvalue                     shift and go to state 85
    empty                          shift and go to state 89

state 48

    (18) instructions -> istrue SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    istrue                         shift and go to state 24
    instructions                   shift and go to state 90
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    empty                          shift and go to state 26

state 49

    (19) instructions -> CALL LPARENT . ID RPARENT SEMICOLON instructions

    ID              shift and go to state 91


state 50

    (43) untilbody -> UNTIL LPARENT . instructions RPARENT condition
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    RPARENT         reduce using rule 66 (empty -> .)
    COMMENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 92
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 51

    (44) whilebody -> WHILE condition . LPARENT instructions RPARENT

    LPARENT         shift and go to state 93


state 52

    (52) condition -> ID . comparator ID
    (53) condition -> ID . comparator NUMBER
    (32) comparator -> . GT
    (33) comparator -> . LT
    (34) comparator -> . GET
    (35) comparator -> . LET
    (36) comparator -> . EQ
    (37) comparator -> . DT

    GT              shift and go to state 95
    LT              shift and go to state 96
    GET             shift and go to state 97
    LET             shift and go to state 98
    EQ              shift and go to state 99
    DT              shift and go to state 100

    comparator                     shift and go to state 94

state 53

    (54) condition -> NUMBER . comparator ID
    (55) condition -> NUMBER . comparator NUMBER
    (32) comparator -> . GT
    (33) comparator -> . LT
    (34) comparator -> . GET
    (35) comparator -> . LET
    (36) comparator -> . EQ
    (37) comparator -> . DT

    GT              shift and go to state 95
    LT              shift and go to state 96
    GET             shift and go to state 97
    LET             shift and go to state 98
    EQ              shift and go to state 99
    DT              shift and go to state 100

    comparator                     shift and go to state 101

state 54

    (56) condition -> TRUE .

    LPARENT         reduce using rule 56 (condition -> TRUE .)
    RPARENT         reduce using rule 56 (condition -> TRUE .)
    SEMICOLON       reduce using rule 56 (condition -> TRUE .)


state 55

    (57) condition -> FALSE .

    LPARENT         reduce using rule 57 (condition -> FALSE .)
    RPARENT         reduce using rule 57 (condition -> FALSE .)
    SEMICOLON       reduce using rule 57 (condition -> FALSE .)


state 56

    (58) condition -> istrue .

    LPARENT         reduce using rule 58 (condition -> istrue .)
    RPARENT         reduce using rule 58 (condition -> istrue .)
    SEMICOLON       reduce using rule 58 (condition -> istrue .)


state 57

    (45) casebody -> CASE WHEN . LPARENT condition RPARENT THEN LPARENT instructions RPARENT

    LPARENT         shift and go to state 102


state 58

    (47) casebody -> CASE ID . innercasebody
    (48) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (49) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (50) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . empty
    (66) empty -> .

    WHEN            shift and go to state 104
    SEMICOLON       reduce using rule 66 (empty -> .)
    ELSE            reduce using rule 66 (empty -> .)

    innercasebody                  shift and go to state 103
    empty                          shift and go to state 105

state 59

    (59) istrue -> VERT LPARENT . ID RPARENT

    ID              shift and go to state 106


state 60

    (3) procedures -> PROCEDURE ID LPARENT instructions . RPARENT SEMICOLON procedures
    (20) instructions -> instructions . COMMENT

    RPARENT         shift and go to state 107
    COMMENT         shift and go to state 33


state 61

    (2) principalproc -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .

    PROCEDURE       reduce using rule 2 (principalproc -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    $end            reduce using rule 2 (principalproc -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)


state 62

    (5) instructions -> NEW ID LPARENT . datatype COMMA value RPARENT SEMICOLON instructions
    (22) datatype -> . NUMVAL
    (23) datatype -> . BOOLVAL

    NUMVAL          shift and go to state 109
    BOOLVAL         shift and go to state 110

    datatype                       shift and go to state 108

state 63

    (6) instructions -> VALUES LPARENT ID . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 111


state 64

    (7) instructions -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 112


state 65

    (8) instructions -> ALTERB LPARENT value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 113


state 66

    (24) value -> NUMBER .

    RPARENT         reduce using rule 24 (value -> NUMBER .)


state 67

    (25) value -> TRUE .

    RPARENT         reduce using rule 25 (value -> TRUE .)


state 68

    (26) value -> FALSE .

    RPARENT         reduce using rule 26 (value -> FALSE .)


state 69

    (27) value -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT

    LPARENT         shift and go to state 114


state 70

    (9) instructions -> MOVR SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 9 (instructions -> MOVR SEMICOLON instructions .)
    BREAK           reduce using rule 9 (instructions -> MOVR SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 9 (instructions -> MOVR SEMICOLON instructions .) ]


state 71

    (10) instructions -> MOVL SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 10 (instructions -> MOVL SEMICOLON instructions .)
    BREAK           reduce using rule 10 (instructions -> MOVL SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 10 (instructions -> MOVL SEMICOLON instructions .) ]


state 72

    (11) instructions -> HAMMER LPARENT position . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 115


state 73

    (38) position -> NORTH .

    RPARENT         reduce using rule 38 (position -> NORTH .)


state 74

    (39) position -> SOUTH .

    RPARENT         reduce using rule 39 (position -> SOUTH .)


state 75

    (40) position -> EAST .

    RPARENT         reduce using rule 40 (position -> EAST .)


state 76

    (41) position -> WEST .

    RPARENT         reduce using rule 41 (position -> WEST .)


state 77

    (12) instructions -> STOP SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 12 (instructions -> STOP SEMICOLON instructions .)
    BREAK           reduce using rule 12 (instructions -> STOP SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 12 (instructions -> STOP SEMICOLON instructions .) ]


state 78

    (13) instructions -> REPEAT LPARENT repeat_instructions . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 116


state 79

    (42) repeat_instructions -> instructions . BREAK
    (20) instructions -> instructions . COMMENT

    BREAK           shift and go to state 117
    COMMENT         shift and go to state 33


state 80

    (14) instructions -> untilbody SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 14 (instructions -> untilbody SEMICOLON instructions .)
    BREAK           reduce using rule 14 (instructions -> untilbody SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 14 (instructions -> untilbody SEMICOLON instructions .) ]


state 81

    (15) instructions -> whilebody SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 15 (instructions -> whilebody SEMICOLON instructions .)
    BREAK           reduce using rule 15 (instructions -> whilebody SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 15 (instructions -> whilebody SEMICOLON instructions .) ]


state 82

    (16) instructions -> casebody SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 16 (instructions -> casebody SEMICOLON instructions .)
    BREAK           reduce using rule 16 (instructions -> casebody SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 16 (instructions -> casebody SEMICOLON instructions .) ]


state 83

    (46) casebody -> casebody ELSE LPARENT . instructions RPARENT
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    RPARENT         reduce using rule 66 (empty -> .)
    COMMENT         reduce using rule 66 (empty -> .)

    casebody                       shift and go to state 22
    instructions                   shift and go to state 118
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 84

    (17) instructions -> PRINT LPARENT printvalues . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 119


state 85

    (60) printvalues -> startvalue . printvalues
    (60) printvalues -> . startvalue printvalues
    (61) printvalues -> . COMMA STRING printvalues
    (62) printvalues -> . COMMA ID printvalues
    (63) printvalues -> . empty
    (64) startvalue -> . STRING
    (65) startvalue -> . ID
    (66) empty -> .

    COMMA           shift and go to state 86
    STRING          shift and go to state 87
    ID              shift and go to state 88
    RPARENT         reduce using rule 66 (empty -> .)

    startvalue                     shift and go to state 85
    printvalues                    shift and go to state 120
    empty                          shift and go to state 89

state 86

    (61) printvalues -> COMMA . STRING printvalues
    (62) printvalues -> COMMA . ID printvalues

    STRING          shift and go to state 121
    ID              shift and go to state 122


state 87

    (64) startvalue -> STRING .

    COMMA           reduce using rule 64 (startvalue -> STRING .)
    STRING          reduce using rule 64 (startvalue -> STRING .)
    ID              reduce using rule 64 (startvalue -> STRING .)
    RPARENT         reduce using rule 64 (startvalue -> STRING .)


state 88

    (65) startvalue -> ID .

    COMMA           reduce using rule 65 (startvalue -> ID .)
    STRING          reduce using rule 65 (startvalue -> ID .)
    ID              reduce using rule 65 (startvalue -> ID .)
    RPARENT         reduce using rule 65 (startvalue -> ID .)


state 89

    (63) printvalues -> empty .

    RPARENT         reduce using rule 63 (printvalues -> empty .)


state 90

    (18) instructions -> istrue SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 18 (instructions -> istrue SEMICOLON instructions .)
    BREAK           reduce using rule 18 (instructions -> istrue SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 18 (instructions -> istrue SEMICOLON instructions .) ]


state 91

    (19) instructions -> CALL LPARENT ID . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 123


state 92

    (43) untilbody -> UNTIL LPARENT instructions . RPARENT condition
    (20) instructions -> instructions . COMMENT

    RPARENT         shift and go to state 124
    COMMENT         shift and go to state 33


state 93

    (44) whilebody -> WHILE condition LPARENT . instructions RPARENT
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    RPARENT         reduce using rule 66 (empty -> .)
    COMMENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 125
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 94

    (52) condition -> ID comparator . ID
    (53) condition -> ID comparator . NUMBER

    ID              shift and go to state 126
    NUMBER          shift and go to state 127


state 95

    (32) comparator -> GT .

    ID              reduce using rule 32 (comparator -> GT .)
    NUMBER          reduce using rule 32 (comparator -> GT .)


state 96

    (33) comparator -> LT .

    ID              reduce using rule 33 (comparator -> LT .)
    NUMBER          reduce using rule 33 (comparator -> LT .)


state 97

    (34) comparator -> GET .

    ID              reduce using rule 34 (comparator -> GET .)
    NUMBER          reduce using rule 34 (comparator -> GET .)


state 98

    (35) comparator -> LET .

    ID              reduce using rule 35 (comparator -> LET .)
    NUMBER          reduce using rule 35 (comparator -> LET .)


state 99

    (36) comparator -> EQ .

    ID              reduce using rule 36 (comparator -> EQ .)
    NUMBER          reduce using rule 36 (comparator -> EQ .)


state 100

    (37) comparator -> DT .

    ID              reduce using rule 37 (comparator -> DT .)
    NUMBER          reduce using rule 37 (comparator -> DT .)


state 101

    (54) condition -> NUMBER comparator . ID
    (55) condition -> NUMBER comparator . NUMBER

    ID              shift and go to state 129
    NUMBER          shift and go to state 128


state 102

    (45) casebody -> CASE WHEN LPARENT . condition RPARENT THEN LPARENT instructions RPARENT
    (52) condition -> . ID comparator ID
    (53) condition -> . ID comparator NUMBER
    (54) condition -> . NUMBER comparator ID
    (55) condition -> . NUMBER comparator NUMBER
    (56) condition -> . TRUE
    (57) condition -> . FALSE
    (58) condition -> . istrue
    (59) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 52
    NUMBER          shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    VERT            shift and go to state 30

    condition                      shift and go to state 130
    istrue                         shift and go to state 56

state 103

    (47) casebody -> CASE ID innercasebody .

    SEMICOLON       reduce using rule 47 (casebody -> CASE ID innercasebody .)
    ELSE            reduce using rule 47 (casebody -> CASE ID innercasebody .)


state 104

    (48) innercasebody -> WHEN . NUMBER THEN LPARENT instructions RPARENT innercasebody
    (49) innercasebody -> WHEN . TRUE THEN LPARENT instructions RPARENT innercasebody
    (50) innercasebody -> WHEN . FALSE THEN LPARENT instructions RPARENT innercasebody

    NUMBER          shift and go to state 131
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133


state 105

    (51) innercasebody -> empty .

    SEMICOLON       reduce using rule 51 (innercasebody -> empty .)
    ELSE            reduce using rule 51 (innercasebody -> empty .)


state 106

    (59) istrue -> VERT LPARENT ID . RPARENT

    RPARENT         shift and go to state 134


state 107

    (3) procedures -> PROCEDURE ID LPARENT instructions RPARENT . SEMICOLON procedures

    SEMICOLON       shift and go to state 135


state 108

    (5) instructions -> NEW ID LPARENT datatype . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 136


state 109

    (22) datatype -> NUMVAL .

    COMMA           reduce using rule 22 (datatype -> NUMVAL .)


state 110

    (23) datatype -> BOOLVAL .

    COMMA           reduce using rule 23 (datatype -> BOOLVAL .)


state 111

    (6) instructions -> VALUES LPARENT ID COMMA . value RPARENT SEMICOLON instructions
    (24) value -> . NUMBER
    (25) value -> . TRUE
    (26) value -> . FALSE
    (27) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    ALTER           shift and go to state 69

    value                          shift and go to state 137

state 112

    (7) instructions -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT SEMICOLON instructions
    (28) operator -> . ADD
    (29) operator -> . SUB
    (30) operator -> . MUL
    (31) operator -> . DIV

    ADD             shift and go to state 139
    SUB             shift and go to state 140
    MUL             shift and go to state 141
    DIV             shift and go to state 142

    operator                       shift and go to state 138

state 113

    (8) instructions -> ALTERB LPARENT value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 143


state 114

    (27) value -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT

    ID              shift and go to state 144


state 115

    (11) instructions -> HAMMER LPARENT position RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 145


state 116

    (13) instructions -> REPEAT LPARENT repeat_instructions RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 146


state 117

    (42) repeat_instructions -> instructions BREAK .

    RPARENT         reduce using rule 42 (repeat_instructions -> instructions BREAK .)


state 118

    (46) casebody -> casebody ELSE LPARENT instructions . RPARENT
    (20) instructions -> instructions . COMMENT

    RPARENT         shift and go to state 147
    COMMENT         shift and go to state 33


state 119

    (17) instructions -> PRINT LPARENT printvalues RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 148


state 120

    (60) printvalues -> startvalue printvalues .

    RPARENT         reduce using rule 60 (printvalues -> startvalue printvalues .)


state 121

    (61) printvalues -> COMMA STRING . printvalues
    (60) printvalues -> . startvalue printvalues
    (61) printvalues -> . COMMA STRING printvalues
    (62) printvalues -> . COMMA ID printvalues
    (63) printvalues -> . empty
    (64) startvalue -> . STRING
    (65) startvalue -> . ID
    (66) empty -> .

    COMMA           shift and go to state 86
    STRING          shift and go to state 87
    ID              shift and go to state 88
    RPARENT         reduce using rule 66 (empty -> .)

    printvalues                    shift and go to state 149
    startvalue                     shift and go to state 85
    empty                          shift and go to state 89

state 122

    (62) printvalues -> COMMA ID . printvalues
    (60) printvalues -> . startvalue printvalues
    (61) printvalues -> . COMMA STRING printvalues
    (62) printvalues -> . COMMA ID printvalues
    (63) printvalues -> . empty
    (64) startvalue -> . STRING
    (65) startvalue -> . ID
    (66) empty -> .

    COMMA           shift and go to state 86
    STRING          shift and go to state 87
    ID              shift and go to state 88
    RPARENT         reduce using rule 66 (empty -> .)

    printvalues                    shift and go to state 150
    startvalue                     shift and go to state 85
    empty                          shift and go to state 89

state 123

    (19) instructions -> CALL LPARENT ID RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 151


state 124

    (43) untilbody -> UNTIL LPARENT instructions RPARENT . condition
    (52) condition -> . ID comparator ID
    (53) condition -> . ID comparator NUMBER
    (54) condition -> . NUMBER comparator ID
    (55) condition -> . NUMBER comparator NUMBER
    (56) condition -> . TRUE
    (57) condition -> . FALSE
    (58) condition -> . istrue
    (59) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 52
    NUMBER          shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    VERT            shift and go to state 30

    condition                      shift and go to state 152
    istrue                         shift and go to state 56

state 125

    (44) whilebody -> WHILE condition LPARENT instructions . RPARENT
    (20) instructions -> instructions . COMMENT

    RPARENT         shift and go to state 153
    COMMENT         shift and go to state 33


state 126

    (52) condition -> ID comparator ID .

    LPARENT         reduce using rule 52 (condition -> ID comparator ID .)
    RPARENT         reduce using rule 52 (condition -> ID comparator ID .)
    SEMICOLON       reduce using rule 52 (condition -> ID comparator ID .)


state 127

    (53) condition -> ID comparator NUMBER .

    LPARENT         reduce using rule 53 (condition -> ID comparator NUMBER .)
    RPARENT         reduce using rule 53 (condition -> ID comparator NUMBER .)
    SEMICOLON       reduce using rule 53 (condition -> ID comparator NUMBER .)


state 128

    (55) condition -> NUMBER comparator NUMBER .

    LPARENT         reduce using rule 55 (condition -> NUMBER comparator NUMBER .)
    RPARENT         reduce using rule 55 (condition -> NUMBER comparator NUMBER .)
    SEMICOLON       reduce using rule 55 (condition -> NUMBER comparator NUMBER .)


state 129

    (54) condition -> NUMBER comparator ID .

    LPARENT         reduce using rule 54 (condition -> NUMBER comparator ID .)
    RPARENT         reduce using rule 54 (condition -> NUMBER comparator ID .)
    SEMICOLON       reduce using rule 54 (condition -> NUMBER comparator ID .)


state 130

    (45) casebody -> CASE WHEN LPARENT condition . RPARENT THEN LPARENT instructions RPARENT

    RPARENT         shift and go to state 154


state 131

    (48) innercasebody -> WHEN NUMBER . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 155


state 132

    (49) innercasebody -> WHEN TRUE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 156


state 133

    (50) innercasebody -> WHEN FALSE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 157


state 134

    (59) istrue -> VERT LPARENT ID RPARENT .

    SEMICOLON       reduce using rule 59 (istrue -> VERT LPARENT ID RPARENT .)
    LPARENT         reduce using rule 59 (istrue -> VERT LPARENT ID RPARENT .)
    RPARENT         reduce using rule 59 (istrue -> VERT LPARENT ID RPARENT .)


state 135

    (3) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON . procedures
    (3) procedures -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures
    (4) procedures -> . empty
    (66) empty -> .

    PROCEDURE       shift and go to state 6
    $end            reduce using rule 66 (empty -> .)

    procedures                     shift and go to state 158
    empty                          shift and go to state 7

state 136

    (5) instructions -> NEW ID LPARENT datatype COMMA . value RPARENT SEMICOLON instructions
    (24) value -> . NUMBER
    (25) value -> . TRUE
    (26) value -> . FALSE
    (27) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    ALTER           shift and go to state 69

    value                          shift and go to state 159

state 137

    (6) instructions -> VALUES LPARENT ID COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 160


state 138

    (7) instructions -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 161


state 139

    (28) operator -> ADD .

    COMMA           reduce using rule 28 (operator -> ADD .)


state 140

    (29) operator -> SUB .

    COMMA           reduce using rule 29 (operator -> SUB .)


state 141

    (30) operator -> MUL .

    COMMA           reduce using rule 30 (operator -> MUL .)


state 142

    (31) operator -> DIV .

    COMMA           reduce using rule 31 (operator -> DIV .)


state 143

    (8) instructions -> ALTERB LPARENT value RPARENT SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 162
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 144

    (27) value -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT

    COMMA           shift and go to state 163


state 145

    (11) instructions -> HAMMER LPARENT position RPARENT SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 164
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 146

    (13) instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 165
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 147

    (46) casebody -> casebody ELSE LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 46 (casebody -> casebody ELSE LPARENT instructions RPARENT .)
    ELSE            reduce using rule 46 (casebody -> casebody ELSE LPARENT instructions RPARENT .)


state 148

    (17) instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 166
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 149

    (61) printvalues -> COMMA STRING printvalues .

    RPARENT         reduce using rule 61 (printvalues -> COMMA STRING printvalues .)


state 150

    (62) printvalues -> COMMA ID printvalues .

    RPARENT         reduce using rule 62 (printvalues -> COMMA ID printvalues .)


state 151

    (19) instructions -> CALL LPARENT ID RPARENT SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 167
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 152

    (43) untilbody -> UNTIL LPARENT instructions RPARENT condition .

    SEMICOLON       reduce using rule 43 (untilbody -> UNTIL LPARENT instructions RPARENT condition .)


state 153

    (44) whilebody -> WHILE condition LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 44 (whilebody -> WHILE condition LPARENT instructions RPARENT .)


state 154

    (45) casebody -> CASE WHEN LPARENT condition RPARENT . THEN LPARENT instructions RPARENT

    THEN            shift and go to state 168


state 155

    (48) innercasebody -> WHEN NUMBER THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 169


state 156

    (49) innercasebody -> WHEN TRUE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 170


state 157

    (50) innercasebody -> WHEN FALSE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 171


state 158

    (3) procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .

    $end            reduce using rule 3 (procedures -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON procedures .)


state 159

    (5) instructions -> NEW ID LPARENT datatype COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 172


state 160

    (6) instructions -> VALUES LPARENT ID COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 173


state 161

    (7) instructions -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT SEMICOLON instructions
    (24) value -> . NUMBER
    (25) value -> . TRUE
    (26) value -> . FALSE
    (27) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    ALTER           shift and go to state 69

    value                          shift and go to state 174

state 162

    (8) instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 8 (instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 8 (instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 8 (instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .) ]


state 163

    (27) value -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT
    (28) operator -> . ADD
    (29) operator -> . SUB
    (30) operator -> . MUL
    (31) operator -> . DIV

    ADD             shift and go to state 139
    SUB             shift and go to state 140
    MUL             shift and go to state 141
    DIV             shift and go to state 142

    operator                       shift and go to state 175

state 164

    (11) instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 11 (instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 11 (instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 11 (instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .) ]


state 165

    (13) instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 13 (instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 13 (instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 13 (instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .) ]


state 166

    (17) instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 17 (instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 17 (instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 17 (instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .) ]


state 167

    (19) instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 19 (instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 19 (instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 19 (instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .) ]


state 168

    (45) casebody -> CASE WHEN LPARENT condition RPARENT THEN . LPARENT instructions RPARENT

    LPARENT         shift and go to state 176


state 169

    (48) innercasebody -> WHEN NUMBER THEN LPARENT . instructions RPARENT innercasebody
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    RPARENT         reduce using rule 66 (empty -> .)
    COMMENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 177
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 170

    (49) innercasebody -> WHEN TRUE THEN LPARENT . instructions RPARENT innercasebody
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    RPARENT         reduce using rule 66 (empty -> .)
    COMMENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 178
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 171

    (50) innercasebody -> WHEN FALSE THEN LPARENT . instructions RPARENT innercasebody
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    RPARENT         reduce using rule 66 (empty -> .)
    COMMENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 179
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 172

    (5) instructions -> NEW ID LPARENT datatype COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 180


state 173

    (6) instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 181
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 174

    (7) instructions -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 182


state 175

    (27) value -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT

    COMMA           shift and go to state 183


state 176

    (45) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT . instructions RPARENT
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    RPARENT         reduce using rule 66 (empty -> .)
    COMMENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 184
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 177

    (48) innercasebody -> WHEN NUMBER THEN LPARENT instructions . RPARENT innercasebody
    (20) instructions -> instructions . COMMENT

    RPARENT         shift and go to state 185
    COMMENT         shift and go to state 33


state 178

    (49) innercasebody -> WHEN TRUE THEN LPARENT instructions . RPARENT innercasebody
    (20) instructions -> instructions . COMMENT

    RPARENT         shift and go to state 186
    COMMENT         shift and go to state 33


state 179

    (50) innercasebody -> WHEN FALSE THEN LPARENT instructions . RPARENT innercasebody
    (20) instructions -> instructions . COMMENT

    RPARENT         shift and go to state 187
    COMMENT         shift and go to state 33


state 180

    (5) instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 188
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 181

    (6) instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 6 (instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 6 (instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 6 (instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .) ]


state 182

    (7) instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 189


state 183

    (27) value -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT
    (24) value -> . NUMBER
    (25) value -> . TRUE
    (26) value -> . FALSE
    (27) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    ALTER           shift and go to state 69

    value                          shift and go to state 190

state 184

    (45) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions . RPARENT
    (20) instructions -> instructions . COMMENT

    RPARENT         shift and go to state 191
    COMMENT         shift and go to state 33


state 185

    (48) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT . innercasebody
    (48) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (49) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (50) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . empty
    (66) empty -> .

    WHEN            shift and go to state 104
    SEMICOLON       reduce using rule 66 (empty -> .)
    ELSE            reduce using rule 66 (empty -> .)

    innercasebody                  shift and go to state 192
    empty                          shift and go to state 105

state 186

    (49) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT . innercasebody
    (48) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (49) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (50) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . empty
    (66) empty -> .

    WHEN            shift and go to state 104
    SEMICOLON       reduce using rule 66 (empty -> .)
    ELSE            reduce using rule 66 (empty -> .)

    innercasebody                  shift and go to state 193
    empty                          shift and go to state 105

state 187

    (50) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT . innercasebody
    (48) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (49) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (50) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (51) innercasebody -> . empty
    (66) empty -> .

    WHEN            shift and go to state 104
    SEMICOLON       reduce using rule 66 (empty -> .)
    ELSE            reduce using rule 66 (empty -> .)

    innercasebody                  shift and go to state 194
    empty                          shift and go to state 105

state 188

    (5) instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 5 (instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 5 (instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 5 (instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .) ]


state 189

    (7) instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON . instructions
    (5) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (6) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (7) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (8) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (9) instructions -> . MOVR SEMICOLON instructions
    (10) instructions -> . MOVL SEMICOLON instructions
    (11) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (12) instructions -> . STOP SEMICOLON instructions
    (13) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (14) instructions -> . untilbody SEMICOLON instructions
    (15) instructions -> . whilebody SEMICOLON instructions
    (16) instructions -> . casebody SEMICOLON instructions
    (17) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (18) instructions -> . istrue SEMICOLON instructions
    (19) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (20) instructions -> . instructions COMMENT
    (21) instructions -> . empty
    (43) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (44) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (45) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (46) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (47) casebody -> . CASE ID innercasebody
    (59) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 11
    VALUES          shift and go to state 12
    ALTER           shift and go to state 13
    ALTERB          shift and go to state 14
    MOVR            shift and go to state 15
    MOVL            shift and go to state 16
    HAMMER          shift and go to state 17
    STOP            shift and go to state 18
    REPEAT          shift and go to state 19
    PRINT           shift and go to state 23
    CALL            shift and go to state 25
    UNTIL           shift and go to state 27
    WHILE           shift and go to state 28
    CASE            shift and go to state 29
    VERT            shift and go to state 30
    COMMENT         reduce using rule 66 (empty -> .)
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 195
    untilbody                      shift and go to state 20
    whilebody                      shift and go to state 21
    casebody                       shift and go to state 22
    istrue                         shift and go to state 24
    empty                          shift and go to state 26

state 190

    (27) value -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT

    RPARENT         shift and go to state 196


state 191

    (45) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 45 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)
    ELSE            reduce using rule 45 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)


state 192

    (48) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 48 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 48 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)


state 193

    (49) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 49 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 49 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)


state 194

    (50) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 50 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 50 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)


state 195

    (7) instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions .
    (20) instructions -> instructions . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    RPARENT         reduce using rule 7 (instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 7 (instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions .)
    COMMENT         shift and go to state 33

  ! COMMENT         [ reduce using rule 7 (instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions .) ]


state 196

    (27) value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .

    RPARENT         reduce using rule 27 (value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT in state 70 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 71 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 77 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 80 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 81 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 82 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 90 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 162 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 164 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 165 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 166 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 167 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 181 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 188 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 195 resolved as shift
