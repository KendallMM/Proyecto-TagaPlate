Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> COMMENT bodyprogram
Rule 2     bodyprogram -> procedure bodyprogram
Rule 3     bodyprogram -> procedure
Rule 4     bodyprogram -> COMMENT
Rule 5     bodyprogram -> empty
Rule 6     procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON
Rule 7     procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON
Rule 8     instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
Rule 9     instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
Rule 10    instructions -> alterbody SEMICOLON instructions
Rule 11    instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions
Rule 12    instructions -> MOVR SEMICOLON instructions
Rule 13    instructions -> MOVL SEMICOLON instructions
Rule 14    instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions
Rule 15    instructions -> STOP SEMICOLON instructions
Rule 16    instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
Rule 17    instructions -> untilbody SEMICOLON instructions
Rule 18    instructions -> whilebody SEMICOLON instructions
Rule 19    instructions -> casebody SEMICOLON instructions
Rule 20    instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions
Rule 21    instructions -> istrue SEMICOLON instructions
Rule 22    instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions
Rule 23    instructions -> COMMENT instructions
Rule 24    instructions -> empty
Rule 25    alterbody -> ALTER LPARENT ID COMMA operator COMMA value RPARENT
Rule 26    datatype -> NUMVAL
Rule 27    datatype -> BOOLVAL
Rule 28    value -> NUMBER
Rule 29    value -> TRUE
Rule 30    value -> FALSE
Rule 31    value -> alterbody
Rule 32    operator -> ADD
Rule 33    operator -> SUB
Rule 34    operator -> MUL
Rule 35    operator -> DIV
Rule 36    comparator -> GT
Rule 37    comparator -> LT
Rule 38    comparator -> GET
Rule 39    comparator -> LET
Rule 40    comparator -> EQ
Rule 41    comparator -> DT
Rule 42    position -> NORTH
Rule 43    position -> SOUTH
Rule 44    position -> EAST
Rule 45    position -> WEST
Rule 46    repeat_instructions -> instructions BREAK
Rule 47    untilbody -> UNTIL LPARENT instructions RPARENT condition
Rule 48    whilebody -> WHILE condition LPARENT instructions RPARENT
Rule 49    casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
Rule 50    casebody -> casebody ELSE LPARENT instructions RPARENT
Rule 51    casebody -> CASE ID innercasebody
Rule 52    innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
Rule 53    innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
Rule 54    innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
Rule 55    innercasebody -> empty
Rule 56    condition -> ID comparator ID
Rule 57    condition -> ID comparator NUMBER
Rule 58    condition -> NUMBER comparator ID
Rule 59    condition -> NUMBER comparator NUMBER
Rule 60    condition -> TRUE
Rule 61    condition -> FALSE
Rule 62    condition -> istrue
Rule 63    istrue -> VERT LPARENT ID RPARENT
Rule 64    printvalues -> STRING printvalues
Rule 65    printvalues -> COMMA ID printvalues
Rule 66    printvalues -> empty
Rule 67    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 32
ALTER                : 25
ALTERB               : 11
BOOLVAL              : 27
BREAK                : 46
CALL                 : 22
CASE                 : 49 51
COMMA                : 8 9 25 25 65
COMMENT              : 1 4 23
DIV                  : 35
DT                   : 41
EAST                 : 44
ELSE                 : 50
EQ                   : 40
FALSE                : 30 54 61
GET                  : 38
GT                   : 36
HAMMER               : 14
ID                   : 7 8 9 22 25 51 56 56 57 58 63 65
LET                  : 39
LPARENT              : 6 7 8 9 11 14 16 20 22 25 47 48 49 49 50 52 53 54 63
LT                   : 37
MOVL                 : 13
MOVR                 : 12
MUL                  : 34
NEW                  : 8
NORTH                : 42
NUMBER               : 28 52 57 58 59 59
NUMVAL               : 26
PRINCIPAL            : 6
PRINT                : 20
PROCEDURE            : 7
REPEAT               : 16
RPARENT              : 6 7 8 9 11 14 16 20 22 25 47 48 49 49 50 52 53 54 63
SEMICOLON            : 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
SOUTH                : 43
STOP                 : 15
STRING               : 64
SUB                  : 33
THEN                 : 49 52 53 54
TRUE                 : 29 53 60
UNTIL                : 47
VALUES               : 9
VERT                 : 63
WEST                 : 45
WHEN                 : 49 52 53 54
WHILE                : 48
error                : 

Nonterminals, with rules where they appear

alterbody            : 10 31
bodyprogram          : 1 2
casebody             : 19 50
comparator           : 56 57 58 59
condition            : 47 48 49
datatype             : 8
empty                : 5 24 55 66
innercasebody        : 51 52 53 54
instructions         : 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 46 47 48 49 50 52 53 54
istrue               : 21 62
operator             : 25
position             : 14
printvalues          : 20 64 65
procedure            : 2 3
program              : 0
repeat_instructions  : 16
untilbody            : 17
value                : 8 9 11 25
whilebody            : 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . COMMENT bodyprogram

    COMMENT         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> COMMENT . bodyprogram
    (2) bodyprogram -> . procedure bodyprogram
    (3) bodyprogram -> . procedure
    (4) bodyprogram -> . COMMENT
    (5) bodyprogram -> . empty
    (6) procedure -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON
    (7) procedure -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON
    (67) empty -> .

    COMMENT         shift and go to state 3
    PRINCIPAL       shift and go to state 7
    PROCEDURE       shift and go to state 8
    $end            reduce using rule 67 (empty -> .)

    bodyprogram                    shift and go to state 4
    procedure                      shift and go to state 5
    empty                          shift and go to state 6

state 3

    (4) bodyprogram -> COMMENT .

    $end            reduce using rule 4 (bodyprogram -> COMMENT .)


state 4

    (1) program -> COMMENT bodyprogram .

    $end            reduce using rule 1 (program -> COMMENT bodyprogram .)


state 5

    (2) bodyprogram -> procedure . bodyprogram
    (3) bodyprogram -> procedure .
    (2) bodyprogram -> . procedure bodyprogram
    (3) bodyprogram -> . procedure
    (4) bodyprogram -> . COMMENT
    (5) bodyprogram -> . empty
    (6) procedure -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON
    (7) procedure -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON
    (67) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 3 (bodyprogram -> procedure .)
    $end            reduce using rule 3 (bodyprogram -> procedure .)
    COMMENT         shift and go to state 3
    PRINCIPAL       shift and go to state 7
    PROCEDURE       shift and go to state 8

  ! $end            [ reduce using rule 67 (empty -> .) ]

    procedure                      shift and go to state 5
    bodyprogram                    shift and go to state 9
    empty                          shift and go to state 6

state 6

    (5) bodyprogram -> empty .

    $end            reduce using rule 5 (bodyprogram -> empty .)


state 7

    (6) procedure -> PRINCIPAL . LPARENT instructions RPARENT SEMICOLON

    LPARENT         shift and go to state 10


state 8

    (7) procedure -> PROCEDURE . ID LPARENT instructions RPARENT SEMICOLON

    ID              shift and go to state 11


state 9

    (2) bodyprogram -> procedure bodyprogram .

    $end            reduce using rule 2 (bodyprogram -> procedure bodyprogram .)


state 10

    (6) procedure -> PRINCIPAL LPARENT . instructions RPARENT SEMICOLON
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 12
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 11

    (7) procedure -> PROCEDURE ID . LPARENT instructions RPARENT SEMICOLON

    LPARENT         shift and go to state 35


state 12

    (6) procedure -> PRINCIPAL LPARENT instructions . RPARENT SEMICOLON

    RPARENT         shift and go to state 36


state 13

    (8) instructions -> NEW . ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 37


state 14

    (9) instructions -> VALUES . LPARENT ID COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 38


state 15

    (10) instructions -> alterbody . SEMICOLON instructions

    SEMICOLON       shift and go to state 39


state 16

    (11) instructions -> ALTERB . LPARENT value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 40


state 17

    (12) instructions -> MOVR . SEMICOLON instructions

    SEMICOLON       shift and go to state 41


state 18

    (13) instructions -> MOVL . SEMICOLON instructions

    SEMICOLON       shift and go to state 42


state 19

    (14) instructions -> HAMMER . LPARENT position RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 43


state 20

    (15) instructions -> STOP . SEMICOLON instructions

    SEMICOLON       shift and go to state 44


state 21

    (16) instructions -> REPEAT . LPARENT repeat_instructions RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 45


state 22

    (17) instructions -> untilbody . SEMICOLON instructions

    SEMICOLON       shift and go to state 46


state 23

    (18) instructions -> whilebody . SEMICOLON instructions

    SEMICOLON       shift and go to state 47


state 24

    (19) instructions -> casebody . SEMICOLON instructions
    (50) casebody -> casebody . ELSE LPARENT instructions RPARENT

    SEMICOLON       shift and go to state 48
    ELSE            shift and go to state 49


state 25

    (20) instructions -> PRINT . LPARENT printvalues RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 50


state 26

    (21) instructions -> istrue . SEMICOLON instructions

    SEMICOLON       shift and go to state 51


state 27

    (22) instructions -> CALL . LPARENT ID RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 52


state 28

    (23) instructions -> COMMENT . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 53
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 29

    (24) instructions -> empty .

    RPARENT         reduce using rule 24 (instructions -> empty .)
    BREAK           reduce using rule 24 (instructions -> empty .)


state 30

    (25) alterbody -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT

    LPARENT         shift and go to state 54


state 31

    (47) untilbody -> UNTIL . LPARENT instructions RPARENT condition

    LPARENT         shift and go to state 55


state 32

    (48) whilebody -> WHILE . condition LPARENT instructions RPARENT
    (56) condition -> . ID comparator ID
    (57) condition -> . ID comparator NUMBER
    (58) condition -> . NUMBER comparator ID
    (59) condition -> . NUMBER comparator NUMBER
    (60) condition -> . TRUE
    (61) condition -> . FALSE
    (62) condition -> . istrue
    (63) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 57
    NUMBER          shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    VERT            shift and go to state 34

    condition                      shift and go to state 56
    istrue                         shift and go to state 61

state 33

    (49) casebody -> CASE . WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (51) casebody -> CASE . ID innercasebody

    WHEN            shift and go to state 62
    ID              shift and go to state 63


state 34

    (63) istrue -> VERT . LPARENT ID RPARENT

    LPARENT         shift and go to state 64


state 35

    (7) procedure -> PROCEDURE ID LPARENT . instructions RPARENT SEMICOLON
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 65
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 36

    (6) procedure -> PRINCIPAL LPARENT instructions RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 66


state 37

    (8) instructions -> NEW ID . LPARENT datatype COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 67


state 38

    (9) instructions -> VALUES LPARENT . ID COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 68


state 39

    (10) instructions -> alterbody SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    alterbody                      shift and go to state 15
    instructions                   shift and go to state 69
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 40

    (11) instructions -> ALTERB LPARENT . value RPARENT SEMICOLON instructions
    (28) value -> . NUMBER
    (29) value -> . TRUE
    (30) value -> . FALSE
    (31) value -> . alterbody
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 71
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    ALTER           shift and go to state 30

    value                          shift and go to state 70
    alterbody                      shift and go to state 74

state 41

    (12) instructions -> MOVR SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 75
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 42

    (13) instructions -> MOVL SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 76
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 43

    (14) instructions -> HAMMER LPARENT . position RPARENT SEMICOLON instructions
    (42) position -> . NORTH
    (43) position -> . SOUTH
    (44) position -> . EAST
    (45) position -> . WEST

    NORTH           shift and go to state 78
    SOUTH           shift and go to state 79
    EAST            shift and go to state 80
    WEST            shift and go to state 81

    position                       shift and go to state 77

state 44

    (15) instructions -> STOP SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 82
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 45

    (16) instructions -> REPEAT LPARENT . repeat_instructions RPARENT SEMICOLON instructions
    (46) repeat_instructions -> . instructions BREAK
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    BREAK           reduce using rule 67 (empty -> .)

    repeat_instructions            shift and go to state 83
    instructions                   shift and go to state 84
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 46

    (17) instructions -> untilbody SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    untilbody                      shift and go to state 22
    instructions                   shift and go to state 85
    alterbody                      shift and go to state 15
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 47

    (18) instructions -> whilebody SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    whilebody                      shift and go to state 23
    instructions                   shift and go to state 86
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 48

    (19) instructions -> casebody SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    casebody                       shift and go to state 24
    instructions                   shift and go to state 87
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 49

    (50) casebody -> casebody ELSE . LPARENT instructions RPARENT

    LPARENT         shift and go to state 88


state 50

    (20) instructions -> PRINT LPARENT . printvalues RPARENT SEMICOLON instructions
    (64) printvalues -> . STRING printvalues
    (65) printvalues -> . COMMA ID printvalues
    (66) printvalues -> . empty
    (67) empty -> .

    STRING          shift and go to state 90
    COMMA           shift and go to state 91
    RPARENT         reduce using rule 67 (empty -> .)

    printvalues                    shift and go to state 89
    empty                          shift and go to state 92

state 51

    (21) instructions -> istrue SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    istrue                         shift and go to state 26
    instructions                   shift and go to state 93
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    empty                          shift and go to state 29

state 52

    (22) instructions -> CALL LPARENT . ID RPARENT SEMICOLON instructions

    ID              shift and go to state 94


state 53

    (23) instructions -> COMMENT instructions .

    RPARENT         reduce using rule 23 (instructions -> COMMENT instructions .)
    BREAK           reduce using rule 23 (instructions -> COMMENT instructions .)


state 54

    (25) alterbody -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT

    ID              shift and go to state 95


state 55

    (47) untilbody -> UNTIL LPARENT . instructions RPARENT condition
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 96
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 56

    (48) whilebody -> WHILE condition . LPARENT instructions RPARENT

    LPARENT         shift and go to state 97


state 57

    (56) condition -> ID . comparator ID
    (57) condition -> ID . comparator NUMBER
    (36) comparator -> . GT
    (37) comparator -> . LT
    (38) comparator -> . GET
    (39) comparator -> . LET
    (40) comparator -> . EQ
    (41) comparator -> . DT

    GT              shift and go to state 99
    LT              shift and go to state 100
    GET             shift and go to state 101
    LET             shift and go to state 102
    EQ              shift and go to state 103
    DT              shift and go to state 104

    comparator                     shift and go to state 98

state 58

    (58) condition -> NUMBER . comparator ID
    (59) condition -> NUMBER . comparator NUMBER
    (36) comparator -> . GT
    (37) comparator -> . LT
    (38) comparator -> . GET
    (39) comparator -> . LET
    (40) comparator -> . EQ
    (41) comparator -> . DT

    GT              shift and go to state 99
    LT              shift and go to state 100
    GET             shift and go to state 101
    LET             shift and go to state 102
    EQ              shift and go to state 103
    DT              shift and go to state 104

    comparator                     shift and go to state 105

state 59

    (60) condition -> TRUE .

    LPARENT         reduce using rule 60 (condition -> TRUE .)
    RPARENT         reduce using rule 60 (condition -> TRUE .)
    SEMICOLON       reduce using rule 60 (condition -> TRUE .)


state 60

    (61) condition -> FALSE .

    LPARENT         reduce using rule 61 (condition -> FALSE .)
    RPARENT         reduce using rule 61 (condition -> FALSE .)
    SEMICOLON       reduce using rule 61 (condition -> FALSE .)


state 61

    (62) condition -> istrue .

    LPARENT         reduce using rule 62 (condition -> istrue .)
    RPARENT         reduce using rule 62 (condition -> istrue .)
    SEMICOLON       reduce using rule 62 (condition -> istrue .)


state 62

    (49) casebody -> CASE WHEN . LPARENT condition RPARENT THEN LPARENT instructions RPARENT

    LPARENT         shift and go to state 106


state 63

    (51) casebody -> CASE ID . innercasebody
    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (55) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 108
    SEMICOLON       reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 107
    empty                          shift and go to state 109

state 64

    (63) istrue -> VERT LPARENT . ID RPARENT

    ID              shift and go to state 110


state 65

    (7) procedure -> PROCEDURE ID LPARENT instructions . RPARENT SEMICOLON

    RPARENT         shift and go to state 111


state 66

    (6) procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .

    COMMENT         reduce using rule 6 (procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    PRINCIPAL       reduce using rule 6 (procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    PROCEDURE       reduce using rule 6 (procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    $end            reduce using rule 6 (procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)


state 67

    (8) instructions -> NEW ID LPARENT . datatype COMMA value RPARENT SEMICOLON instructions
    (26) datatype -> . NUMVAL
    (27) datatype -> . BOOLVAL

    NUMVAL          shift and go to state 113
    BOOLVAL         shift and go to state 114

    datatype                       shift and go to state 112

state 68

    (9) instructions -> VALUES LPARENT ID . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 115


state 69

    (10) instructions -> alterbody SEMICOLON instructions .

    RPARENT         reduce using rule 10 (instructions -> alterbody SEMICOLON instructions .)
    BREAK           reduce using rule 10 (instructions -> alterbody SEMICOLON instructions .)


state 70

    (11) instructions -> ALTERB LPARENT value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 116


state 71

    (28) value -> NUMBER .

    RPARENT         reduce using rule 28 (value -> NUMBER .)


state 72

    (29) value -> TRUE .

    RPARENT         reduce using rule 29 (value -> TRUE .)


state 73

    (30) value -> FALSE .

    RPARENT         reduce using rule 30 (value -> FALSE .)


state 74

    (31) value -> alterbody .

    RPARENT         reduce using rule 31 (value -> alterbody .)


state 75

    (12) instructions -> MOVR SEMICOLON instructions .

    RPARENT         reduce using rule 12 (instructions -> MOVR SEMICOLON instructions .)
    BREAK           reduce using rule 12 (instructions -> MOVR SEMICOLON instructions .)


state 76

    (13) instructions -> MOVL SEMICOLON instructions .

    RPARENT         reduce using rule 13 (instructions -> MOVL SEMICOLON instructions .)
    BREAK           reduce using rule 13 (instructions -> MOVL SEMICOLON instructions .)


state 77

    (14) instructions -> HAMMER LPARENT position . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 117


state 78

    (42) position -> NORTH .

    RPARENT         reduce using rule 42 (position -> NORTH .)


state 79

    (43) position -> SOUTH .

    RPARENT         reduce using rule 43 (position -> SOUTH .)


state 80

    (44) position -> EAST .

    RPARENT         reduce using rule 44 (position -> EAST .)


state 81

    (45) position -> WEST .

    RPARENT         reduce using rule 45 (position -> WEST .)


state 82

    (15) instructions -> STOP SEMICOLON instructions .

    RPARENT         reduce using rule 15 (instructions -> STOP SEMICOLON instructions .)
    BREAK           reduce using rule 15 (instructions -> STOP SEMICOLON instructions .)


state 83

    (16) instructions -> REPEAT LPARENT repeat_instructions . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 118


state 84

    (46) repeat_instructions -> instructions . BREAK

    BREAK           shift and go to state 119


state 85

    (17) instructions -> untilbody SEMICOLON instructions .

    RPARENT         reduce using rule 17 (instructions -> untilbody SEMICOLON instructions .)
    BREAK           reduce using rule 17 (instructions -> untilbody SEMICOLON instructions .)


state 86

    (18) instructions -> whilebody SEMICOLON instructions .

    RPARENT         reduce using rule 18 (instructions -> whilebody SEMICOLON instructions .)
    BREAK           reduce using rule 18 (instructions -> whilebody SEMICOLON instructions .)


state 87

    (19) instructions -> casebody SEMICOLON instructions .

    RPARENT         reduce using rule 19 (instructions -> casebody SEMICOLON instructions .)
    BREAK           reduce using rule 19 (instructions -> casebody SEMICOLON instructions .)


state 88

    (50) casebody -> casebody ELSE LPARENT . instructions RPARENT
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    casebody                       shift and go to state 24
    instructions                   shift and go to state 120
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 89

    (20) instructions -> PRINT LPARENT printvalues . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 121


state 90

    (64) printvalues -> STRING . printvalues
    (64) printvalues -> . STRING printvalues
    (65) printvalues -> . COMMA ID printvalues
    (66) printvalues -> . empty
    (67) empty -> .

    STRING          shift and go to state 90
    COMMA           shift and go to state 91
    RPARENT         reduce using rule 67 (empty -> .)

    printvalues                    shift and go to state 122
    empty                          shift and go to state 92

state 91

    (65) printvalues -> COMMA . ID printvalues

    ID              shift and go to state 123


state 92

    (66) printvalues -> empty .

    RPARENT         reduce using rule 66 (printvalues -> empty .)


state 93

    (21) instructions -> istrue SEMICOLON instructions .

    RPARENT         reduce using rule 21 (instructions -> istrue SEMICOLON instructions .)
    BREAK           reduce using rule 21 (instructions -> istrue SEMICOLON instructions .)


state 94

    (22) instructions -> CALL LPARENT ID . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 124


state 95

    (25) alterbody -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT

    COMMA           shift and go to state 125


state 96

    (47) untilbody -> UNTIL LPARENT instructions . RPARENT condition

    RPARENT         shift and go to state 126


state 97

    (48) whilebody -> WHILE condition LPARENT . instructions RPARENT
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 127
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 98

    (56) condition -> ID comparator . ID
    (57) condition -> ID comparator . NUMBER

    ID              shift and go to state 128
    NUMBER          shift and go to state 129


state 99

    (36) comparator -> GT .

    ID              reduce using rule 36 (comparator -> GT .)
    NUMBER          reduce using rule 36 (comparator -> GT .)


state 100

    (37) comparator -> LT .

    ID              reduce using rule 37 (comparator -> LT .)
    NUMBER          reduce using rule 37 (comparator -> LT .)


state 101

    (38) comparator -> GET .

    ID              reduce using rule 38 (comparator -> GET .)
    NUMBER          reduce using rule 38 (comparator -> GET .)


state 102

    (39) comparator -> LET .

    ID              reduce using rule 39 (comparator -> LET .)
    NUMBER          reduce using rule 39 (comparator -> LET .)


state 103

    (40) comparator -> EQ .

    ID              reduce using rule 40 (comparator -> EQ .)
    NUMBER          reduce using rule 40 (comparator -> EQ .)


state 104

    (41) comparator -> DT .

    ID              reduce using rule 41 (comparator -> DT .)
    NUMBER          reduce using rule 41 (comparator -> DT .)


state 105

    (58) condition -> NUMBER comparator . ID
    (59) condition -> NUMBER comparator . NUMBER

    ID              shift and go to state 131
    NUMBER          shift and go to state 130


state 106

    (49) casebody -> CASE WHEN LPARENT . condition RPARENT THEN LPARENT instructions RPARENT
    (56) condition -> . ID comparator ID
    (57) condition -> . ID comparator NUMBER
    (58) condition -> . NUMBER comparator ID
    (59) condition -> . NUMBER comparator NUMBER
    (60) condition -> . TRUE
    (61) condition -> . FALSE
    (62) condition -> . istrue
    (63) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 57
    NUMBER          shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    VERT            shift and go to state 34

    condition                      shift and go to state 132
    istrue                         shift and go to state 61

state 107

    (51) casebody -> CASE ID innercasebody .

    SEMICOLON       reduce using rule 51 (casebody -> CASE ID innercasebody .)
    ELSE            reduce using rule 51 (casebody -> CASE ID innercasebody .)


state 108

    (52) innercasebody -> WHEN . NUMBER THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> WHEN . TRUE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> WHEN . FALSE THEN LPARENT instructions RPARENT innercasebody

    NUMBER          shift and go to state 133
    TRUE            shift and go to state 134
    FALSE           shift and go to state 135


state 109

    (55) innercasebody -> empty .

    SEMICOLON       reduce using rule 55 (innercasebody -> empty .)
    ELSE            reduce using rule 55 (innercasebody -> empty .)


state 110

    (63) istrue -> VERT LPARENT ID . RPARENT

    RPARENT         shift and go to state 136


state 111

    (7) procedure -> PROCEDURE ID LPARENT instructions RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 137


state 112

    (8) instructions -> NEW ID LPARENT datatype . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 138


state 113

    (26) datatype -> NUMVAL .

    COMMA           reduce using rule 26 (datatype -> NUMVAL .)


state 114

    (27) datatype -> BOOLVAL .

    COMMA           reduce using rule 27 (datatype -> BOOLVAL .)


state 115

    (9) instructions -> VALUES LPARENT ID COMMA . value RPARENT SEMICOLON instructions
    (28) value -> . NUMBER
    (29) value -> . TRUE
    (30) value -> . FALSE
    (31) value -> . alterbody
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 71
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    ALTER           shift and go to state 30

    value                          shift and go to state 139
    alterbody                      shift and go to state 74

state 116

    (11) instructions -> ALTERB LPARENT value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 140


state 117

    (14) instructions -> HAMMER LPARENT position RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 141


state 118

    (16) instructions -> REPEAT LPARENT repeat_instructions RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 142


state 119

    (46) repeat_instructions -> instructions BREAK .

    RPARENT         reduce using rule 46 (repeat_instructions -> instructions BREAK .)


state 120

    (50) casebody -> casebody ELSE LPARENT instructions . RPARENT

    RPARENT         shift and go to state 143


state 121

    (20) instructions -> PRINT LPARENT printvalues RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 144


state 122

    (64) printvalues -> STRING printvalues .

    RPARENT         reduce using rule 64 (printvalues -> STRING printvalues .)


state 123

    (65) printvalues -> COMMA ID . printvalues
    (64) printvalues -> . STRING printvalues
    (65) printvalues -> . COMMA ID printvalues
    (66) printvalues -> . empty
    (67) empty -> .

    STRING          shift and go to state 90
    COMMA           shift and go to state 91
    RPARENT         reduce using rule 67 (empty -> .)

    printvalues                    shift and go to state 145
    empty                          shift and go to state 92

state 124

    (22) instructions -> CALL LPARENT ID RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 146


state 125

    (25) alterbody -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT
    (32) operator -> . ADD
    (33) operator -> . SUB
    (34) operator -> . MUL
    (35) operator -> . DIV

    ADD             shift and go to state 148
    SUB             shift and go to state 149
    MUL             shift and go to state 150
    DIV             shift and go to state 151

    operator                       shift and go to state 147

state 126

    (47) untilbody -> UNTIL LPARENT instructions RPARENT . condition
    (56) condition -> . ID comparator ID
    (57) condition -> . ID comparator NUMBER
    (58) condition -> . NUMBER comparator ID
    (59) condition -> . NUMBER comparator NUMBER
    (60) condition -> . TRUE
    (61) condition -> . FALSE
    (62) condition -> . istrue
    (63) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 57
    NUMBER          shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    VERT            shift and go to state 34

    condition                      shift and go to state 152
    istrue                         shift and go to state 61

state 127

    (48) whilebody -> WHILE condition LPARENT instructions . RPARENT

    RPARENT         shift and go to state 153


state 128

    (56) condition -> ID comparator ID .

    LPARENT         reduce using rule 56 (condition -> ID comparator ID .)
    RPARENT         reduce using rule 56 (condition -> ID comparator ID .)
    SEMICOLON       reduce using rule 56 (condition -> ID comparator ID .)


state 129

    (57) condition -> ID comparator NUMBER .

    LPARENT         reduce using rule 57 (condition -> ID comparator NUMBER .)
    RPARENT         reduce using rule 57 (condition -> ID comparator NUMBER .)
    SEMICOLON       reduce using rule 57 (condition -> ID comparator NUMBER .)


state 130

    (59) condition -> NUMBER comparator NUMBER .

    LPARENT         reduce using rule 59 (condition -> NUMBER comparator NUMBER .)
    RPARENT         reduce using rule 59 (condition -> NUMBER comparator NUMBER .)
    SEMICOLON       reduce using rule 59 (condition -> NUMBER comparator NUMBER .)


state 131

    (58) condition -> NUMBER comparator ID .

    LPARENT         reduce using rule 58 (condition -> NUMBER comparator ID .)
    RPARENT         reduce using rule 58 (condition -> NUMBER comparator ID .)
    SEMICOLON       reduce using rule 58 (condition -> NUMBER comparator ID .)


state 132

    (49) casebody -> CASE WHEN LPARENT condition . RPARENT THEN LPARENT instructions RPARENT

    RPARENT         shift and go to state 154


state 133

    (52) innercasebody -> WHEN NUMBER . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 155


state 134

    (53) innercasebody -> WHEN TRUE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 156


state 135

    (54) innercasebody -> WHEN FALSE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 157


state 136

    (63) istrue -> VERT LPARENT ID RPARENT .

    SEMICOLON       reduce using rule 63 (istrue -> VERT LPARENT ID RPARENT .)
    LPARENT         reduce using rule 63 (istrue -> VERT LPARENT ID RPARENT .)
    RPARENT         reduce using rule 63 (istrue -> VERT LPARENT ID RPARENT .)


state 137

    (7) procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .

    COMMENT         reduce using rule 7 (procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .)
    PRINCIPAL       reduce using rule 7 (procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .)
    PROCEDURE       reduce using rule 7 (procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .)
    $end            reduce using rule 7 (procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .)


state 138

    (8) instructions -> NEW ID LPARENT datatype COMMA . value RPARENT SEMICOLON instructions
    (28) value -> . NUMBER
    (29) value -> . TRUE
    (30) value -> . FALSE
    (31) value -> . alterbody
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 71
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    ALTER           shift and go to state 30

    value                          shift and go to state 158
    alterbody                      shift and go to state 74

state 139

    (9) instructions -> VALUES LPARENT ID COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 159


state 140

    (11) instructions -> ALTERB LPARENT value RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 160
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 141

    (14) instructions -> HAMMER LPARENT position RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 161
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 142

    (16) instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 162
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 143

    (50) casebody -> casebody ELSE LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 50 (casebody -> casebody ELSE LPARENT instructions RPARENT .)
    ELSE            reduce using rule 50 (casebody -> casebody ELSE LPARENT instructions RPARENT .)


state 144

    (20) instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 163
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 145

    (65) printvalues -> COMMA ID printvalues .

    RPARENT         reduce using rule 65 (printvalues -> COMMA ID printvalues .)


state 146

    (22) instructions -> CALL LPARENT ID RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 164
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 147

    (25) alterbody -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT

    COMMA           shift and go to state 165


state 148

    (32) operator -> ADD .

    COMMA           reduce using rule 32 (operator -> ADD .)


state 149

    (33) operator -> SUB .

    COMMA           reduce using rule 33 (operator -> SUB .)


state 150

    (34) operator -> MUL .

    COMMA           reduce using rule 34 (operator -> MUL .)


state 151

    (35) operator -> DIV .

    COMMA           reduce using rule 35 (operator -> DIV .)


state 152

    (47) untilbody -> UNTIL LPARENT instructions RPARENT condition .

    SEMICOLON       reduce using rule 47 (untilbody -> UNTIL LPARENT instructions RPARENT condition .)


state 153

    (48) whilebody -> WHILE condition LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 48 (whilebody -> WHILE condition LPARENT instructions RPARENT .)


state 154

    (49) casebody -> CASE WHEN LPARENT condition RPARENT . THEN LPARENT instructions RPARENT

    THEN            shift and go to state 166


state 155

    (52) innercasebody -> WHEN NUMBER THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 167


state 156

    (53) innercasebody -> WHEN TRUE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 168


state 157

    (54) innercasebody -> WHEN FALSE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 169


state 158

    (8) instructions -> NEW ID LPARENT datatype COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 170


state 159

    (9) instructions -> VALUES LPARENT ID COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 171


state 160

    (11) instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 11 (instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 11 (instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .)


state 161

    (14) instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 14 (instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 14 (instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .)


state 162

    (16) instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 16 (instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 16 (instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .)


state 163

    (20) instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 20 (instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 20 (instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .)


state 164

    (22) instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 22 (instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 22 (instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .)


state 165

    (25) alterbody -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT
    (28) value -> . NUMBER
    (29) value -> . TRUE
    (30) value -> . FALSE
    (31) value -> . alterbody
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 71
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    ALTER           shift and go to state 30

    value                          shift and go to state 172
    alterbody                      shift and go to state 74

state 166

    (49) casebody -> CASE WHEN LPARENT condition RPARENT THEN . LPARENT instructions RPARENT

    LPARENT         shift and go to state 173


state 167

    (52) innercasebody -> WHEN NUMBER THEN LPARENT . instructions RPARENT innercasebody
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 174
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 168

    (53) innercasebody -> WHEN TRUE THEN LPARENT . instructions RPARENT innercasebody
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 175
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 169

    (54) innercasebody -> WHEN FALSE THEN LPARENT . instructions RPARENT innercasebody
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 176
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 170

    (8) instructions -> NEW ID LPARENT datatype COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 177


state 171

    (9) instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 178
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 172

    (25) alterbody -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT

    RPARENT         shift and go to state 179


state 173

    (49) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT . instructions RPARENT
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 180
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 174

    (52) innercasebody -> WHEN NUMBER THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 181


state 175

    (53) innercasebody -> WHEN TRUE THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 182


state 176

    (54) innercasebody -> WHEN FALSE THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 183


state 177

    (8) instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . alterbody SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (25) alterbody -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT
    (47) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (48) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (49) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (51) casebody -> . CASE ID innercasebody
    (63) istrue -> . VERT LPARENT ID RPARENT
    (67) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    ALTER           shift and go to state 30
    UNTIL           shift and go to state 31
    WHILE           shift and go to state 32
    CASE            shift and go to state 33
    VERT            shift and go to state 34
    RPARENT         reduce using rule 67 (empty -> .)
    BREAK           reduce using rule 67 (empty -> .)

    instructions                   shift and go to state 184
    alterbody                      shift and go to state 15
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 178

    (9) instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 9 (instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 9 (instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .)


state 179

    (25) alterbody -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .

    SEMICOLON       reduce using rule 25 (alterbody -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .)
    RPARENT         reduce using rule 25 (alterbody -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .)


state 180

    (49) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions . RPARENT

    RPARENT         shift and go to state 185


state 181

    (52) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT . innercasebody
    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (55) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 108
    SEMICOLON       reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 186
    empty                          shift and go to state 109

state 182

    (53) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT . innercasebody
    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (55) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 108
    SEMICOLON       reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 187
    empty                          shift and go to state 109

state 183

    (54) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT . innercasebody
    (52) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (55) innercasebody -> . empty
    (67) empty -> .

    WHEN            shift and go to state 108
    SEMICOLON       reduce using rule 67 (empty -> .)
    ELSE            reduce using rule 67 (empty -> .)

    innercasebody                  shift and go to state 188
    empty                          shift and go to state 109

state 184

    (8) instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 8 (instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 8 (instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .)


state 185

    (49) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 49 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)
    ELSE            reduce using rule 49 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)


state 186

    (52) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 52 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 52 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)


state 187

    (53) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 53 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 53 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)


state 188

    (54) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 54 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 54 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 5 resolved using rule (bodyprogram -> procedure)
WARNING: rejected rule (empty -> <empty>) in state 5
