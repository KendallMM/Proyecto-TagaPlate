Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> COMMENT bodyprogram
Rule 2     bodyprogram -> procedure bodyprogram
Rule 3     bodyprogram -> procedure
Rule 4     bodyprogram -> COMMENT
Rule 5     bodyprogram -> empty
Rule 6     procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON
Rule 7     procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON
Rule 8     instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
Rule 9     instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
Rule 10    instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
Rule 11    instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions
Rule 12    instructions -> MOVR SEMICOLON instructions
Rule 13    instructions -> MOVL SEMICOLON instructions
Rule 14    instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions
Rule 15    instructions -> STOP SEMICOLON instructions
Rule 16    instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
Rule 17    instructions -> untilbody SEMICOLON instructions
Rule 18    instructions -> whilebody SEMICOLON instructions
Rule 19    instructions -> casebody SEMICOLON instructions
Rule 20    instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions
Rule 21    instructions -> istrue SEMICOLON instructions
Rule 22    instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions
Rule 23    instructions -> COMMENT instructions
Rule 24    instructions -> empty
Rule 25    datatype -> NUMVAL
Rule 26    datatype -> BOOLVAL
Rule 27    value -> NUMBER
Rule 28    value -> TRUE
Rule 29    value -> FALSE
Rule 30    value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT
Rule 31    operator -> ADD
Rule 32    operator -> SUB
Rule 33    operator -> MUL
Rule 34    operator -> DIV
Rule 35    comparator -> GT
Rule 36    comparator -> LT
Rule 37    comparator -> GET
Rule 38    comparator -> LET
Rule 39    comparator -> EQ
Rule 40    comparator -> DT
Rule 41    position -> NORTH
Rule 42    position -> SOUTH
Rule 43    position -> EAST
Rule 44    position -> WEST
Rule 45    repeat_instructions -> instructions BREAK
Rule 46    untilbody -> UNTIL LPARENT instructions RPARENT condition
Rule 47    whilebody -> WHILE condition LPARENT instructions RPARENT
Rule 48    casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
Rule 49    casebody -> casebody ELSE LPARENT instructions RPARENT
Rule 50    casebody -> CASE ID innercasebody
Rule 51    innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
Rule 52    innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
Rule 53    innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
Rule 54    innercasebody -> empty
Rule 55    condition -> ID comparator ID
Rule 56    condition -> ID comparator NUMBER
Rule 57    condition -> NUMBER comparator ID
Rule 58    condition -> NUMBER comparator NUMBER
Rule 59    condition -> TRUE
Rule 60    condition -> FALSE
Rule 61    condition -> istrue
Rule 62    istrue -> VERT LPARENT ID RPARENT
Rule 63    printvalues -> STRING printvalues
Rule 64    printvalues -> COMMA ID printvalues
Rule 65    printvalues -> empty
Rule 66    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 31
ALTER                : 10 30
ALTERB               : 11
BOOLVAL              : 26
BREAK                : 45
CALL                 : 22
CASE                 : 48 50
COMMA                : 8 9 10 10 30 30 64
COMMENT              : 1 4 23
DIV                  : 34
DT                   : 40
EAST                 : 43
ELSE                 : 49
EQ                   : 39
FALSE                : 29 53 60
GET                  : 37
GT                   : 35
HAMMER               : 14
ID                   : 7 8 9 10 22 30 50 55 55 56 57 62 64
LET                  : 38
LPARENT              : 6 7 8 9 10 11 14 16 20 22 30 46 47 48 48 49 51 52 53 62
LT                   : 36
MOVL                 : 13
MOVR                 : 12
MUL                  : 33
NEW                  : 8
NORTH                : 41
NUMBER               : 27 51 56 57 58 58
NUMVAL               : 25
PRINCIPAL            : 6
PRINT                : 20
PROCEDURE            : 7
REPEAT               : 16
RPARENT              : 6 7 8 9 10 11 14 16 20 22 30 46 47 48 48 49 51 52 53 62
SEMICOLON            : 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
SOUTH                : 42
STOP                 : 15
STRING               : 63
SUB                  : 32
THEN                 : 48 51 52 53
TRUE                 : 28 52 59
UNTIL                : 46
VALUES               : 9
VERT                 : 62
WEST                 : 44
WHEN                 : 48 51 52 53
WHILE                : 47
error                : 

Nonterminals, with rules where they appear

bodyprogram          : 1 2
casebody             : 19 49
comparator           : 55 56 57 58
condition            : 46 47 48
datatype             : 8
empty                : 5 24 54 65
innercasebody        : 50 51 52 53
instructions         : 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 45 46 47 48 49 51 52 53
istrue               : 21 61
operator             : 10 30
position             : 14
printvalues          : 20 63 64
procedure            : 2 3
program              : 0
repeat_instructions  : 16
untilbody            : 17
value                : 8 9 10 11 30
whilebody            : 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . COMMENT bodyprogram

    COMMENT         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> COMMENT . bodyprogram
    (2) bodyprogram -> . procedure bodyprogram
    (3) bodyprogram -> . procedure
    (4) bodyprogram -> . COMMENT
    (5) bodyprogram -> . empty
    (6) procedure -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON
    (7) procedure -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON
    (66) empty -> .

    COMMENT         shift and go to state 3
    PRINCIPAL       shift and go to state 7
    PROCEDURE       shift and go to state 8
    $end            reduce using rule 66 (empty -> .)

    bodyprogram                    shift and go to state 4
    procedure                      shift and go to state 5
    empty                          shift and go to state 6

state 3

    (4) bodyprogram -> COMMENT .

    $end            reduce using rule 4 (bodyprogram -> COMMENT .)


state 4

    (1) program -> COMMENT bodyprogram .

    $end            reduce using rule 1 (program -> COMMENT bodyprogram .)


state 5

    (2) bodyprogram -> procedure . bodyprogram
    (3) bodyprogram -> procedure .
    (2) bodyprogram -> . procedure bodyprogram
    (3) bodyprogram -> . procedure
    (4) bodyprogram -> . COMMENT
    (5) bodyprogram -> . empty
    (6) procedure -> . PRINCIPAL LPARENT instructions RPARENT SEMICOLON
    (7) procedure -> . PROCEDURE ID LPARENT instructions RPARENT SEMICOLON
    (66) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 3 (bodyprogram -> procedure .)
    $end            reduce using rule 3 (bodyprogram -> procedure .)
    COMMENT         shift and go to state 3
    PRINCIPAL       shift and go to state 7
    PROCEDURE       shift and go to state 8

  ! $end            [ reduce using rule 66 (empty -> .) ]

    procedure                      shift and go to state 5
    bodyprogram                    shift and go to state 9
    empty                          shift and go to state 6

state 6

    (5) bodyprogram -> empty .

    $end            reduce using rule 5 (bodyprogram -> empty .)


state 7

    (6) procedure -> PRINCIPAL . LPARENT instructions RPARENT SEMICOLON

    LPARENT         shift and go to state 10


state 8

    (7) procedure -> PROCEDURE . ID LPARENT instructions RPARENT SEMICOLON

    ID              shift and go to state 11


state 9

    (2) bodyprogram -> procedure bodyprogram .

    $end            reduce using rule 2 (bodyprogram -> procedure bodyprogram .)


state 10

    (6) procedure -> PRINCIPAL LPARENT . instructions RPARENT SEMICOLON
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 12
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 11

    (7) procedure -> PROCEDURE ID . LPARENT instructions RPARENT SEMICOLON

    LPARENT         shift and go to state 34


state 12

    (6) procedure -> PRINCIPAL LPARENT instructions . RPARENT SEMICOLON

    RPARENT         shift and go to state 35


state 13

    (8) instructions -> NEW . ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 36


state 14

    (9) instructions -> VALUES . LPARENT ID COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 37


state 15

    (10) instructions -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 38


state 16

    (11) instructions -> ALTERB . LPARENT value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 39


state 17

    (12) instructions -> MOVR . SEMICOLON instructions

    SEMICOLON       shift and go to state 40


state 18

    (13) instructions -> MOVL . SEMICOLON instructions

    SEMICOLON       shift and go to state 41


state 19

    (14) instructions -> HAMMER . LPARENT position RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 42


state 20

    (15) instructions -> STOP . SEMICOLON instructions

    SEMICOLON       shift and go to state 43


state 21

    (16) instructions -> REPEAT . LPARENT repeat_instructions RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 44


state 22

    (17) instructions -> untilbody . SEMICOLON instructions

    SEMICOLON       shift and go to state 45


state 23

    (18) instructions -> whilebody . SEMICOLON instructions

    SEMICOLON       shift and go to state 46


state 24

    (19) instructions -> casebody . SEMICOLON instructions
    (49) casebody -> casebody . ELSE LPARENT instructions RPARENT

    SEMICOLON       shift and go to state 47
    ELSE            shift and go to state 48


state 25

    (20) instructions -> PRINT . LPARENT printvalues RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 49


state 26

    (21) instructions -> istrue . SEMICOLON instructions

    SEMICOLON       shift and go to state 50


state 27

    (22) instructions -> CALL . LPARENT ID RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 51


state 28

    (23) instructions -> COMMENT . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 52
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 29

    (24) instructions -> empty .

    RPARENT         reduce using rule 24 (instructions -> empty .)
    BREAK           reduce using rule 24 (instructions -> empty .)


state 30

    (46) untilbody -> UNTIL . LPARENT instructions RPARENT condition

    LPARENT         shift and go to state 53


state 31

    (47) whilebody -> WHILE . condition LPARENT instructions RPARENT
    (55) condition -> . ID comparator ID
    (56) condition -> . ID comparator NUMBER
    (57) condition -> . NUMBER comparator ID
    (58) condition -> . NUMBER comparator NUMBER
    (59) condition -> . TRUE
    (60) condition -> . FALSE
    (61) condition -> . istrue
    (62) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 55
    NUMBER          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    VERT            shift and go to state 33

    condition                      shift and go to state 54
    istrue                         shift and go to state 59

state 32

    (48) casebody -> CASE . WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (50) casebody -> CASE . ID innercasebody

    WHEN            shift and go to state 60
    ID              shift and go to state 61


state 33

    (62) istrue -> VERT . LPARENT ID RPARENT

    LPARENT         shift and go to state 62


state 34

    (7) procedure -> PROCEDURE ID LPARENT . instructions RPARENT SEMICOLON
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 63
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 35

    (6) procedure -> PRINCIPAL LPARENT instructions RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 64


state 36

    (8) instructions -> NEW ID . LPARENT datatype COMMA value RPARENT SEMICOLON instructions

    LPARENT         shift and go to state 65


state 37

    (9) instructions -> VALUES LPARENT . ID COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 66


state 38

    (10) instructions -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT SEMICOLON instructions

    ID              shift and go to state 67


state 39

    (11) instructions -> ALTERB LPARENT . value RPARENT SEMICOLON instructions
    (27) value -> . NUMBER
    (28) value -> . TRUE
    (29) value -> . FALSE
    (30) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    ALTER           shift and go to state 72

    value                          shift and go to state 68

state 40

    (12) instructions -> MOVR SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 73
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 41

    (13) instructions -> MOVL SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 74
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 42

    (14) instructions -> HAMMER LPARENT . position RPARENT SEMICOLON instructions
    (41) position -> . NORTH
    (42) position -> . SOUTH
    (43) position -> . EAST
    (44) position -> . WEST

    NORTH           shift and go to state 76
    SOUTH           shift and go to state 77
    EAST            shift and go to state 78
    WEST            shift and go to state 79

    position                       shift and go to state 75

state 43

    (15) instructions -> STOP SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 80
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 44

    (16) instructions -> REPEAT LPARENT . repeat_instructions RPARENT SEMICOLON instructions
    (45) repeat_instructions -> . instructions BREAK
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    BREAK           reduce using rule 66 (empty -> .)

    repeat_instructions            shift and go to state 81
    instructions                   shift and go to state 82
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 45

    (17) instructions -> untilbody SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    untilbody                      shift and go to state 22
    instructions                   shift and go to state 83
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 46

    (18) instructions -> whilebody SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    whilebody                      shift and go to state 23
    instructions                   shift and go to state 84
    untilbody                      shift and go to state 22
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 47

    (19) instructions -> casebody SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    casebody                       shift and go to state 24
    instructions                   shift and go to state 85
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 48

    (49) casebody -> casebody ELSE . LPARENT instructions RPARENT

    LPARENT         shift and go to state 86


state 49

    (20) instructions -> PRINT LPARENT . printvalues RPARENT SEMICOLON instructions
    (63) printvalues -> . STRING printvalues
    (64) printvalues -> . COMMA ID printvalues
    (65) printvalues -> . empty
    (66) empty -> .

    STRING          shift and go to state 88
    COMMA           shift and go to state 89
    RPARENT         reduce using rule 66 (empty -> .)

    printvalues                    shift and go to state 87
    empty                          shift and go to state 90

state 50

    (21) instructions -> istrue SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    istrue                         shift and go to state 26
    instructions                   shift and go to state 91
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    empty                          shift and go to state 29

state 51

    (22) instructions -> CALL LPARENT . ID RPARENT SEMICOLON instructions

    ID              shift and go to state 92


state 52

    (23) instructions -> COMMENT instructions .

    RPARENT         reduce using rule 23 (instructions -> COMMENT instructions .)
    BREAK           reduce using rule 23 (instructions -> COMMENT instructions .)


state 53

    (46) untilbody -> UNTIL LPARENT . instructions RPARENT condition
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 93
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 54

    (47) whilebody -> WHILE condition . LPARENT instructions RPARENT

    LPARENT         shift and go to state 94


state 55

    (55) condition -> ID . comparator ID
    (56) condition -> ID . comparator NUMBER
    (35) comparator -> . GT
    (36) comparator -> . LT
    (37) comparator -> . GET
    (38) comparator -> . LET
    (39) comparator -> . EQ
    (40) comparator -> . DT

    GT              shift and go to state 96
    LT              shift and go to state 97
    GET             shift and go to state 98
    LET             shift and go to state 99
    EQ              shift and go to state 100
    DT              shift and go to state 101

    comparator                     shift and go to state 95

state 56

    (57) condition -> NUMBER . comparator ID
    (58) condition -> NUMBER . comparator NUMBER
    (35) comparator -> . GT
    (36) comparator -> . LT
    (37) comparator -> . GET
    (38) comparator -> . LET
    (39) comparator -> . EQ
    (40) comparator -> . DT

    GT              shift and go to state 96
    LT              shift and go to state 97
    GET             shift and go to state 98
    LET             shift and go to state 99
    EQ              shift and go to state 100
    DT              shift and go to state 101

    comparator                     shift and go to state 102

state 57

    (59) condition -> TRUE .

    LPARENT         reduce using rule 59 (condition -> TRUE .)
    RPARENT         reduce using rule 59 (condition -> TRUE .)
    SEMICOLON       reduce using rule 59 (condition -> TRUE .)


state 58

    (60) condition -> FALSE .

    LPARENT         reduce using rule 60 (condition -> FALSE .)
    RPARENT         reduce using rule 60 (condition -> FALSE .)
    SEMICOLON       reduce using rule 60 (condition -> FALSE .)


state 59

    (61) condition -> istrue .

    LPARENT         reduce using rule 61 (condition -> istrue .)
    RPARENT         reduce using rule 61 (condition -> istrue .)
    SEMICOLON       reduce using rule 61 (condition -> istrue .)


state 60

    (48) casebody -> CASE WHEN . LPARENT condition RPARENT THEN LPARENT instructions RPARENT

    LPARENT         shift and go to state 103


state 61

    (50) casebody -> CASE ID . innercasebody
    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . empty
    (66) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 66 (empty -> .)
    ELSE            reduce using rule 66 (empty -> .)

    innercasebody                  shift and go to state 104
    empty                          shift and go to state 106

state 62

    (62) istrue -> VERT LPARENT . ID RPARENT

    ID              shift and go to state 107


state 63

    (7) procedure -> PROCEDURE ID LPARENT instructions . RPARENT SEMICOLON

    RPARENT         shift and go to state 108


state 64

    (6) procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .

    COMMENT         reduce using rule 6 (procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    PRINCIPAL       reduce using rule 6 (procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    PROCEDURE       reduce using rule 6 (procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)
    $end            reduce using rule 6 (procedure -> PRINCIPAL LPARENT instructions RPARENT SEMICOLON .)


state 65

    (8) instructions -> NEW ID LPARENT . datatype COMMA value RPARENT SEMICOLON instructions
    (25) datatype -> . NUMVAL
    (26) datatype -> . BOOLVAL

    NUMVAL          shift and go to state 110
    BOOLVAL         shift and go to state 111

    datatype                       shift and go to state 109

state 66

    (9) instructions -> VALUES LPARENT ID . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 112


state 67

    (10) instructions -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 113


state 68

    (11) instructions -> ALTERB LPARENT value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 114


state 69

    (27) value -> NUMBER .

    RPARENT         reduce using rule 27 (value -> NUMBER .)


state 70

    (28) value -> TRUE .

    RPARENT         reduce using rule 28 (value -> TRUE .)


state 71

    (29) value -> FALSE .

    RPARENT         reduce using rule 29 (value -> FALSE .)


state 72

    (30) value -> ALTER . LPARENT ID COMMA operator COMMA value RPARENT

    LPARENT         shift and go to state 115


state 73

    (12) instructions -> MOVR SEMICOLON instructions .

    RPARENT         reduce using rule 12 (instructions -> MOVR SEMICOLON instructions .)
    BREAK           reduce using rule 12 (instructions -> MOVR SEMICOLON instructions .)


state 74

    (13) instructions -> MOVL SEMICOLON instructions .

    RPARENT         reduce using rule 13 (instructions -> MOVL SEMICOLON instructions .)
    BREAK           reduce using rule 13 (instructions -> MOVL SEMICOLON instructions .)


state 75

    (14) instructions -> HAMMER LPARENT position . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 116


state 76

    (41) position -> NORTH .

    RPARENT         reduce using rule 41 (position -> NORTH .)


state 77

    (42) position -> SOUTH .

    RPARENT         reduce using rule 42 (position -> SOUTH .)


state 78

    (43) position -> EAST .

    RPARENT         reduce using rule 43 (position -> EAST .)


state 79

    (44) position -> WEST .

    RPARENT         reduce using rule 44 (position -> WEST .)


state 80

    (15) instructions -> STOP SEMICOLON instructions .

    RPARENT         reduce using rule 15 (instructions -> STOP SEMICOLON instructions .)
    BREAK           reduce using rule 15 (instructions -> STOP SEMICOLON instructions .)


state 81

    (16) instructions -> REPEAT LPARENT repeat_instructions . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 117


state 82

    (45) repeat_instructions -> instructions . BREAK

    BREAK           shift and go to state 118


state 83

    (17) instructions -> untilbody SEMICOLON instructions .

    RPARENT         reduce using rule 17 (instructions -> untilbody SEMICOLON instructions .)
    BREAK           reduce using rule 17 (instructions -> untilbody SEMICOLON instructions .)


state 84

    (18) instructions -> whilebody SEMICOLON instructions .

    RPARENT         reduce using rule 18 (instructions -> whilebody SEMICOLON instructions .)
    BREAK           reduce using rule 18 (instructions -> whilebody SEMICOLON instructions .)


state 85

    (19) instructions -> casebody SEMICOLON instructions .

    RPARENT         reduce using rule 19 (instructions -> casebody SEMICOLON instructions .)
    BREAK           reduce using rule 19 (instructions -> casebody SEMICOLON instructions .)


state 86

    (49) casebody -> casebody ELSE LPARENT . instructions RPARENT
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)

    casebody                       shift and go to state 24
    instructions                   shift and go to state 119
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 87

    (20) instructions -> PRINT LPARENT printvalues . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 120


state 88

    (63) printvalues -> STRING . printvalues
    (63) printvalues -> . STRING printvalues
    (64) printvalues -> . COMMA ID printvalues
    (65) printvalues -> . empty
    (66) empty -> .

    STRING          shift and go to state 88
    COMMA           shift and go to state 89
    RPARENT         reduce using rule 66 (empty -> .)

    printvalues                    shift and go to state 121
    empty                          shift and go to state 90

state 89

    (64) printvalues -> COMMA . ID printvalues

    ID              shift and go to state 122


state 90

    (65) printvalues -> empty .

    RPARENT         reduce using rule 65 (printvalues -> empty .)


state 91

    (21) instructions -> istrue SEMICOLON instructions .

    RPARENT         reduce using rule 21 (instructions -> istrue SEMICOLON instructions .)
    BREAK           reduce using rule 21 (instructions -> istrue SEMICOLON instructions .)


state 92

    (22) instructions -> CALL LPARENT ID . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 123


state 93

    (46) untilbody -> UNTIL LPARENT instructions . RPARENT condition

    RPARENT         shift and go to state 124


state 94

    (47) whilebody -> WHILE condition LPARENT . instructions RPARENT
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 125
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 95

    (55) condition -> ID comparator . ID
    (56) condition -> ID comparator . NUMBER

    ID              shift and go to state 126
    NUMBER          shift and go to state 127


state 96

    (35) comparator -> GT .

    ID              reduce using rule 35 (comparator -> GT .)
    NUMBER          reduce using rule 35 (comparator -> GT .)


state 97

    (36) comparator -> LT .

    ID              reduce using rule 36 (comparator -> LT .)
    NUMBER          reduce using rule 36 (comparator -> LT .)


state 98

    (37) comparator -> GET .

    ID              reduce using rule 37 (comparator -> GET .)
    NUMBER          reduce using rule 37 (comparator -> GET .)


state 99

    (38) comparator -> LET .

    ID              reduce using rule 38 (comparator -> LET .)
    NUMBER          reduce using rule 38 (comparator -> LET .)


state 100

    (39) comparator -> EQ .

    ID              reduce using rule 39 (comparator -> EQ .)
    NUMBER          reduce using rule 39 (comparator -> EQ .)


state 101

    (40) comparator -> DT .

    ID              reduce using rule 40 (comparator -> DT .)
    NUMBER          reduce using rule 40 (comparator -> DT .)


state 102

    (57) condition -> NUMBER comparator . ID
    (58) condition -> NUMBER comparator . NUMBER

    ID              shift and go to state 129
    NUMBER          shift and go to state 128


state 103

    (48) casebody -> CASE WHEN LPARENT . condition RPARENT THEN LPARENT instructions RPARENT
    (55) condition -> . ID comparator ID
    (56) condition -> . ID comparator NUMBER
    (57) condition -> . NUMBER comparator ID
    (58) condition -> . NUMBER comparator NUMBER
    (59) condition -> . TRUE
    (60) condition -> . FALSE
    (61) condition -> . istrue
    (62) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 55
    NUMBER          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    VERT            shift and go to state 33

    condition                      shift and go to state 130
    istrue                         shift and go to state 59

state 104

    (50) casebody -> CASE ID innercasebody .

    SEMICOLON       reduce using rule 50 (casebody -> CASE ID innercasebody .)
    ELSE            reduce using rule 50 (casebody -> CASE ID innercasebody .)


state 105

    (51) innercasebody -> WHEN . NUMBER THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> WHEN . TRUE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> WHEN . FALSE THEN LPARENT instructions RPARENT innercasebody

    NUMBER          shift and go to state 131
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133


state 106

    (54) innercasebody -> empty .

    SEMICOLON       reduce using rule 54 (innercasebody -> empty .)
    ELSE            reduce using rule 54 (innercasebody -> empty .)


state 107

    (62) istrue -> VERT LPARENT ID . RPARENT

    RPARENT         shift and go to state 134


state 108

    (7) procedure -> PROCEDURE ID LPARENT instructions RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 135


state 109

    (8) instructions -> NEW ID LPARENT datatype . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 136


state 110

    (25) datatype -> NUMVAL .

    COMMA           reduce using rule 25 (datatype -> NUMVAL .)


state 111

    (26) datatype -> BOOLVAL .

    COMMA           reduce using rule 26 (datatype -> BOOLVAL .)


state 112

    (9) instructions -> VALUES LPARENT ID COMMA . value RPARENT SEMICOLON instructions
    (27) value -> . NUMBER
    (28) value -> . TRUE
    (29) value -> . FALSE
    (30) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    ALTER           shift and go to state 72

    value                          shift and go to state 137

state 113

    (10) instructions -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT SEMICOLON instructions
    (31) operator -> . ADD
    (32) operator -> . SUB
    (33) operator -> . MUL
    (34) operator -> . DIV

    ADD             shift and go to state 139
    SUB             shift and go to state 140
    MUL             shift and go to state 141
    DIV             shift and go to state 142

    operator                       shift and go to state 138

state 114

    (11) instructions -> ALTERB LPARENT value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 143


state 115

    (30) value -> ALTER LPARENT . ID COMMA operator COMMA value RPARENT

    ID              shift and go to state 144


state 116

    (14) instructions -> HAMMER LPARENT position RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 145


state 117

    (16) instructions -> REPEAT LPARENT repeat_instructions RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 146


state 118

    (45) repeat_instructions -> instructions BREAK .

    RPARENT         reduce using rule 45 (repeat_instructions -> instructions BREAK .)


state 119

    (49) casebody -> casebody ELSE LPARENT instructions . RPARENT

    RPARENT         shift and go to state 147


state 120

    (20) instructions -> PRINT LPARENT printvalues RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 148


state 121

    (63) printvalues -> STRING printvalues .

    RPARENT         reduce using rule 63 (printvalues -> STRING printvalues .)


state 122

    (64) printvalues -> COMMA ID . printvalues
    (63) printvalues -> . STRING printvalues
    (64) printvalues -> . COMMA ID printvalues
    (65) printvalues -> . empty
    (66) empty -> .

    STRING          shift and go to state 88
    COMMA           shift and go to state 89
    RPARENT         reduce using rule 66 (empty -> .)

    printvalues                    shift and go to state 149
    empty                          shift and go to state 90

state 123

    (22) instructions -> CALL LPARENT ID RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 150


state 124

    (46) untilbody -> UNTIL LPARENT instructions RPARENT . condition
    (55) condition -> . ID comparator ID
    (56) condition -> . ID comparator NUMBER
    (57) condition -> . NUMBER comparator ID
    (58) condition -> . NUMBER comparator NUMBER
    (59) condition -> . TRUE
    (60) condition -> . FALSE
    (61) condition -> . istrue
    (62) istrue -> . VERT LPARENT ID RPARENT

    ID              shift and go to state 55
    NUMBER          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    VERT            shift and go to state 33

    condition                      shift and go to state 151
    istrue                         shift and go to state 59

state 125

    (47) whilebody -> WHILE condition LPARENT instructions . RPARENT

    RPARENT         shift and go to state 152


state 126

    (55) condition -> ID comparator ID .

    LPARENT         reduce using rule 55 (condition -> ID comparator ID .)
    RPARENT         reduce using rule 55 (condition -> ID comparator ID .)
    SEMICOLON       reduce using rule 55 (condition -> ID comparator ID .)


state 127

    (56) condition -> ID comparator NUMBER .

    LPARENT         reduce using rule 56 (condition -> ID comparator NUMBER .)
    RPARENT         reduce using rule 56 (condition -> ID comparator NUMBER .)
    SEMICOLON       reduce using rule 56 (condition -> ID comparator NUMBER .)


state 128

    (58) condition -> NUMBER comparator NUMBER .

    LPARENT         reduce using rule 58 (condition -> NUMBER comparator NUMBER .)
    RPARENT         reduce using rule 58 (condition -> NUMBER comparator NUMBER .)
    SEMICOLON       reduce using rule 58 (condition -> NUMBER comparator NUMBER .)


state 129

    (57) condition -> NUMBER comparator ID .

    LPARENT         reduce using rule 57 (condition -> NUMBER comparator ID .)
    RPARENT         reduce using rule 57 (condition -> NUMBER comparator ID .)
    SEMICOLON       reduce using rule 57 (condition -> NUMBER comparator ID .)


state 130

    (48) casebody -> CASE WHEN LPARENT condition . RPARENT THEN LPARENT instructions RPARENT

    RPARENT         shift and go to state 153


state 131

    (51) innercasebody -> WHEN NUMBER . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 154


state 132

    (52) innercasebody -> WHEN TRUE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 155


state 133

    (53) innercasebody -> WHEN FALSE . THEN LPARENT instructions RPARENT innercasebody

    THEN            shift and go to state 156


state 134

    (62) istrue -> VERT LPARENT ID RPARENT .

    SEMICOLON       reduce using rule 62 (istrue -> VERT LPARENT ID RPARENT .)
    LPARENT         reduce using rule 62 (istrue -> VERT LPARENT ID RPARENT .)
    RPARENT         reduce using rule 62 (istrue -> VERT LPARENT ID RPARENT .)


state 135

    (7) procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .

    COMMENT         reduce using rule 7 (procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .)
    PRINCIPAL       reduce using rule 7 (procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .)
    PROCEDURE       reduce using rule 7 (procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .)
    $end            reduce using rule 7 (procedure -> PROCEDURE ID LPARENT instructions RPARENT SEMICOLON .)


state 136

    (8) instructions -> NEW ID LPARENT datatype COMMA . value RPARENT SEMICOLON instructions
    (27) value -> . NUMBER
    (28) value -> . TRUE
    (29) value -> . FALSE
    (30) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    ALTER           shift and go to state 72

    value                          shift and go to state 157

state 137

    (9) instructions -> VALUES LPARENT ID COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 158


state 138

    (10) instructions -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT SEMICOLON instructions

    COMMA           shift and go to state 159


state 139

    (31) operator -> ADD .

    COMMA           reduce using rule 31 (operator -> ADD .)


state 140

    (32) operator -> SUB .

    COMMA           reduce using rule 32 (operator -> SUB .)


state 141

    (33) operator -> MUL .

    COMMA           reduce using rule 33 (operator -> MUL .)


state 142

    (34) operator -> DIV .

    COMMA           reduce using rule 34 (operator -> DIV .)


state 143

    (11) instructions -> ALTERB LPARENT value RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 160
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 144

    (30) value -> ALTER LPARENT ID . COMMA operator COMMA value RPARENT

    COMMA           shift and go to state 161


state 145

    (14) instructions -> HAMMER LPARENT position RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 162
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 146

    (16) instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 163
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 147

    (49) casebody -> casebody ELSE LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 49 (casebody -> casebody ELSE LPARENT instructions RPARENT .)
    ELSE            reduce using rule 49 (casebody -> casebody ELSE LPARENT instructions RPARENT .)


state 148

    (20) instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 164
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 149

    (64) printvalues -> COMMA ID printvalues .

    RPARENT         reduce using rule 64 (printvalues -> COMMA ID printvalues .)


state 150

    (22) instructions -> CALL LPARENT ID RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 165
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 151

    (46) untilbody -> UNTIL LPARENT instructions RPARENT condition .

    SEMICOLON       reduce using rule 46 (untilbody -> UNTIL LPARENT instructions RPARENT condition .)


state 152

    (47) whilebody -> WHILE condition LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 47 (whilebody -> WHILE condition LPARENT instructions RPARENT .)


state 153

    (48) casebody -> CASE WHEN LPARENT condition RPARENT . THEN LPARENT instructions RPARENT

    THEN            shift and go to state 166


state 154

    (51) innercasebody -> WHEN NUMBER THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 167


state 155

    (52) innercasebody -> WHEN TRUE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 168


state 156

    (53) innercasebody -> WHEN FALSE THEN . LPARENT instructions RPARENT innercasebody

    LPARENT         shift and go to state 169


state 157

    (8) instructions -> NEW ID LPARENT datatype COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 170


state 158

    (9) instructions -> VALUES LPARENT ID COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 171


state 159

    (10) instructions -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT SEMICOLON instructions
    (27) value -> . NUMBER
    (28) value -> . TRUE
    (29) value -> . FALSE
    (30) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    ALTER           shift and go to state 72

    value                          shift and go to state 172

state 160

    (11) instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 11 (instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 11 (instructions -> ALTERB LPARENT value RPARENT SEMICOLON instructions .)


state 161

    (30) value -> ALTER LPARENT ID COMMA . operator COMMA value RPARENT
    (31) operator -> . ADD
    (32) operator -> . SUB
    (33) operator -> . MUL
    (34) operator -> . DIV

    ADD             shift and go to state 139
    SUB             shift and go to state 140
    MUL             shift and go to state 141
    DIV             shift and go to state 142

    operator                       shift and go to state 173

state 162

    (14) instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 14 (instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 14 (instructions -> HAMMER LPARENT position RPARENT SEMICOLON instructions .)


state 163

    (16) instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 16 (instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 16 (instructions -> REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions .)


state 164

    (20) instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 20 (instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 20 (instructions -> PRINT LPARENT printvalues RPARENT SEMICOLON instructions .)


state 165

    (22) instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 22 (instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 22 (instructions -> CALL LPARENT ID RPARENT SEMICOLON instructions .)


state 166

    (48) casebody -> CASE WHEN LPARENT condition RPARENT THEN . LPARENT instructions RPARENT

    LPARENT         shift and go to state 174


state 167

    (51) innercasebody -> WHEN NUMBER THEN LPARENT . instructions RPARENT innercasebody
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 175
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 168

    (52) innercasebody -> WHEN TRUE THEN LPARENT . instructions RPARENT innercasebody
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 176
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 169

    (53) innercasebody -> WHEN FALSE THEN LPARENT . instructions RPARENT innercasebody
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 177
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 170

    (8) instructions -> NEW ID LPARENT datatype COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 178


state 171

    (9) instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 179
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 172

    (10) instructions -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT SEMICOLON instructions

    RPARENT         shift and go to state 180


state 173

    (30) value -> ALTER LPARENT ID COMMA operator . COMMA value RPARENT

    COMMA           shift and go to state 181


state 174

    (48) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT . instructions RPARENT
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 182
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 175

    (51) innercasebody -> WHEN NUMBER THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 183


state 176

    (52) innercasebody -> WHEN TRUE THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 184


state 177

    (53) innercasebody -> WHEN FALSE THEN LPARENT instructions . RPARENT innercasebody

    RPARENT         shift and go to state 185


state 178

    (8) instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 186
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 179

    (9) instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 9 (instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 9 (instructions -> VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions .)


state 180

    (10) instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT . SEMICOLON instructions

    SEMICOLON       shift and go to state 187


state 181

    (30) value -> ALTER LPARENT ID COMMA operator COMMA . value RPARENT
    (27) value -> . NUMBER
    (28) value -> . TRUE
    (29) value -> . FALSE
    (30) value -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT

    NUMBER          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    ALTER           shift and go to state 72

    value                          shift and go to state 188

state 182

    (48) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions . RPARENT

    RPARENT         shift and go to state 189


state 183

    (51) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT . innercasebody
    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . empty
    (66) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 66 (empty -> .)
    ELSE            reduce using rule 66 (empty -> .)

    innercasebody                  shift and go to state 190
    empty                          shift and go to state 106

state 184

    (52) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT . innercasebody
    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . empty
    (66) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 66 (empty -> .)
    ELSE            reduce using rule 66 (empty -> .)

    innercasebody                  shift and go to state 191
    empty                          shift and go to state 106

state 185

    (53) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT . innercasebody
    (51) innercasebody -> . WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody
    (52) innercasebody -> . WHEN TRUE THEN LPARENT instructions RPARENT innercasebody
    (53) innercasebody -> . WHEN FALSE THEN LPARENT instructions RPARENT innercasebody
    (54) innercasebody -> . empty
    (66) empty -> .

    WHEN            shift and go to state 105
    SEMICOLON       reduce using rule 66 (empty -> .)
    ELSE            reduce using rule 66 (empty -> .)

    innercasebody                  shift and go to state 192
    empty                          shift and go to state 106

state 186

    (8) instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 8 (instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 8 (instructions -> NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions .)


state 187

    (10) instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON . instructions
    (8) instructions -> . NEW ID LPARENT datatype COMMA value RPARENT SEMICOLON instructions
    (9) instructions -> . VALUES LPARENT ID COMMA value RPARENT SEMICOLON instructions
    (10) instructions -> . ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions
    (11) instructions -> . ALTERB LPARENT value RPARENT SEMICOLON instructions
    (12) instructions -> . MOVR SEMICOLON instructions
    (13) instructions -> . MOVL SEMICOLON instructions
    (14) instructions -> . HAMMER LPARENT position RPARENT SEMICOLON instructions
    (15) instructions -> . STOP SEMICOLON instructions
    (16) instructions -> . REPEAT LPARENT repeat_instructions RPARENT SEMICOLON instructions
    (17) instructions -> . untilbody SEMICOLON instructions
    (18) instructions -> . whilebody SEMICOLON instructions
    (19) instructions -> . casebody SEMICOLON instructions
    (20) instructions -> . PRINT LPARENT printvalues RPARENT SEMICOLON instructions
    (21) instructions -> . istrue SEMICOLON instructions
    (22) instructions -> . CALL LPARENT ID RPARENT SEMICOLON instructions
    (23) instructions -> . COMMENT instructions
    (24) instructions -> . empty
    (46) untilbody -> . UNTIL LPARENT instructions RPARENT condition
    (47) whilebody -> . WHILE condition LPARENT instructions RPARENT
    (48) casebody -> . CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT
    (49) casebody -> . casebody ELSE LPARENT instructions RPARENT
    (50) casebody -> . CASE ID innercasebody
    (62) istrue -> . VERT LPARENT ID RPARENT
    (66) empty -> .

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    ALTER           shift and go to state 15
    ALTERB          shift and go to state 16
    MOVR            shift and go to state 17
    MOVL            shift and go to state 18
    HAMMER          shift and go to state 19
    STOP            shift and go to state 20
    REPEAT          shift and go to state 21
    PRINT           shift and go to state 25
    CALL            shift and go to state 27
    COMMENT         shift and go to state 28
    UNTIL           shift and go to state 30
    WHILE           shift and go to state 31
    CASE            shift and go to state 32
    VERT            shift and go to state 33
    RPARENT         reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    instructions                   shift and go to state 193
    untilbody                      shift and go to state 22
    whilebody                      shift and go to state 23
    casebody                       shift and go to state 24
    istrue                         shift and go to state 26
    empty                          shift and go to state 29

state 188

    (30) value -> ALTER LPARENT ID COMMA operator COMMA value . RPARENT

    RPARENT         shift and go to state 194


state 189

    (48) casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .

    SEMICOLON       reduce using rule 48 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)
    ELSE            reduce using rule 48 (casebody -> CASE WHEN LPARENT condition RPARENT THEN LPARENT instructions RPARENT .)


state 190

    (51) innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 51 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 51 (innercasebody -> WHEN NUMBER THEN LPARENT instructions RPARENT innercasebody .)


state 191

    (52) innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 52 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 52 (innercasebody -> WHEN TRUE THEN LPARENT instructions RPARENT innercasebody .)


state 192

    (53) innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .

    SEMICOLON       reduce using rule 53 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)
    ELSE            reduce using rule 53 (innercasebody -> WHEN FALSE THEN LPARENT instructions RPARENT innercasebody .)


state 193

    (10) instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions .

    RPARENT         reduce using rule 10 (instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions .)
    BREAK           reduce using rule 10 (instructions -> ALTER LPARENT ID COMMA operator COMMA value RPARENT SEMICOLON instructions .)


state 194

    (30) value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .

    RPARENT         reduce using rule 30 (value -> ALTER LPARENT ID COMMA operator COMMA value RPARENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 5 resolved using rule (bodyprogram -> procedure)
WARNING: rejected rule (empty -> <empty>) in state 5
